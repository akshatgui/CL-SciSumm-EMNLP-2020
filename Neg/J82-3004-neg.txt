In addition to the cases of left-linear and right linear grammars discussed in Section 3, our algorithm is exact in a variety of interesting cases, including the examples of Church and Patil (1982), which illustrate how typical attachment ambiguities arise as structural ambiguities on regular string sets. $$$$$ American Journal of Computational Linguistics, Volume 8, Number 3-4, July-December 1982 141 Kenneth Church and Ramesh Path Coping with Syntactic Ambiguity sequences of 2n parentheses, such that there are the same number of opens and closes.
In addition to the cases of left-linear and right linear grammars discussed in Section 3, our algorithm is exact in a variety of interesting cases, including the examples of Church and Patil (1982), which illustrate how typical attachment ambiguities arise as structural ambiguities on regular string sets. $$$$$ This abstraction was very strongly influenced by the notion of delayed binding.
In addition to the cases of left-linear and right linear grammars discussed in Section 3, our algorithm is exact in a variety of interesting cases, including the examples of Church and Patil (1982), which illustrate how typical attachment ambiguities arise as structural ambiguities on regular string sets. $$$$$ Sentences are far more ambiguous than one might have thought.

In contrast, our method will produce an exact FSA for many interesting grammars generating regular languages, such as those arising from systematic attachment ambiguities (Church and Patil, 1982). $$$$$ We include it here for expository convenience, as it greatly simplifies the derivations though it should be noted that many of the results could be derived without the assumption.
In contrast, our method will produce an exact FSA for many interesting grammars generating regular languages, such as those arising from systematic attachment ambiguities (Church and Patil, 1982). $$$$$ In some sense, this is a formalization of an idea that has been in the literature for some time.
In contrast, our method will produce an exact FSA for many interesting grammars generating regular languages, such as those arising from systematic attachment ambiguities (Church and Patil, 1982). $$$$$ The table lookup approach works for primitive grammars.

As the NP length increases, the number of possible binary trees (parses) increases with the Catalan numbers (Church and Patil, 1982). $$$$$ Kenneth Church and Ramesh Patil Coping with Syntactic Ambiguity The power series says that the ambiguity of a particular sentence is the product of Cati and Cat, where i is the number of PPs before &quot;is&quot; and j is the number after &quot;is.&quot; This could be incorporated in the table lookup parser as an instruction to &quot;multiply&quot; the ith entry in the table by the jth entry.
As the NP length increases, the number of possible binary trees (parses) increases with the Catalan numbers (Church and Patil, 1982). $$$$$ That is, it is easier for the parser to determine, for example, whether a word is an adj, than it is to decide whether a substring is an ADJS phrase.
As the NP length increases, the number of possible binary trees (parses) increases with the Catalan numbers (Church and Patil, 1982). $$$$$ That is, there is one way to parse &quot;the man on the hill,&quot; two ways to parse &quot;saw the boy with a telescope&quot; (&quot;telescope&quot; is either a complement of &quot;see&quot; as in (54a-c) or is attached to &quot;boy&quot; as in (54d-f)), and three ways to parse the adjuncts (they could both attach to the S (54a,d), or they could both attach to the VP (54b,e), or they could split (54c,f)).

Coordination ambiguity is under-explored, despite being one of the three major sources of structural ambiguity (together with prepositional phrase attachment and noun compound bracketing), and belonging to the class of ambiguities for which the number of analyses is the number of binary trees over the corresponding nodes (Church and Patil, 1982), and despite the fact that conjunctions are among the most frequent words. $$$$$ We would especially like to thank Bill Martin for initiating the project.
Coordination ambiguity is under-explored, despite being one of the three major sources of structural ambiguity (together with prepositional phrase attachment and noun compound bracketing), and belonging to the class of ambiguities for which the number of analyses is the number of binary trees over the corresponding nodes (Church and Patil, 1982), and despite the fact that conjunctions are among the most frequent words. $$$$$ We would like to thank Jon Allen, Sarah Ferguson, Lowell Hawkinson, Kris Halvorsen, Bill Long, Mitch Marcus, Rohit Parikh, and Peter Szolovits for their very useful comments on earlier drafts.
Coordination ambiguity is under-explored, despite being one of the three major sources of structural ambiguity (together with prepositional phrase attachment and noun compound bracketing), and belonging to the class of ambiguities for which the number of analyses is the number of binary trees over the corresponding nodes (Church and Patil, 1982), and despite the fact that conjunctions are among the most frequent words. $$$$$ We would like to thank Jon Allen, Sarah Ferguson, Lowell Hawkinson, Kris Halvorsen, Bill Long, Mitch Marcus, Rohit Parikh, and Peter Szolovits for their very useful comments on earlier drafts.
Coordination ambiguity is under-explored, despite being one of the three major sources of structural ambiguity (together with prepositional phrase attachment and noun compound bracketing), and belonging to the class of ambiguities for which the number of analyses is the number of binary trees over the corresponding nodes (Church and Patil, 1982), and despite the fact that conjunctions are among the most frequent words. $$$$$ This linear systems view &quot;bundles up&quot; all the parse trees into a single concise description capable of telling us everything we might want to know about the parses (including how much it might cost to ask a particular question).

The number of possible binary-branching parses of a sentence is defined by the Catalan number, an exponential combinatoric function (Church and Patil, 1982), so dynamic programming is crucial for efficiency. $$$$$ For parsing purposes, Cati can be thought of as a pointer to the ith entry of the table.
The number of possible binary-branching parses of a sentence is defined by the Catalan number, an exponential combinatoric function (Church and Patil, 1982), so dynamic programming is crucial for efficiency. $$$$$ On the other hand, our analysis is also useful in a system that interleaves syntactic processing with semantic and pragmatic processing.
The number of possible binary-branching parses of a sentence is defined by the Catalan number, an exponential combinatoric function (Church and Patil, 1982), so dynamic programming is crucial for efficiency. $$$$$ For parsing purposes, Cati can be thought of as a pointer to the ith entry of the table.
The number of possible binary-branching parses of a sentence is defined by the Catalan number, an exponential combinatoric function (Church and Patil, 1982), so dynamic programming is crucial for efficiency. $$$$$ These predictions continue to hold with as many as nine prepositional phrases (4862 parse trees).
