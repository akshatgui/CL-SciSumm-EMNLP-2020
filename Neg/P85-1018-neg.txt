An answer to these problems was presented by Shieber (1985) who proposed to do Earley prediction on the basis of some finite quotient of all constituent DAGs which can be specified by the grammar writer. $$$$$ Because the LALR table building algorithm does not in general terminate for complex-featurebased grammar formalisms, the grammar used in that paper was a simple context-free grammar with subcategorization and gap information placed in the atomic nonterminal symbol.

Change in the citation purpose of Shieber (1985) paper. $$$$$ Still, the algorithm should take advantage of that part of the arbitrarily large amount of information in the complex-feature structures that is significant for guiding parsing with the particular grammar.
Change in the citation purpose of Shieber (1985) paper. $$$$$ Instead, we would like a parsing algorithm that placed no restraints on the grammars it could handle as long as they could be expressed within the intended formalism.

Similar analysis can be applied to the change in citation purpose of Shieber (1985) as illustrated in Figure 1. $$$$$ We have presented a general technique of restriction with many applications in the area of manipulating complexfeature-based grammar formalisms.
Similar analysis can be applied to the change in citation purpose of Shieber (1985) as illustrated in Figure 1. $$$$$ This solution has been recommended for functional unification grammars (FUG) by Martin Kay 161; its legacy can be seen in the context-free skeleton of LFG, and the Hewlett-Packard GPSC; system 131, and in the cat feature requirement in PATR-Il that is described below.
Similar analysis can be applied to the change in citation purpose of Shieber (1985) as illustrated in Figure 1. $$$$$ As a particular example, we presented a complete, correct, terminating extension of Earley's algorithm that uses restriction to perform top-down filtering.
Similar analysis can be applied to the change in citation purpose of Shieber (1985) as illustrated in Figure 1. $$$$$ What is needed is a way of 'forgetting' some of the structure we are using for top-down prediction.

Shieber (1985) proposes a more efficient approach to gaps in the PATR-II formalism, extending Earley's algorithm by using. $$$$$ 'One edge subsumes another edge if and only if the first three elements of the edges are identical and the fourth element of the first edge subsumes that of the second edge.
Shieber (1985) proposes a more efficient approach to gaps in the PATR-II formalism, extending Earley's algorithm by using. $$$$$ Complex dags can be viewed as partial functions from labels to dag values, and the notation D(l) will therefore denote the value associated with the label / in the dag D. In the same spirit. we can refer to the domain of a dag (dorn(D)).
Shieber (1985) proposes a more efficient approach to gaps in the PATR-II formalism, extending Earley's algorithm by using. $$$$$ By extending the algorithm so that the prediction step determines which dogs can start at a given point, we can use the information in the features to be more precise in the predictions and eliminate many hypotheses.

PATR-II (Shieber, 1985) into context-free grammars (CFG). $$$$$ Implementing backtracking regimens—useful for instance for generating parses in some particular order, say, in order of syntactic preference—is in general difficult when LR-style and top-down backtrack techniques are eliminated.
PATR-II (Shieber, 1985) into context-free grammars (CFG). $$$$$ This step predicts top-down all rides whose left-hand side matches the dag of some constituent being looked for.
PATR-II (Shieber, 1985) into context-free grammars (CFG). $$$$$ This &quot;gap-proliferation&quot; problem has plagued many attempts at building parsers for grammar formalisms in this style.

The abstraction is specified by means of a restrict or (Shieber, 1985), the so-called lexicon restrict or. $$$$$ We now develop a concrete example of the use of restriction in parsing by extending Earley's algorithm to parse grammars in the PATR-II formalism just presented.
The abstraction is specified by means of a restrict or (Shieber, 1985), the so-called lexicon restrict or. $$$$$ Similarly, unifications of the form p = a where a is atomic would require that D,(p) = a.
The abstraction is specified by means of a restrict or (Shieber, 1985), the so-called lexicon restrict or. $$$$$ That is, the parameter determines how to split up the infinite nonterminal domain into a finite set of equivalence classes that can be used for parsing.
The abstraction is specified by means of a restrict or (Shieber, 1985), the so-called lexicon restrict or. $$$$$ Informally, this involves allowing lexical items to be inserted into partial phrases.

Pereira and Warren (1983) and Shieber (1985) present versions of Earley's algorithm for unification grammars, in which unification is the sole operation responsible for attribute valuation. $$$$$ A compromise is to parameterize the parsing algorithm by a small amount of grammar-dependent information that tells the algorithm which of the information in the feature structures is significant for guiding the parse.
Pereira and Warren (1983) and Shieber (1985) present versions of Earley's algorithm for unification grammars, in which unification is the sole operation responsible for attribute valuation. $$$$$ The restrictor thus serves as the sole repository of grammar-dependent information in the algorithm.

After establishing a correspondence b tween attribute and unification grammar (UG), we may see that the technique of 'restrictions'; used by Shieber (1985) in his extended algorithm is related to finite partitioning on attribute domains, in fact a particular case which takes advantage of the more structured attribute domains of UG. $$$$$ SRI International. a grammar development and testing environment for PAT grammars written in Zetalisp for the Symbolics 3Witi.
After establishing a correspondence b tween attribute and unification grammar (UG), we may see that the technique of 'restrictions'; used by Shieber (1985) in his extended algorithm is related to finite partitioning on attribute domains, in fact a particular case which takes advantage of the more structured attribute domains of UG. $$$$$ • Now, consider the notion of restriction of a dag, using the term almost in its technical sense of restricting the domain of a function.
After establishing a correspondence b tween attribute and unification grammar (UG), we may see that the technique of 'restrictions'; used by Shieber (1985) in his extended algorithm is related to finite partitioning on attribute domains, in fact a particular case which takes advantage of the more structured attribute domains of UG. $$$$$ It shows the total number of active and passive edges added to the chart for five sentences of up to eleven words using four different restrictors.

We can use the technique of restriction (Shieber 1985) to remove these features from our feature structures. $$$$$ However, this extension does not preserve termination.
We can use the technique of restriction (Shieber 1985) to remove these features from our feature structures. $$$$$ The final restrictor added verb form information.

[Shieber, 1985] therefore proposes a modified version of the Earley-parser, using restricted top down prediction. $$$$$ An atomic dag neither subsumes nor is subsumed by any different atomic dag.
[Shieber, 1985] therefore proposes a modified version of the Earley-parser, using restricted top down prediction. $$$$$ As such it provides a good testbed for describing algorithms for complex-feature-based formalisms.

 $$$$$ In building a general tool for grammar testing and debugging, however, we would like to commit as little as possible to a particular grammar or style of grammar.
 $$$$$ However, several problems inhere in this solution of mandating a context-free backbone.
 $$$$$ The final restrictor added verb form information.
 $$$$$ But because there are only a finite number of equivalence classes, parsing algorithms guided in this way will terminate.

For UGs which lack a so-called context-free back-bone, such as CUG, the top-down prediction step can only be guaranteed to terminate if we make use of restriction, as defined in Shieber (1985). $$$$$ We have presented a general technique of restriction with many applications in the area of manipulating complexfeature-based grammar formalisms.
For UGs which lack a so-called context-free back-bone, such as CUG, the top-down prediction step can only be guaranteed to terminate if we make use of restriction, as defined in Shieber (1985). $$$$$ Our implementation demonstrates the drastic elimination of chart edges that can be achieved by this technique.
For UGs which lack a so-called context-free back-bone, such as CUG, the top-down prediction step can only be guaranteed to terminate if we make use of restriction, as defined in Shieber (1985). $$$$$ Finally, we described further uses for the technique—including parsing other grammar formalisms, including definite-clause grammars; extending other parsing algorithms, including LR methods and syntactic preference modeling algorithms; and efficient indexing.

 $$$$$ Our implementation demonstrates the drastic elimination of chart edges that can be achieved by this technique.
 $$$$$ Unfortunately, in moving to an infinite nonterminal domain, standard methods of parsing may no longer he applicable to the formalism.
 $$$$$ In particular. defin ite-c lause grammars are amenable to this technique, and it can be used to extend the Earley deduction of Pereira and Warren [I LI.
 $$$$$ For example. the following is a dag (D0) in this notation, with reentrancy indicated with coindexing boxes: Dags come in two varieties, complex (like the one above) and atomic (like the dags h and c in the example).

The performance of the parsing algorithms discussed in the preceding sections (a bottom-up parser for UG (BU), a top-down parser for UG (of Shieber, 1985) (TD), a top-down parser operating on an instantiated grammar (TD/1), and a bottom-up parser with top down filtering operating on an instantiated grammar (BU/LC)) were tested on two experimental CUGs, one implementing the morphosyntactic features of German NPs, and one implementing the syntax of WH-questions in Dutch by means of a gap-threading mechanism. $$$$$ Similarly, if information about filler-gap dependencies is kept extrinsic to the category information, as in a slash category in GPSG or an LFG annotation concerning a matching constituent for a it specification, there will be no way to keep from hypothesizing gaps at any given vertex.
The performance of the parsing algorithms discussed in the preceding sections (a bottom-up parser for UG (BU), a top-down parser for UG (of Shieber, 1985) (TD), a top-down parser operating on an instantiated grammar (TD/1), and a bottom-up parser with top down filtering operating on an instantiated grammar (BU/LC)) were tested on two experimental CUGs, one implementing the morphosyntactic features of German NPs, and one implementing the syntax of WH-questions in Dutch by means of a gap-threading mechanism. $$$$$ More speculatively. schemes for scheduling LH parsers to yield p.irses ill preference order might be modified for complex-foal ure-kisod formalisms, and even timed by means of the restrictor.
The performance of the parsing algorithms discussed in the preceding sections (a bottom-up parser for UG (BU), a top-down parser for UG (of Shieber, 1985) (TD), a top-down parser operating on an instantiated grammar (TD/1), and a bottom-up parser with top down filtering operating on an instantiated grammar (BU/LC)) were tested on two experimental CUGs, one implementing the morphosyntactic features of German NPs, and one implementing the syntax of WH-questions in Dutch by means of a gap-threading mechanism. $$$$$ Only when such edges attempt to join with the V will the inconsistency be found.

Comparing our results with those of Shieber (1985) and Haas (1989), we see that in all cases top-down filtering may reduce the size of the chart significantly. $$$$$ We feel that the restriction technique has great potential to make increasingly powerful grammar formalisms computationally feasible.
Comparing our results with those of Shieber (1985) and Haas (1989), we see that in all cases top-down filtering may reduce the size of the chart significantly. $$$$$ For example. the following is a dag (D0) in this notation, with reentrancy indicated with coindexing boxes: Dags come in two varieties, complex (like the one above) and atomic (like the dags h and c in the example).
Comparing our results with those of Shieber (1985) and Haas (1989), we see that in all cases top-down filtering may reduce the size of the chart significantly. $$$$$ As a particular example, we presented a complete, correct, terminating extension of Earley's algorithm that uses restriction to perform top-down filtering.
Comparing our results with those of Shieber (1985) and Haas (1989), we see that in all cases top-down filtering may reduce the size of the chart significantly. $$$$$ We have presented a general technique of restriction with many applications in the area of manipulating complexfeature-based grammar formalisms.

However, such an adaptation of CF algorithms involves their extension to possibly infinite nonterminal domains, which, as Shieber (1985) and Haas (1989) have shown, is nontrivial. $$$$$ Intuitively viewed, a dag D subsumes a dag D' (notated DC D') if D contains a subset of the information in (i.e., is more general than) U.
However, such an adaptation of CF algorithms involves their extension to possibly infinite nonterminal domains, which, as Shieber (1985) and Haas (1989) have shown, is nontrivial. $$$$$ Extending this process recursively to every level of the (lag, we have the concept of restriction used below.
However, such an adaptation of CF algorithms involves their extension to possibly infinite nonterminal domains, which, as Shieber (1985) and Haas (1989) have shown, is nontrivial. $$$$$ As a particular example, we presented a complete, correct, terminating extension of Earley's algorithm that uses restriction to perform top-down filtering.

Shieber (1985, 1992) follows established terminology in speaking of top-down filtering in connection with the prediction step of the Earley algorithm. $$$$$ In particular. defin ite-c lause grammars are amenable to this technique, and it can be used to extend the Earley deduction of Pereira and Warren [I LI.
Shieber (1985, 1992) follows established terminology in speaking of top-down filtering in connection with the prediction step of the Earley algorithm. $$$$$ The two notational conventions—using sets of unifications instead of dags, and putting the cat feature information implicitly in the names of the constituents—allow us to write rules in the more compact and familiar.format above, rather than this final cumbersome way presupposed by the algorithm.

We view the linking relation not simply as a filter to increase fficiency within the domain of syntactic analysis - this aspect is stressed by Shieber (1985) and other investigators such as Bouma (1991) - but rather as a device for the top-down predictive instantiation of information, as Shieber et al (1990) have shown for semantic-head-driven generation. $$$$$ We have presented a general technique of restriction with many applications in the area of manipulating complexfeature-based grammar formalisms.
We view the linking relation not simply as a filter to increase fficiency within the domain of syntactic analysis - this aspect is stressed by Shieber (1985) and other investigators such as Bouma (1991) - but rather as a device for the top-down predictive instantiation of information, as Shieber et al (1990) have shown for semantic-head-driven generation. $$$$$ As a particular example, we presented a complete, correct, terminating extension of Earley's algorithm that uses restriction to perform top-down filtering.
We view the linking relation not simply as a filter to increase fficiency within the domain of syntactic analysis - this aspect is stressed by Shieber (1985) and other investigators such as Bouma (1991) - but rather as a device for the top-down predictive instantiation of information, as Shieber et al (1990) have shown for semantic-head-driven generation. $$$$$ In this paper, we discuss a solution to the problem of extending parsing algorithms to formalisms with possibly infinite nonterminal domains, a solution based on a general technique we call restriction.

 $$$$$ However, this again forces the primacy and atomicity of major category information.
 $$$$$ Finally, the grammar used contained constructs that would cause nonterrnination in the unrestricted extension of Earley's algorithm.
 $$$$$ Still, the algorithm should take advantage of that part of the arbitrarily large amount of information in the complex-feature structures that is significant for guiding parsing with the particular grammar.

This amounts to the simplest case of the restriction technique of Shieber (1985). $$$$$ On the other hand, because the predicted edge is not more general than the rule itself, it permits no constituents that violate the constraints of the rule; therefore, it preserves correctness.
