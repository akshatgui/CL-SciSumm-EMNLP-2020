Adding appropriate side conditions to the rules, following the constraints discussed by Hobbs and Shieber (Hobbs and Shieber, 1987) would not be difficult. $$$$$ We include a few comments below about incorporating ordering heuristics into our scoping generation algorithm, although we should point out that the possibilities are somewhat limited due to the local nature of where the heuristics can be applied.
Adding appropriate side conditions to the rules, following the constraints discussed by Hobbs and Shieber (Hobbs and Shieber, 1987) would not be difficult. $$$$$ ==> true iff only full scopings are allowed ScopedForm <== a full or partial scoping of Form Applies terms at various level of embedding in Form, including applying to the entire Form, and to opaque argument positions inside Form.
Adding appropriate side conditions to the rules, following the constraints discussed by Hobbs and Shieber (Hobbs and Shieber, 1987) would not be difficult. $$$$$ A complex term is represented by the s-expression (:term quant ;;; var restrict') where restrict' is the encoding of the wff that forms ;;; the restriction of the quantifier.
Adding appropriate side conditions to the rules, following the constraints discussed by Hobbs and Shieber (Hobbs and Shieber, 1987) would not be difficult. $$$$$ ***************************************************************************

Hobbs and Shieber (1987) extend this formalism to support operators (such as not) and present an enumeration algorithm that is more efficient than the naive wrapping approach. $$$$$ A complex term was applicable to a wff if it was embedded in no other complex term within the wff.
Hobbs and Shieber (1987) extend this formalism to support operators (such as not) and present an enumeration algorithm that is more efficient than the naive wrapping approach. $$$$$ As a result, many systems for representing the semantics of sentences have ignored scoping or generated scopings with mechanisms that have often been inexplicit as to the range of scopings they choose among or profligate in the scopings they allow.
Hobbs and Shieber (1987) extend this formalism to support operators (such as not) and present an enumeration algorithm that is more efficient than the naive wrapping approach. $$$$$ The syntactic structure of a sentence often manifests quite clearly the predicate-argument structure and relations of grammatical subordination.
Hobbs and Shieber (1987) extend this formalism to support operators (such as not) and present an enumeration algorithm that is more efficient than the naive wrapping approach. $$$$$ The definition of applicable term must be modified as follows.

The sentence has 42 readings (Hobbs and Shieber, 1987), and it is easy to imagine how the number of readings grows exponentially (or worse) in the length of the sentence. $$$$$ The soundness and correctness of the underlying algorithm, provide a guarantee of soundness for a heuristically guided version.
The sentence has 42 readings (Hobbs and Shieber, 1987), and it is easy to imagine how the number of readings grows exponentially (or worse) in the length of the sentence. $$$$$ A variable v is unbound or free in an expression a if there is an occurrence of v in a that is not also an occurrence in a subexpression of a binding v. Note that here quantified wffs and complex terms are both thought of as expressions binding a variable.
The sentence has 42 readings (Hobbs and Shieber, 1987), and it is easy to imagine how the number of readings grows exponentially (or worse) in the length of the sentence. $$$$$ ;;; The function APPLY is implemented under the name APPLY-Q to avoid ;;; conflict with the CL function APPLY.
The sentence has 42 readings (Hobbs and Shieber, 1987), and it is easy to imagine how the number of readings grows exponentially (or worse) in the length of the sentence. $$$$$ Since this is the representation of the whole sentence, pull will be called with complete? equal to true.

In summary, however, the analysis is slightly more restrictive than that of Hobbs and Shieber (1987), making predictions regarding the scope of topicalized or wh-moved constituents, relative scope of embedded quantifiers, and possibly even syntactic structure of complex NPs. $$$$$ We have profited from discussions about this work with Paul Martin and Fernando Pereira, and from the comments of the anonymous reviewers of the paper.
In summary, however, the analysis is slightly more restrictive than that of Hobbs and Shieber (1987), making predictions regarding the scope of topicalized or wh-moved constituents, relative scope of embedded quantifiers, and possibly even syntactic structure of complex NPs. $$$$$ A complex term is represented by the Prolog term term(quant,var,restrict') where restrict' is the encoding of the wff that forms the restriction of the quantifier.
In summary, however, the analysis is slightly more restrictive than that of Hobbs and Shieber (1987), making predictions regarding the scope of topicalized or wh-moved constituents, relative scope of embedded quantifiers, and possibly even syntactic structure of complex NPs. $$$$$ In addition to handling the scoping of quantifiers relative to each other, the algorithm we present also allows quantifiers to be scoped within or outside of opaque arguments of higher-order predicates.
In summary, however, the analysis is slightly more restrictive than that of Hobbs and Shieber (1987), making predictions regarding the scope of topicalized or wh-moved constituents, relative scope of embedded quantifiers, and possibly even syntactic structure of complex NPs. $$$$$ The syntactic structure of a sentence often manifests quite clearly the predicate-argument structure and relations of grammatical subordination.

For example, in processing (22) (adapted from Hobbs and Shieber 1987), which Park 1995 claims to have only four readings, rather than the five predicted by their account, such a system can build both readings for the S/NP every representative of three companies saw and decide which is more likely, before building both compatible readings of the whole sentence and similarly resolving with respect to statistical or contextual support: (22) Every representative of three companies aw some sample. $$$$$ This limits applicable terms to be top-level.
For example, in processing (22) (adapted from Hobbs and Shieber 1987), which Park 1995 claims to have only four readings, rather than the five predicted by their account, such a system can build both readings for the S/NP every representative of three companies saw and decide which is more likely, before building both compatible readings of the whole sentence and similarly resolving with respect to statistical or contextual support: (22) Every representative of three companies aw some sample. $$$$$ For instance, the algorithm generates two readings for the sentence Everyone isn't here. corresponding to the two relative scopings of the universal quantifier and the negation.
For example, in processing (22) (adapted from Hobbs and Shieber 1987), which Park 1995 claims to have only four readings, rather than the five predicted by their account, such a system can build both readings for the S/NP every representative of three companies saw and decide which is more likely, before building both compatible readings of the whole sentence and similarly resolving with respect to statistical or contextual support: (22) Every representative of three companies aw some sample. $$$$$ We discuss a few examples here, merely to give the flavor for how such heuristics might be added.
For example, in processing (22) (adapted from Hobbs and Shieber 1987), which Park 1995 claims to have only four readings, rather than the five predicted by their account, such a system can build both readings for the S/NP every representative of three companies saw and decide which is more likely, before building both compatible readings of the whole sentence and similarly resolving with respect to statistical or contextual support: (22) Every representative of three companies aw some sample. $$$$$ The call to pullopaque-args will return the original wff unchanged since there are no opaque operators in the wff.

[Hobbs and Shieber 1987] presented an algorithm to generate quantifier scopings from a representation of predicate-argument relations and the relations of grammatical subordination. $$$$$ There is a problem if we take the quantifier the to mean that there is a unique such x and take the sentence to mean that a man who owns many donkeys will beat every donkey he owns.
[Hobbs and Shieber 1987] presented an algorithm to generate quantifier scopings from a representation of predicate-argument relations and the relations of grammatical subordination. $$$$$ A constant term is represented by the homonymous Prolog constant.
[Hobbs and Shieber 1987] presented an algorithm to generate quantifier scopings from a representation of predicate-argument relations and the relations of grammatical subordination. $$$$$ Because of the recursive nature of the algorithm, there are limits to the amount of ordering that can be done in this manner.
[Hobbs and Shieber 1987] presented an algorithm to generate quantifier scopings from a representation of predicate-argument relations and the relations of grammatical subordination. $$$$$ Computational Linguistics, Volume 13, Numbers 1-2, January-June 1987 51 Jerry R. Hobbs and Stuart M. Shieber An Algorithm for Generating Quantifier Seopings The function apply(term, form) returns a wff consisting of the given complex term term applied to a form form in which it occurs.

An algorithm for generating all possible quantifier scopings was detailed by Hobbs and Shieber (1987). $$$$$ It will ultimately yield a reading in which r outscopes d but is outscoped by c; the complex term for c is still available for an application that will give it wide Computational Linguistics, Volume 13, Numbers 1-2, January-June 1987 53 Jerry R. Hobbs and Stuart M. Shieber An Algorithm for Generating Quantifier Scopings scope.
An algorithm for generating all possible quantifier scopings was detailed by Hobbs and Shieber (1987). $$$$$ ;;; The function APPLY is implemented under the name APPLY-Q to avoid ;;; conflict with the CL function APPLY.
An algorithm for generating all possible quantifier scopings was detailed by Hobbs and Shieber (1987). $$$$$ This appendix includes informal proofs of some important properties of the nondeterminisitc version of the presented algorithm.
An algorithm for generating all possible quantifier scopings was detailed by Hobbs and Shieber (1987). $$$$$ The following is the core of a Prolog implementation of the nondeterministic algorithm which includes all but the lowest level of routines.
