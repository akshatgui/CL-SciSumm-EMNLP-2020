Principle-based parsers are also designed with universal grammar in mind (Lin 1994), but have yet to demonstrate large scale coverage in several languages. $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.
Principle-based parsers are also designed with universal grammar in mind (Lin 1994), but have yet to demonstrate large scale coverage in several languages. $$$$$ In d~e lexicon, a phrase "wl . . .
Principle-based parsers are also designed with universal grammar in mind (Lin 1994), but have yet to demonstrate large scale coverage in several languages. $$$$$ This paper presents some implementation details and experimental results.

In this paper, we adopt Minipar (Lin, 1994) to parse sentences and to construct syntactic trees. $$$$$ On the other han<l, if +govern +ca -cm co-ocetlr itl all item, +,;lien the head daughter of th<; it<,m gov- e rns and case:marks the origin of-cm.
In this paper, we adopt Minipar (Lin, 1994) to parse sentences and to construct syntactic trees. $$$$$ Prin- ciples are constraints over X-bar structures.

English dependency trees are provided by Minipar (Lin, 1994). $$$$$ A dominance link fi:om a to fl is a.ssoci~ted with an integer id that determii les tile linear order between fl and other cat;egories dolni- m~t(xl t)y a, and a, binary att;ril)ute to specify whether fl is optional or oblig~l;ory.
English dependency trees are provided by Minipar (Lin, 1994). $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

It is based on Principar, which is described in Lin (1994). $$$$$ 111 1;lie new it;era s<%isfles the lo- ca.l constraint, o\[ I;he node it is considered valid a.nd sa.ved inl;o the local lnOIxlory.
It is based on Principar, which is described in Lin (1994). $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.
It is based on Principar, which is described in Lin (1994). $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.

These features are obtained by parsing a large corpus using Minipar (Lin 1994), a broad-coverage English parser. $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
These features are obtained by parsing a large corpus using Minipar (Lin 1994), a broad-coverage English parser. $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.

We used Minipar (Lin 1994), a broad coverage parser, to parse 3GB of newspaper text from the Aquaint (TREC-9) collection. $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
We used Minipar (Lin 1994), a broad coverage parser, to parse 3GB of newspaper text from the Aquaint (TREC-9) collection. $$$$$ The parse trees of the input sentence can be retrieved h'om the parse forest one by one.

We parse questions and candidate sentences with MiniPar (Lin, 1994), a fast and robust parser for grammatical dependency relations. $$$$$ Most previous principle-based parsers, e.g., (Dorr, 1991; Font, 1991; Johnson, 1991), es- sentially generate all possible X-bar structures of a sentence and then use the principles to fil- ter out the illicit ones.
We parse questions and candidate sentences with MiniPar (Lin, 1994), a fast and robust parser for grammatical dependency relations. $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.

We used Minipar (Lin 1994), a broad coverage English parser, to parse about 1GB (144M words) of newspaper text from the TREC collection (1988 AP Newswire, 1989-90 LA Times, and 1991 San Jose Mercury) at a speed of about 500words/second on a PIII-750 with 512MB memory. $$$$$ This initiates a message passing pro- cess which stops when there are no more mes- sages to be passed around.
We used Minipar (Lin 1994), a broad coverage English parser, to parse about 1GB (144M words) of newspaper text from the TREC collection (1988 AP Newswire, 1989-90 LA Times, and 1991 San Jose Mercury) at a speed of about 500words/second on a PIII-750 with 512MB memory. $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
We used Minipar (Lin 1994), a broad coverage English parser, to parse about 1GB (144M words) of newspaper text from the TREC collection (1988 AP Newswire, 1989-90 LA Times, and 1991 San Jose Mercury) at a speed of about 500words/second on a PIII-750 with 512MB memory. $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.

We parse a 6 GB newspaper (TREC9 and TREC 2002 collection) corpus using the dependency parser Minipar (Lin, 1994). $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

For the co-occurrence model, we used Minipar (Lin 1994), a broad coverage parser, to parse each data set. $$$$$ X-bar structures of a sentence are only built when their descriptions have satisfied all the pri ncil)les.
For the co-occurrence model, we used Minipar (Lin 1994), a broad coverage parser, to parse each data set. $$$$$ O dynamic data \ [~ static dala l)rocegsing module data flow Figure 1: '.Pile architecture of PRINCIPAR Figure I shows the architecture of PRIN- CIPAR.

For the algorithm discussed in Section 4.1, we derived our descriptive properties using the output of the dependency analysis generated by the Minipar (Lin, 1994) dependency parser. $$$$$ Only the last one of these has an en- try in the lexicon and its entry is returned.
For the algorithm discussed in Section 4.1, we derived our descriptive properties using the output of the dependency analysis generated by the Minipar (Lin, 1994) dependency parser. $$$$$ Tile secondary hash ta.= ble contains over 90,000 entries, most of which are constructed automatically by applying a set of extraction and conw:rsion rules to etP tries in Oxford Adwmced \],eaner's l)ictionary and Collins English I)ictionary.
For the algorithm discussed in Section 4.1, we derived our descriptive properties using the output of the dependency analysis generated by the Minipar (Lin, 1994) dependency parser. $$$$$ X-bar structures of a sentence are only built when their descriptions have satisfied all the pri ncil)les.

 $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
 $$$$$ That is, the first word in the string is always head word and the words Mter "," should ap- pear before the head word in texts.
 $$$$$ Ail il;em is a tr iplet thai; represe.nts a.(possibly intern plei, e) X-ba, r strltc- i>ll I'(?

We parsed a 125-million word newspaper corpus with Minipar3, a descendent of Principar (Lin, 1994). $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
We parsed a 125-million word newspaper corpus with Minipar3, a descendent of Principar (Lin, 1994). $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.
We parsed a 125-million word newspaper corpus with Minipar3, a descendent of Principar (Lin, 1994). $$$$$ The problem persists even when w~rions techniques such as optimal ordering of princi- ples (Fong, 1991), and corontining (Dorr, 1991; Johnson, 1991) are used.
We parsed a 125-million word newspaper corpus with Minipar3, a descendent of Principar (Lin, 1994). $$$$$ '\]'his item is said t<) be the origin of the -cm attribute.

We used Minipar (Lin 1994), a broad coverage parser, to analyze text. $$$$$ Lo- cal constraints are attached to nodes in the network.
We used Minipar (Lin 1994), a broad coverage parser, to analyze text. $$$$$ Bonnie Dorr for comments about Sections 1, 2, and 3.
We used Minipar (Lin 1994), a broad coverage parser, to analyze text. $$$$$ Prin- ciples are constraints over X-bar structures.

We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002). $$$$$ The problem persists even when w~rions techniques such as optimal ordering of princi- ples (Fong, 1991), and corontining (Dorr, 1991; Johnson, 1991) are used.
We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002). $$$$$ I t ln order to simplify the diagrain, we did nol.
We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002). $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002). $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.

English dependency trees are provided by Minipar (Lin, 1994). $$$$$ That is, the first word in the string is always head word and the words Mter "," should ap- pear before the head word in texts.
English dependency trees are provided by Minipar (Lin, 1994). $$$$$ 111 1;lie new it;era s<%isfles the lo- ca.l constraint, o\[ I;he node it is considered valid a.nd sa.ved inl;o the local lnOIxlory.
English dependency trees are provided by Minipar (Lin, 1994). $$$$$ This paper describes an efficient, broad- coverage, principle-based parser, called PRIN- CIPAR.
English dependency trees are provided by Minipar (Lin, 1994). $$$$$ a /)N bar N I~P s tory /X N story about Kim (a) (b) Figure 3: Adjunct links ha,re higher weights Example 5.1.

The Simplified Clause: In order to extract clauses from the text, we use Lin's parser MINI PAR (Lin, 1994). $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.
The Simplified Clause: In order to extract clauses from the text, we use Lin's parser MINI PAR (Lin, 1994). $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.
The Simplified Clause: In order to extract clauses from the text, we use Lin's parser MINI PAR (Lin, 1994). $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.
The Simplified Clause: In order to extract clauses from the text, we use Lin's parser MINI PAR (Lin, 1994). $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.

 $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.
 $$$$$ This paper describes an efficient, broad- coverage, principle-based parser, called PRIN- CIPAR.

To get the context values and implement the syntactic filters, we parsed our corpora with Minipar (Lin,1994). $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

Widely used dependency parsers which generate deep dependency representations include Minipar (Lin, 1994), which uses a declarative grammar, and the Stanford parser (Levy and Manning, 2004), which performs a conversion from a standard phrase-structure parse. $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.
Widely used dependency parsers which generate deep dependency representations include Minipar (Lin, 1994), which uses a declarative grammar, and the Stanford parser (Levy and Manning, 2004), which performs a conversion from a standard phrase-structure parse. $$$$$ Even though the lexicon is derived from ma- chine readable dictionaries and contains a \]a.rge number of senses for many words, the ratio be- tween the number of parse trees and the sen- tence length here is well bellow the ratio re- ported in (Black et al, 1992).
