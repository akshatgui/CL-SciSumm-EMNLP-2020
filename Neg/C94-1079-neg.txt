Principle-based parsers are also designed with universal grammar in mind (Lin 1994), but have yet to demonstrate large scale coverage in several languages. $$$$$ The input sentence is parsed in the follow- ing steps.
Principle-based parsers are also designed with universal grammar in mind (Lin 1994), but have yet to demonstrate large scale coverage in several languages. $$$$$ If a word sense has the attribute value (rare very), its weight is BIGWEIGIIT.

In this paper, we adopt Minipar (Lin, 1994) to parse sentences and to construct syntactic trees. $$$$$ The lexical analyser first converts the in- put sentence into a set of texical items.
In this paper, we adopt Minipar (Lin, 1994) to parse sentences and to construct syntactic trees. $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.
In this paper, we adopt Minipar (Lin, 1994) to parse sentences and to construct syntactic trees. $$$$$ '\]'his item is said t<) be the origin of the -cm attribute.

English dependency trees are provided by Minipar (Lin, 1994). $$$$$ Reducing Ambiguities.

It is based on Principar, which is described in Lin (1994). $$$$$ The lexical analyser first converts the in- put sentence into a set of texical items.
It is based on Principar, which is described in Lin (1994). $$$$$ The main innovation in PRINCIPAR is that it applies principles to descriptions o17 X- bar structures rather than the structures them- selves.
It is based on Principar, which is described in Lin (1994). $$$$$ This problem may also account for the fact that these parsers are experimental nd have limited coverage.

These features are obtained by parsing a large corpus using Minipar (Lin 1994), a broad-coverage English parser. $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.
These features are obtained by parsing a large corpus using Minipar (Lin 1994), a broad-coverage English parser. $$$$$ This paper presents some implementation details and experimental results.
These features are obtained by parsing a large corpus using Minipar (Lin 1994), a broad-coverage English parser. $$$$$ This problem may also account for the fact that these parsers are experimental nd have limited coverage.

We used Minipar (Lin 1994), a broad coverage parser, to parse 3GB of newspaper text from the Aquaint (TREC-9) collection. $$$$$ This problem may also account for the fact that these parsers are experimental nd have limited coverage.
We used Minipar (Lin 1994), a broad coverage parser, to parse 3GB of newspaper text from the Aquaint (TREC-9) collection. $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.
We used Minipar (Lin 1994), a broad coverage parser, to parse 3GB of newspaper text from the Aquaint (TREC-9) collection. $$$$$ The -cm al;tril)ute then propagates with tile item as it is sent to el;her nodes.

We parse questions and candidate sentences with MiniPar (Lin, 1994), a fast and robust parser for grammatical dependency relations. $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
We parse questions and candidate sentences with MiniPar (Lin, 1994), a fast and robust parser for grammatical dependency relations. $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.

We used Minipar (Lin 1994), a broad coverage English parser, to parse about 1GB (144M words) of newspaper text from the TREC collection (1988 AP Newswire, 1989-90 LA Times, and 1991 San Jose Mercury) at a speed of about 500words/second on a PIII-750 with 512MB memory. $$$$$ A weight is associated with every word sense and every link in the parse tree.
We used Minipar (Lin 1994), a broad coverage English parser, to parse about 1GB (144M words) of newspaper text from the TREC collection (1988 AP Newswire, 1989-90 LA Times, and 1991 San Jose Mercury) at a speed of about 500words/second on a PIII-750 with 512MB memory. $$$$$ The correct parses for all the sentences in TM)le 1 are returned by the parser.

We parse a 6 GB newspaper (TREC9 and TREC 2002 collection) corpus using the dependency parser Minipar (Lin, 1994). $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.
We parse a 6 GB newspaper (TREC9 and TREC 2002 collection) corpus using the dependency parser Minipar (Lin, 1994). $$$$$ X-bar structures of a sentence are only built when their descriptions have satisfied all the pri ncil)les.

For the co-occurrence model, we used Minipar (Lin 1994), a broad coverage parser, to parse each data set. $$$$$ X-bar structures of a sentence are only built when their descriptions have satisfied all the pri ncil)les.
For the co-occurrence model, we used Minipar (Lin 1994), a broad coverage parser, to parse each data set. $$$$$ It con- rains a lexicon with over 90,000 entries, con- structed automatically b applying a set of ex- traction and conversion rules to entries from machine readable dictionaries.
For the co-occurrence model, we used Minipar (Lin 1994), a broad coverage parser, to parse each data set. $$$$$ Therefore, only (a) is output as the parse tree of the sentence.
For the co-occurrence model, we used Minipar (Lin 1994), a broad coverage parser, to parse each data set. $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

For the algorithm discussed in Section 4.1, we derived our descriptive properties using the output of the dependency analysis generated by the Minipar (Lin, 1994) dependency parser. $$$$$ Step 2: Message Passing: For each lexi- eel item <\[i,j\], av~lf, av ..... p>, create an initiM message <\[i,j\], av~r, 0> and send this message to the grammar network node that represents the category or subcategory of the word sense.

 $$$$$ 4.
 $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
 $$$$$ The key idea of the parsing algorithm was presented in (tin, 199:1).

We parsed a 125-million word newspaper corpus with Minipar3, a descendent of Principar (Lin, 1994). $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
We parsed a 125-million word newspaper corpus with Minipar3, a descendent of Principar (Lin, 1994). $$$$$ 'l'he case-filter condition on the origin of -cm is met.

We used Minipar (Lin 1994), a broad coverage parser, to analyze text. $$$$$ O dynamic data \ [~ static dala l)rocegsing module data flow Figure 1: '.Pile architecture of PRINCIPAR Figure I shows the architecture of PRIN- CIPAR.
We used Minipar (Lin 1994), a broad coverage parser, to analyze text. $$$$$ '\]'he implementation of case theory in PI{,INCII~AII, is based on the following attribute vaJues: ca, govern, cm.
We used Minipar (Lin 1994), a broad coverage parser, to analyze text. $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
We used Minipar (Lin 1994), a broad coverage parser, to analyze text. $$$$$ This paper presents some implementation details and experimental results.

We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002). $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002). $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.
We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002). $$$$$ Principle-based grammars, such as Govern- ment-Binding (GB) theory (Chomsky, 1981; Haegeman, 1991), offer many advantages over rule-based and unification-based grammars, such as the universality ofprinciples and mod- ularity of components in the grammar.
We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002). $$$$$ O dynamic data \ [~ static dala l)rocegsing module data flow Figure 1: '.Pile architecture of PRINCIPAR Figure I shows the architecture of PRIN- CIPAR.

English dependency trees are provided by Minipar (Lin, 1994). $$$$$ /II~ /I L bigwe!ght L ', John John V /~; NP'~/N p /~N~, about Kim read a/ ~b~r read /NP.

The Simplified Clause $$$$$ +ca the head is ,~ c~se assigner -ca the head is not a case assigner +govern the head is a governor -govern the head is not a governor -cr~ an NP m-commanded by the head needs case marking The case filter is implemented as follows: 1.

 $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

To get the context values and implement the syntactic filters, we parsed our corpora with Minipar (Lin,1994). $$$$$ The parser has been implemented in C++ and runs on SUN Sparcstations with X-windows.
To get the context values and implement the syntactic filters, we parsed our corpora with Minipar (Lin,1994). $$$$$ This paper describes an efficient, broad- coverage, principle-based parser, called PRIN- CIPAR.
To get the context values and implement the syntactic filters, we parsed our corpora with Minipar (Lin,1994). $$$$$ Most previous principle-based parsers, e.g., (Dorr, 1991; Font, 1991; Johnson, 1991), es- sentially generate all possible X-bar structures of a sentence and then use the principles to fil- ter out the illicit ones.
To get the context values and implement the syntactic filters, we parsed our corpora with Minipar (Lin,1994). $$$$$ l,iu m~d Coebel (1993) showed that the COml)lexlty of the message passing algorithm is O(ICl',,.:' ) ro,.

Widely used dependency parsers which generate deep dependency representations include Minipar (Lin, 1994), which uses a declarative grammar, and the Stanford parser (Levy and Manning, 2004), which performs a conversion from a standard phrase-structure parse. $$$$$ Since each node in X-1)ar strncture has at most one governor, if the governor is not a case assigner, the node will not l)e case-marked.
Widely used dependency parsers which generate deep dependency representations include Minipar (Lin, 1994), which uses a declarative grammar, and the Stanford parser (Levy and Manning, 2004), which performs a conversion from a standard phrase-structure parse. $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.
