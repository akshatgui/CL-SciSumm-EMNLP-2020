Karttunen (1984) provides examples of feature structures in which a negation operator might be useful. $$$$$ number person 3rd In graphs of this sort, values are reached by traversing paths of attribute names.
Karttunen (1984) provides examples of feature structures in which a negation operator might be useful. $$$$$ Note that the proper part of lst+2nd excludes 3rd person.
Karttunen (1984) provides examples of feature structures in which a negation operator might be useful. $$$$$ (In LFG, disjunctions are allowed in control equations but not in the specification of values.)

One example of the gap between description and computational implementation is disjunctive feature representation, which became popular in feature-based grammar formalisms in the 1980s (Karttunen, 1984). $$$$$ A complex value is a collection of features, for example:
One example of the gap between description and computational implementation is disjunctive feature representation, which became popular in feature-based grammar formalisms in the 1980s (Karttunen, 1984). $$$$$ The paper discusses the linguistic aspects of a new general purpose facility for computing with features.
One example of the gap between description and computational implementation is disjunctive feature representation, which became popular in feature-based grammar formalisms in the 1980s (Karttunen, 1984). $$$$$ This idea lies at the heart of UG, LFG, and the PATR-II grammar for English [Shieber, et al., 831 constructed at SRI.

The feature structure (adopted from Karttunen, 1984, p. 30) represents disjunctions by enclosing the alternatives in curly brackets ({}). $$$$$ The values of phonological and morphological features are traditionally atomic; e.g.
The feature structure (adopted from Karttunen, 1984, p. 30) represents disjunctions by enclosing the alternatives in curly brackets ({}). $$$$$ Designating something as 3rd person requires the greatest number of feature specifications.
The feature structure (adopted from Karttunen, 1984, p. 30) represents disjunctions by enclosing the alternatives in curly brackets ({}). $$$$$ It is compatible with both 1st and 2nd person but the negative constraint rules out the latter one.
The feature structure (adopted from Karttunen, 1984, p. 30) represents disjunctions by enclosing the alternatives in curly brackets ({}). $$$$$ When it fails, no result. is produced and the operands remain unchanged; when it succeeds, the operands are permanently altered in the process.
