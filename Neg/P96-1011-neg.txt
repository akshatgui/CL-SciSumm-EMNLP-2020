 $$$$$ One might choose to say that two parses are semantically equivalent if they derive the same phrase meaning.
 $$$$$ The technique eliminates all spurious ambiguities resulting from the interaction of these rules.
 $$$$$ In addition, their method classes and normal forms of the pure (unrestricted) is less efficient than the present one: it considers CCG: parses in pairs, not singly, and does not remove any (15) Two parses a, a' of the pure CCG are parse until the entire parse forest has been built. semantically equivalent if they have the 6 Extensions to the CCG Formalism same normal form: NF(a)= NF(a').
 $$$$$ &quot;John likes Mary&quot; has not show completeness.

Eisner (1996, p.81) in fact suggested that the labeling system can be implemented in the grammar by templates, or in the processor by labeling the chart entries. $$$$$ This paper presents a simple and flexible CCG parsing technique that prevents any such explosion of redundant CCG derivations.
Eisner (1996, p.81) in fact suggested that the labeling system can be implemented in the grammar by templates, or in the processor by labeling the chart entries. $$$$$ In addition to the familiar atomic nonterminal categories (typically S for sentences, N for nouns, NP for noun phrases, etc.
Eisner (1996, p.81) in fact suggested that the labeling system can be implemented in the grammar by templates, or in the processor by labeling the chart entries. $$$$$ An exhaustive parser serves up 252 CCG parses of (3), which must be sifted through, at considerable cost, in order to identify the two distinct meanings for further processing.'

But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. $$$$$ (Parsing strategies besides most linguistically reasonable choices, the proof of CKY would also work, in particular (Vijay-Shanker theorem 1 will go through,' so that the normal-form Si Weir, 1993)) The management of cached NFs in parser of §4 remains safe.
But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. $$$$$ ConDetailed proofs of these theorems are available on dition (a) is straightforward.
But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. $$$$$ Thus verb phrases are an- case, but (Hepple, 1987) shows their algorithm to alyzed as subjectless sentences S \NP, while &quot;John be incomplete. likes&quot; is an objectless sentence or S/NP.

The C&C parser employs the normal-form constraints of Eisner (1996) to address spurious ambiguity in 1-best parsing. $$$$$ (Hepple In general, our goal is to discover exactly one analMorrill, 1989), who introduced the idea of normal- ysis for each <substring, meaning> pair.
The C&C parser employs the normal-form constraints of Eisner (1996) to address spurious ambiguity in 1-best parsing. $$$$$ CCG may be regarded as a generalization of contextfree grammar (CFG)—one where a grammar has infinitely many nonterminals and phrase-structure rules.
The C&C parser employs the normal-form constraints of Eisner (1996) to address spurious ambiguity in 1-best parsing. $$$$$ By pracform parsing, consider only a small CCG frag- ticing &quot;birth control&quot; for each bottom-up generation ment that lacks backward or order-changing com- of constituents in this way, we avoid a population position; (Niv, 1994) extends this result but does explosion of parsing options.

The second strategy is to use Eisner's normal form constraints (Eisner, 1996). $$$$$ Any CFG-style method can still parse the resulting spuriosity-free grammar, with tagged parses as in (8).
The second strategy is to use Eisner's normal form constraints (Eisner, 1996). $$$$$ In addition to the familiar atomic nonterminal categories (typically S for sentences, N for nouns, NP for noun phrases, etc.
The second strategy is to use Eisner's normal form constraints (Eisner, 1996). $$$$$ This paper addresses the problem for a fairly general form of Combinatory Categorial Grammar, by means of an efficient, correct, and easy to implement normal-form parsing tech- The parser is proved to find exone in each semantic equivalence class of allowable parses; that is, spurious ambiguity (as carefully defined) is shown to be both safely and completely eliminated.
The second strategy is to use Eisner's normal form constraints (Eisner, 1996). $$$$$ Karttunen's io method must therefore add 48,620 representative parses to the appropriate chart cell, first comparing each one against all the previously added parses—of which there are 48,620/2 on average—to ensure it is not semantically redundant.

 $$$$$ All other parses are suppressed by simple normal-form constraints that are enforced throughout the parsing process.
 $$$$$ Indeed, one might implement (7) by modifying CCG's phrase-structure grammar.
 $$$$$ ), CCG allows in- signs different types to &quot;John likes&quot; and &quot;Mary prefinitely many slashed categories.

The parser only used a subset of CCG, pureCCG (Eisner, 1996), consisting of the Application and Composition rules. $$$$$ Combinatory Categorial Grammar (Steedman, 1990), like other &quot;flexible&quot; categorial grammars, suffers from spurious ambiguity (Wittenburg, 1986).
The parser only used a subset of CCG, pureCCG (Eisner, 1996), consisting of the Application and Composition rules. $$$$$ In particular, the polynomial-time, polynomialspace CCG chart parser of (Vijay-Shanker & Weir, 1993) can be trivially adapted to respect the constraints by tagging chart entries.
The parser only used a subset of CCG, pureCCG (Eisner, 1996), consisting of the Application and Composition rules. $$$$$ Adding a parse can therefore take exponential time.

We propose and implement a modification of the Eisner (1996) normal form to account for generalized composition of bounded degree, and an extension to deal with grammatical type-raising. $$$$$ Generating all parses is inefficient and obscures whatever true semantic ambiguities are in the input.
We propose and implement a modification of the Eisner (1996) normal form to account for generalized composition of bounded degree, and an extension to deal with grammatical type-raising. $$$$$ 11 through ln would be instantiated as either / or \ (5) a.
We propose and implement a modification of the Eisner (1996) normal form to account for generalized composition of bounded degree, and an extension to deal with grammatical type-raising. $$$$$ No matter what lexical interpretations f,g,h,k are fed into the leaves A/B, B/C/D, D/E, E/F, both the trees end up with the same derived interpretation, namely a model element that can be determined from f,g,h,k by calculating AxAy.f(g(h(k(x)))(y)).

Eisner (1996, section 5) also provides a safe and complete parsing algorithm which can return non-NF derivations when necessary to preseve an interpretation if composition is bounded or the grammar is restricted in other (arbitrary) ways. $$$$$ By contrast, the method proposed below is purely syntactic—just like any &quot;ordinary&quot; parser—so it never needs to unpack a subforest, and can run in polynomial time. standard constituents are allowed when necessary: (8c) is in normal form (cf.
Eisner (1996, section 5) also provides a safe and complete parsing algorithm which can return non-NF derivations when necessary to preseve an interpretation if composition is bounded or the grammar is restricted in other (arbitrary) ways. $$$$$ Two parsing algorithms have been presented for practical use.
Eisner (1996, section 5) also provides a safe and complete parsing algorithm which can return non-NF derivations when necessary to preseve an interpretation if composition is bounded or the grammar is restricted in other (arbitrary) ways. $$$$$ Given a sentence, every reading that is available to the grammar has exactly one normal-form parse, no matter how many parses it has in toto.
Eisner (1996, section 5) also provides a safe and complete parsing algorithm which can return non-NF derivations when necessary to preseve an interpretation if composition is bounded or the grammar is restricted in other (arbitrary) ways. $$$$$ In closing, it should be repeated that the results provided are for the TAG-equivalent Bn (generalized composition) formalism of (Joshi et al., 1991), optionally extended with the S (substitution) rules of (Szabolcsi, 1989).

We have proposed a modification and extension of Eisner (1996)'s normal form that is more appropriate for commonly used variants of CCG with grammatical type-raising and generalized composition of bounded degree, as well as some non-combinatory extensions to CCG. $$$$$ (Konig, 1989; Moortgat, 1990) have will always be derivable along some other route. also studied the Lambek calculus case.
We have proposed a modification and extension of Eisner (1996)'s normal form that is more appropriate for commonly used variants of CCG with grammatical type-raising and generalized composition of bounded degree, as well as some non-combinatory extensions to CCG. $$$$$ (i) has exponentially many semantically distinct parses: n = 10 yields 82,756,612 parses in (2°) = 48,620 equivalence classes.
We have proposed a modification and extension of Eisner (1996)'s normal form that is more appropriate for commonly used variants of CCG with grammatical type-raising and generalized composition of bounded degree, as well as some non-combinatory extensions to CCG. $$$$$ This renders (2) syntactically ambiguous.

Hockenmaier (2003a) uses a model which favours only one of the derivations leading to aderived structure, namely the normal-form derivation (Eisner, 1996). $$$$$ Nor do they recognize the redundancy in (20), because—just as for the example &quot;softly knock twice&quot; in §4.1—it is contingent on a kind of lexical coincidence, namely that a type-raised subject commutes with a (generically) type-raised object.
Hockenmaier (2003a) uses a model which favours only one of the derivations leading to aderived structure, namely the normal-form derivation (Eisner, 1996). $$$$$ The main contribution of this work has been formal: to establish a normal form for parses of &quot;pure&quot; Cornbinatory Categorial Grammar.

For the normal-form model we were able to reduce the size of the charts considerably by applying two types of restriction to the parser $$$$$ A result worth remembering is that, although TAG-equivalent CCG allows free interaction among forward, backward, and crossed composition rules of any degree, two simple constraints serve to eliminate all spurious ambiguity.
For the normal-form model we were able to reduce the size of the charts considerably by applying two types of restriction to the parser $$$$$ Both algorithms are safe, complete, and efficient.
For the normal-form model we were able to reduce the size of the charts considerably by applying two types of restriction to the parser $$$$$ Each forest can later be unpacked into inHowever, we can take advantage of the core result dividual equivalent parse trees, if desired.) of this paper, theorems 1 and 2, to do Karttunen's (Vijay-Shanker Sz Weir, 1990) also give a method redundancy check in 0(1) time—no worse than the for removing &quot;one well-known source&quot; of spurious normal-form parser's check for —FC and –BC tags. ambiguity from restricted CCGs; §4.2 above shows (Karttunen's version takes worst-case exponential that this is in fact the only source.

Our transformation is also technically related to the normal form construction for CCG parsing presented by Eisner (1996). $$$$$ An exhaustive parser serves up 252 CCG parses of (3), which must be sifted through, at considerable cost, in order to identify the two distinct meanings for further processing.'
Our transformation is also technically related to the normal form construction for CCG parsing presented by Eisner (1996). $$$$$ The other, more complex algorithm solves the spurious ambiguity problem for any CCG grammar, by using normal forms as an efficient tool for grouping semantically equivalent parses.
Our transformation is also technically related to the normal form construction for CCG parsing presented by Eisner (1996). $$$$$ But non3How inefficient?
Our transformation is also technically related to the normal form construction for CCG parsing presented by Eisner (1996). $$$$$ Moreover, since previously shown by (Hepple, 1990; Hendriks, 1993).

Consider the derivations in Figures 1 and 2, which show a normal form derivation (Eisner, 1996) and fully incremental derivation, respectively. $$$$$ But non3How inefficient?
Consider the derivations in Figures 1 and 2, which show a normal form derivation (Eisner, 1996) and fully incremental derivation, respectively. $$$$$ Each ordinary CCG category is split into three categories that bear the respective tags from (9).

CCG parsers often limit the use of the combinatory rules (in particular $$$$$ By contrast, the method proposed below is purely syntactic—just like any &quot;ordinary&quot; parser—so it never needs to unpack a subforest, and can run in polynomial time. standard constituents are allowed when necessary: (8c) is in normal form (cf.

Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. $$$$$ Under categorial grammars that have powerful rules like composition, a simple n-word sentence can have exponentially many parses.
Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. $$$$$ This paper addresses the problem for a fairly general form of Combinatory Categorial Grammar, by means of an efficient, correct, and easy to implement normal-form parsing tech- The parser is proved to find exone in each semantic equivalence class of allowable parses; that is, spurious ambiguity (as carefully defined) is shown to be both safely and completely eliminated.
Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. $$$$$ This paper presents a simple and flexible CCG parsing technique that prevents any such explosion of redundant CCG derivations.

In this section, we show that the D rules fit naturally within standard normal form constraints for CCG parsing (Eisner, 1996), by providing both combinatory and logical bases for D. $$$$$ This approach works because CCG's spurious ambiguities arise (as is shown) in only a small set of circumstances.

Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). $$$$$ (Bouma, 1989) pro- (6) that galoot in the corner that thinks [John poses to replace composition with a new combina- likes MarAs tor, but the resulting product-grammar scheme as- For a chart parser, where each chart cell stores the analyses of some substring, this strategy says that 2This formalization sweeps any type-raising into the 80 lexicon, as has been proposed on linguistic grounds (Dowty, 1988; Steedman, 1991, and others).
Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). $$$$$ This renders (2) syntactically ambiguous.
Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). $$$$$ Its competitor (813) is not, nor is any larger tree containing (8b).

One set are the normal form constraints, as described by Eisner (1996). $$$$$ A result worth remembering is that, although TAG-equivalent CCG allows free interaction among forward, backward, and crossed composition rules of any degree, two simple constraints serve to eliminate all spurious ambiguity.
One set are the normal form constraints, as described by Eisner (1996). $$$$$ Each forest can later be unpacked into inHowever, we can take advantage of the core result dividual equivalent parse trees, if desired.) of this paper, theorems 1 and 2, to do Karttunen's (Vijay-Shanker Sz Weir, 1990) also give a method redundancy check in 0(1) time—no worse than the for removing &quot;one well-known source&quot; of spurious normal-form parser's check for —FC and –BC tags. ambiguity from restricted CCGs; §4.2 above shows (Karttunen's version takes worst-case exponential that this is in fact the only source.
One set are the normal form constraints, as described by Eisner (1996). $$$$$ Any sort of chart left-associative. parser or non-deterministic shift-reduce parser will The results herein apply to the TAG-equivalent do.

We applied the same normal-form restrictions used in Clark and Curran (2004b) $$$$$ This paper addresses the problem for a fairly general form of Combinatory Categorial Grammar, by means of an efficient, correct, and easy to implement normal-form parsing tech- The parser is proved to find exone in each semantic equivalence class of allowable parses; that is, spurious ambiguity (as carefully defined) is shown to be both safely and completely eliminated.
We applied the same normal-form restrictions used in Clark and Curran (2004b) $$$$$ An exhaustive parser serves up 252 CCG parses of (3), which must be sifted through, at considerable cost, in order to identify the two distinct meanings for further processing.'
We applied the same normal-form restrictions used in Clark and Curran (2004b) $$$$$ Generating all parses is inefficient and obscures whatever true semantic ambiguities are in the input.
We applied the same normal-form restrictions used in Clark and Curran (2004b) $$$$$ Generating all parses is inefficient and obscures whatever true semantic ambiguities are in the input.
