 $$$$$ Although rule-blocking of work, each establish a normal form for the syn- may eliminate an analysis of the sentence, as it does tactic calculus of (Lambek, 1958), which is weakly here, a semantically equivalent analysis such as (5g) context-free.
 $$$$$ Two parsing algorithms have been presented for practical use.
 $$$$$ Each forest can later be unpacked into inHowever, we can take advantage of the core result dividual equivalent parse trees, if desired.) of this paper, theorems 1 and 2, to do Karttunen's (Vijay-Shanker Sz Weir, 1990) also give a method redundancy check in 0(1) time—no worse than the for removing &quot;one well-known source&quot; of spurious normal-form parser's check for —FC and –BC tags. ambiguity from restricted CCGs; §4.2 above shows (Karttunen's version takes worst-case exponential that this is in fact the only source.

Eisner (1996, p.81) in fact suggested that the labeling system can be implemented in the grammar by templates, or in the processor by labeling the chart entries. $$$$$ The practical problem of &quot;extra&quot; parses in (2) becomes exponentially worse for longer strings, which can have up to a Catalan number of parses.
Eisner (1996, p.81) in fact suggested that the labeling system can be implemented in the grammar by templates, or in the processor by labeling the chart entries. $$$$$ In particular, the polynomial-time, polynomialspace CCG chart parser of (Vijay-Shanker & Weir, 1993) can be trivially adapted to respect the constraints by tagging chart entries.
Eisner (1996, p.81) in fact suggested that the labeling system can be implemented in the grammar by templates, or in the processor by labeling the chart entries. $$$$$ The technique eliminates all spurious ambiguities resulting from the interaction of these rules.

But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. $$$$$ No semantics is necessary; simply block any rule use that would violate (7).
But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. $$$$$ In particular, it is proved in §4.2 that the method constructs exactly one syntactic structure per semantic reading—e.g., just two parses for (3).
But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. $$$$$ Under categorial grammars that have powerful rules like composition, a simple n-word sentence can have exponentially many parses.
But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. $$$$$ Given a sentence, every reading that is available to the grammar has exactly one normal-form parse, no matter how many parses it has in toto.

The C&C parser employs the normal-form constraints of Eisner (1996) to address spurious ambiguity in 1-best parsing. $$$$$ More colloquially, (7) says that the output of rightward (leftward) composition may not compose or apply over anything to is right (left).
The C&C parser employs the normal-form constraints of Eisner (1996) to address spurious ambiguity in 1-best parsing. $$$$$ [likes](swp)/Np phrase-structure rule matching these templates.

The second strategy is to use Eisner's normal form constraints (Eisner, 1996). $$$$$ (Parsing strategies besides most linguistically reasonable choices, the proof of CKY would also work, in particular (Vijay-Shanker theorem 1 will go through,' so that the normal-form Si Weir, 1993)) The management of cached NFs in parser of §4 remains safe.
The second strategy is to use Eisner's normal form constraints (Eisner, 1996). $$$$$ One might worry about unexpected interactions involving crossing composition rules like A/B B \C –4- A \ C. Significantly, it turns out that (7) really does suffice; the proof is in §4.2.
The second strategy is to use Eisner's normal form constraints (Eisner, 1996). $$$$$ Although rule-blocking of work, each establish a normal form for the syn- may eliminate an analysis of the sentence, as it does tactic calculus of (Lambek, 1958), which is weakly here, a semantically equivalent analysis such as (5g) context-free.

 $$$$$ Nor do they recognize the redundancy in (20), because—just as for the example &quot;softly knock twice&quot; in §4.1—it is contingent on a kind of lexical coincidence, namely that a type-raised subject commutes with a (generically) type-raised object.
 $$$$$ These normal-form results for pure CCG lead directly to useful parsers for real, restricted CCG grammars.
 $$$$$ In addition to the Bn (&quot;generalized composition&quot;) The NF function is defined recursively by §4.2's rules given in §2, which give CCG power equivalent proof of theorem 1; semantic equivalence is also to TAG, rules based on the S (&quot;substitution&quot;) and defined independently of the grammar.

The parser only used a subset of CCG, pureCCG (Eisner, 1996), consisting of the Application and Composition rules. $$$$$ All other parses are suppressed by simple normal-form constraints that are enforced throughout the parsing process.
The parser only used a subset of CCG, pureCCG (Eisner, 1996), consisting of the Application and Composition rules. $$$$$ The non-standard constituents that are so crucial to CCG's analyses in (1), and in its account of intonational focus (Prevost & Steedman, 1994), remain available even in simpler sentences.
The parser only used a subset of CCG, pureCCG (Eisner, 1996), consisting of the Application and Composition rules. $$$$$ Future work should continue by eliminating the spurious ambiguities that arise from grammatical or lexical type-raising.
The parser only used a subset of CCG, pureCCG (Eisner, 1996), consisting of the Application and Composition rules. $$$$$ Pure CCG turns out to pro- by showing that the terms for a and a' differ somevide forward rules S and T such that a' = where, so correspond to different semantic recipes.

We propose and implement a modification of the Eisner (1996) normal form to account for generalized composition of bounded degree, and an extension to deal with grammatical type-raising. $$$$$ This paper addresses the problem for a fairly general form of Combinatory Categorial Grammar, by means of an efficient, correct, and easy to implement normal-form parsing tech- The parser is proved to find exone in each semantic equivalence class of allowable parses; that is, spurious ambiguity (as carefully defined) is shown to be both safely and completely eliminated.
We propose and implement a modification of the Eisner (1996) normal form to account for generalized composition of bounded degree, and an extension to deal with grammatical type-raising. $$$$$ One might choose to say that two parses are semantically equivalent if they derive the same phrase meaning.
We propose and implement a modification of the Eisner (1996) normal form to account for generalized composition of bounded degree, and an extension to deal with grammatical type-raising. $$$$$ Are the two analyses of VP/VP VP VP \VP semantically equivalent?
We propose and implement a modification of the Eisner (1996) normal form to account for generalized composition of bounded degree, and an extension to deal with grammatical type-raising. $$$$$ This paper presents a simple and flexible CCG parsing technique that prevents any such explosion of redundant CCG derivations.

Eisner (1996, section 5) also provides a safe and complete parsing algorithm which can return non-NF derivations when necessary to preseve an interpretation if composition is bounded or the grammar is restricted in other (arbitrary) ways. $$$$$ For based on this insight.
Eisner (1996, section 5) also provides a safe and complete parsing algorithm which can return non-NF derivations when necessary to preseve an interpretation if composition is bounded or the grammar is restricted in other (arbitrary) ways. $$$$$ Generating all parses is inefficient and obscures whatever true semantic ambiguities are in the input.
Eisner (1996, section 5) also provides a safe and complete parsing algorithm which can return non-NF derivations when necessary to preseve an interpretation if composition is bounded or the grammar is restricted in other (arbitrary) ways. $$$$$ Two parsing algorithms have been presented for practical use.
Eisner (1996, section 5) also provides a safe and complete parsing algorithm which can return non-NF derivations when necessary to preseve an interpretation if composition is bounded or the grammar is restricted in other (arbitrary) ways. $$$$$ That is, given a suitably Q fit NF T NF(a) free choice of meanings for the words, the two parses 131 /32 132 7 can be made to pick out two different VP-type func- This construction resembles a well-known normaltions in the model.

We have proposed a modification and extension of Eisner (1996)'s normal form that is more appropriate for commonly used variants of CCG with grammatical type-raising and generalized composition of bounded degree, as well as some non-combinatory extensions to CCG. $$$$$ This paper addresses the problem for a fairly general form of Combinatory Categorial Grammar, by means of an efficient, correct, and easy to implement normal-form parsing tech- The parser is proved to find exone in each semantic equivalence class of allowable parses; that is, spurious ambiguity (as carefully defined) is shown to be both safely and completely eliminated.
We have proposed a modification and extension of Eisner (1996)'s normal form that is more appropriate for commonly used variants of CCG with grammatical type-raising and generalized composition of bounded degree, as well as some non-combinatory extensions to CCG. $$$$$ Its competitor (813) is not, nor is any larger tree containing (8b).
We have proposed a modification and extension of Eisner (1996)'s normal form that is more appropriate for commonly used variants of CCG with grammatical type-raising and generalized composition of bounded degree, as well as some non-combinatory extensions to CCG. $$$$$ CCG may be regarded as a generalization of contextfree grammar (CFG)—one where a grammar has infinitely many nonterminals and phrase-structure rules.
We have proposed a modification and extension of Eisner (1996)'s normal form that is more appropriate for commonly used variants of CCG with grammatical type-raising and generalized composition of bounded degree, as well as some non-combinatory extensions to CCG. $$$$$ If type-raising is lexical, then the definitions of this paper do not recognize (19) as a spurious ambiguity, because the two parses are now, technically speaking, analyses of different sentences.

Hockenmaier (2003a) uses a model which favours only one of the derivations leading to aderived structure, namely the normal-form derivation (Eisner, 1996). $$$$$ This paper addresses the problem for a fairly general form of Combinatory Categorial Grammar, by means of an efficient, correct, and easy to implement normal-form parsing tech- The parser is proved to find exone in each semantic equivalence class of allowable parses; that is, spurious ambiguity (as carefully defined) is shown to be both safely and completely eliminated.
Hockenmaier (2003a) uses a model which favours only one of the derivations leading to aderived structure, namely the normal-form derivation (Eisner, 1996). $$$$$ In principle one could proceed without grammatical type-raising: (Dowty, 1988; Steedman, 1991) have argued on linguistic grounds that type-raising should be treated as a mere lexical redundancy property.
Hockenmaier (2003a) uses a model which favours only one of the derivations leading to aderived structure, namely the normal-form derivation (Eisner, 1996). $$$$$ This paper addresses the problem for a fairly general form of Combinatory Categorial Grammar, by means of an efficient, correct, and easy to implement normal-form parsing tech- The parser is proved to find exone in each semantic equivalence class of allowable parses; that is, spurious ambiguity (as carefully defined) is shown to be both safely and completely eliminated.
Hockenmaier (2003a) uses a model which favours only one of the derivations leading to aderived structure, namely the normal-form derivation (Eisner, 1996). $$$$$ Future work should continue by eliminating the spurious ambiguities that arise from grammatical or lexical type-raising.

For the normal-form model we were able to reduce the size of the charts considerably by applying two types of restriction to the parser: first, categories can only combine if they appear together in a rule instantiation in sections 2 21 of CCGbank; and second, we apply the normal-form restrictions described in Eisner (1996). $$$$$ One might worry about unexpected interactions involving crossing composition rules like A/B B \C –4- A \ C. Significantly, it turns out that (7) really does suffice; the proof is in §4.2.
For the normal-form model we were able to reduce the size of the charts considerably by applying two types of restriction to the parser: first, categories can only combine if they appear together in a rule instantiation in sections 2 21 of CCGbank; and second, we apply the normal-form restrictions described in Eisner (1996). $$$$$ The latter case requires consid• For a a leaf, put NF(a) = a. eration of 7's ancestors; the NF properties crucially • (<R, 0,7> denotes the parse tree formed by com- rule out counterexamples here. bining subtrees 13, 7 via rule R.) The notion of scope is relevant because semantic If a = <R,/3,7>, then take NF(a) = interpretations for CCG constituents can be written <R, NF(#),NF(-y)>, which exists by inductive as restricted lambda terms, in such a way that conhypothesis, unless this is not an NF tree.
For the normal-form model we were able to reduce the size of the charts considerably by applying two types of restriction to the parser: first, categories can only combine if they appear together in a rule instantiation in sections 2 21 of CCGbank; and second, we apply the normal-form restrictions described in Eisner (1996). $$$$$ In closing, it should be repeated that the results provided are for the TAG-equivalent Bn (generalized composition) formalism of (Joshi et al., 1991), optionally extended with the S (substitution) rules of (Szabolcsi, 1989).
For the normal-form model we were able to reduce the size of the charts considerably by applying two types of restriction to the parser: first, categories can only combine if they appear together in a rule instantiation in sections 2 21 of CCGbank; and second, we apply the normal-form restrictions described in Eisner (1996). $$$$$ This paper addresses the problem for a fairly general form of Combinatory Categorial Grammar, by means of an efficient, correct, and easy to implement normal-form parsing tech- The parser is proved to find exone in each semantic equivalence class of allowable parses; that is, spurious ambiguity (as carefully defined) is shown to be both safely and completely eliminated.

Our transformation is also technically related to the normal form construction for CCG parsing presented by Eisner (1996). $$$$$ In- c. [John likes]siNp deed, (Joshi et al., 1991) place certain restrictions d. [Mary]Np on the rule set of a CCG grammar, including a re- e. [likes Mary]s \Np quirement that the rule degree n is bounded over the f. [[John likes] Mary]s to be disallowed set.
Our transformation is also technically related to the normal form construction for CCG parsing presented by Eisner (1996). $$$$$ The practical problem of &quot;extra&quot; parses in (2) becomes exponentially worse for longer strings, which can have up to a Catalan number of parses.
Our transformation is also technically related to the normal form construction for CCG parsing presented by Eisner (1996). $$$$$ In particular, it is proved in §4.2 that the method constructs exactly one syntactic structure per semantic reading—e.g., just two parses for (3).
Our transformation is also technically related to the normal form construction for CCG parsing presented by Eisner (1996). $$$$$ Under categorial grammars that have powerful rules like composition, a simple n-word sentence can have exponentially many parses.

Consider the derivations in Figures 1 and 2, which show a normal form derivation (Eisner, 1996) and fully incremental derivation, respectively. $$$$$ (Wittenburg, 1987) assumes only one reading semantically, so just one of its anala CCG fragment lacking order-changing or higher- yses (5f)–(5g) is discovered while parsing (6).
Consider the derivations in Figures 1 and 2, which show a normal form derivation (Eisner, 1996) and fully incremental derivation, respectively. $$$$$ By pracform parsing, consider only a small CCG frag- ticing &quot;birth control&quot; for each bottom-up generation ment that lacks backward or order-changing com- of constituents in this way, we avoid a population position; (Niv, 1994) extends this result but does explosion of parsing options.
Consider the derivations in Figures 1 and 2, which show a normal form derivation (Eisner, 1996) and fully incremental derivation, respectively. $$$$$ One algorithm finds only normal forms; this simply and safely eliminates spurious ambiguity under most real CCG grammars.

CCG parsers often limit the use of the combinatory rules (in particular: type-raising) to obtain a single right-branching normal form derivation (Eisner, 1996) for each possible semantic interpretation. $$$$$ (Wit8 5 tenburg, 1987; Hepple & Morrill, 1989) anticipate this result, at least for some fragments of CCG, but leave the proof to future work.
CCG parsers often limit the use of the combinatory rules (in particular: type-raising) to obtain a single right-branching normal form derivation (Eisner, 1996) for each possible semantic interpretation. $$$$$ One algorithm finds only normal forms; this simply and safely eliminates spurious ambiguity under most real CCG grammars.
CCG parsers often limit the use of the combinatory rules (in particular: type-raising) to obtain a single right-branching normal form derivation (Eisner, 1996) for each possible semantic interpretation. $$$$$ It is not hard to see that (7a) eliminates all but right-branching parses of &quot;forward chains&quot; like A/B B/C C or A/B/C C/D D/E/F/G G/H, and that (7b) eliminates all but left-branching parses of &quot;backward chains.&quot; (Thus every functor will get its arguments, if possible, before it becomes an argument itself.)

Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. $$$$$ The other, more complex algorithm solves the spurious ambiguity problem for any CCG grammar, by using normal forms as an efficient tool for grouping semantically equivalent parses.
Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. $$$$$ All other parses are suppressed by simple normal-form constraints that are enforced throughout the parsing process.
Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. $$$$$ Nor do they recognize the redundancy in (20), because—just as for the example &quot;softly knock twice&quot; in §4.1—it is contingent on a kind of lexical coincidence, namely that a type-raised subject commutes with a (generically) type-raised object.
Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. $$$$$ One might worry about unexpected interactions involving crossing composition rules like A/B B \C –4- A \ C. Significantly, it turns out that (7) really does suffice; the proof is in §4.2.

In this section, we show that the D rules fit naturally within standard normal form constraints for CCG parsing (Eisner, 1996), by providing both combinatory and logical bases for D. $$$$$ An exhaustive parser serves up 252 CCG parses of (3), which must be sifted through, at considerable cost, in order to identify the two distinct meanings for further processing.'
In this section, we show that the D rules fit naturally within standard normal form constraints for CCG parsing (Eisner, 1996), by providing both combinatory and logical bases for D. $$$$$ The non-standard constituents that are so crucial to CCG's analyses in (1), and in its account of intonational focus (Prevost & Steedman, 1994), remain available even in simpler sentences.
In this section, we show that the D rules fit naturally within standard normal form constraints for CCG parsing (Eisner, 1996), by providing both combinatory and logical bases for D. $$$$$ Most work indispensable in contexts like (1)—while refusing to on spurious ambiguity has focused on categorial for- combine those constituents into (51).

Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). $$$$$ All other parses are suppressed by simple normal-form constraints that are enforced throughout the parsing process.
Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). $$$$$ A complex 3 Overview of the Parsing Strategy category like ( (S \NP) \ (S \NP))/N may be written as As is well known, general CFG parsing methods S \NP \ (S \NP)/N, under a convention that slashes are can be applied directly to CCG.
Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). $$$$$ Under categorial grammars that have powerful rules like composition, a simple n-word sentence can have exponentially many parses.
Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). $$$$$ Two parsing algorithms have been presented for practical use.

One set are the normal form constraints, as described by Eisner (1996). $$$$$ Generating all parses is inefficient and obscures whatever true semantic ambiguities are in the input.
One set are the normal form constraints, as described by Eisner (1996). $$$$$ The latter case requires consid• For a a leaf, put NF(a) = a. eration of 7's ancestors; the NF properties crucially • (<R, 0,7> denotes the parse tree formed by com- rule out counterexamples here. bining subtrees 13, 7 via rule R.) The notion of scope is relevant because semantic If a = <R,/3,7>, then take NF(a) = interpretations for CCG constituents can be written <R, NF(#),NF(-y)>, which exists by inductive as restricted lambda terms, in such a way that conhypothesis, unless this is not an NF tree.
One set are the normal form constraints, as described by Eisner (1996). $$$$$ These normal-form results for pure CCG lead directly to useful parsers for real, restricted CCG grammars.
One set are the normal form constraints, as described by Eisner (1996). $$$$$ (Wit8 5 tenburg, 1987; Hepple & Morrill, 1989) anticipate this result, at least for some fragments of CCG, but leave the proof to future work.

We applied the same normal-form restrictions used in Clark and Curran (2004b): categories can 12 only combine if they have been seen to combine in Sections 2-21 of CCGbank, and only if they do not violate the Eisner (1996a) normal-form constraints. $$$$$ (As always, a separate lexicon specifies the possible categories of each word.)
We applied the same normal-form restrictions used in Clark and Curran (2004b): categories can 12 only combine if they have been seen to combine in Sections 2-21 of CCGbank, and only if they do not violate the Eisner (1996a) normal-form constraints. $$$$$ In principle one could proceed without grammatical type-raising: (Dowty, 1988; Steedman, 1991) have argued on linguistic grounds that type-raising should be treated as a mere lexical redundancy property.
