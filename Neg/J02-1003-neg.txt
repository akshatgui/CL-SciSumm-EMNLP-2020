Therefore, van Deemter (2002) has extended the set of descriptors to boolean combinations of attributes, including negations. $$$$$ Examples of this kind suggest that GRE should also take the computational complexity of interpretation into account.
Therefore, van Deemter (2002) has extended the set of descriptors to boolean combinations of attributes, including negations. $$$$$ None of this can be corrected, since the algorithm does not use backtracking.
Therefore, van Deemter (2002) has extended the set of descriptors to boolean combinations of attributes, including negations. $$$$$ None of this can be corrected, since the algorithm does not use backtracking.

Recent extensions address some of its shortcomings, such as negated and disjoined properties (van Deemter, 2002) and an account of salience for generating contextually appropriate shorter REs (Krahmer and Theune, 2002). $$$$$ Helpful comments from the reviewers of Computational Linguistics are also gratefully acknowledged.
Recent extensions address some of its shortcomings, such as negated and disjoined properties (van Deemter, 2002) and an account of salience for generating contextually appropriate shorter REs (Krahmer and Theune, 2002). $$$$$ Helpful comments from the reviewers of Computational Linguistics are also gratefully acknowledged.
Recent extensions address some of its shortcomings, such as negated and disjoined properties (van Deemter, 2002) and an account of salience for generating contextually appropriate shorter REs (Krahmer and Theune, 2002). $$$$$ Thanks are due to Robert Dale, Magn´us Halld´orsson, Emiel Krahmer, Paul Piwek, Richard Power, Ehud Reiter, and Matthew Stone for useful discussions.

The Context-Sensitive extension (Krahmer and Theune, 2002) is able to generate referring expressions for the most salient entity in a context; the Boolean Expressions algorithm (van Deemter, 2002) is able to derive expressions containing boolean operators, as in the cup that does not have a handle; and the Sets algorithm (van Deemter, 2002) extends the basic approach to references to sets, as in the red cups. $$$$$ The GRE algorithms discussed in this paper are fairly limited in their aspirations.
The Context-Sensitive extension (Krahmer and Theune, 2002) is able to generate referring expressions for the most salient entity in a context; the Boolean Expressions algorithm (van Deemter, 2002) is able to derive expressions containing boolean operators, as in the cup that does not have a handle; and the Sets algorithm (van Deemter, 2002) extends the basic approach to references to sets, as in the red cups. $$$$$ To guarantee that a distinguishing description is generated whenever such descriptions exist, the paper proposes generalizations and extensions of the Incremental
The Context-Sensitive extension (Krahmer and Theune, 2002) is able to generate referring expressions for the most salient entity in a context; the Boolean Expressions algorithm (van Deemter, 2002) is able to derive expressions containing boolean operators, as in the cup that does not have a handle; and the Sets algorithm (van Deemter, 2002) extends the basic approach to references to sets, as in the red cups. $$$$$ Helpful comments from the reviewers of Computational Linguistics are also gratefully acknowledged.

Recently, algorithms have been applied to the identification of sets of objects rather than individuals [Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001], and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations [van Deemter 2002]. $$$$$ Having extablished a completeness result for a version of the intersective Incremental Algorithm, we turn to questions of completeness that involve more complex Boolean combinations in Section 4.
Recently, algorithms have been applied to the identification of sets of objects rather than individuals [Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001], and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations [van Deemter 2002]. $$$$$ It follows that [[Desm]] c [[Q1]] n · · · n [[Qm]] = {r}.
Recently, algorithms have been applied to the identification of sets of objects rather than individuals [Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001], and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations [van Deemter 2002]. $$$$$ After studying references to individual objects, we discuss references to sets, including Boolean descriptions that make use of negated and disjoined properties.
Recently, algorithms have been applied to the identification of sets of objects rather than individuals [Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001], and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations [van Deemter 2002]. $$$$$ Note that our modular approach makes it unnatural to assume that a description is always expressed by a single noun phrase: if several sentences are needed, then so be it.

This is because these operators appear only in embedded boolean combinations [van Deemter 2002], which are the basis for building larger varieties of expressions [Horacek 2004]. $$$$$ After studying references to individual objects, we discuss references to sets, including Boolean descriptions that make use of negated and disjoined properties.
This is because these operators appear only in embedded boolean combinations [van Deemter 2002], which are the basis for building larger varieties of expressions [Horacek 2004]. $$$$$ They combined this with the known fact that speakers often produce nonminimal descriptions anyway (e.g., Pechman 1989).
This is because these operators appear only in embedded boolean combinations [van Deemter 2002], which are the basis for building larger varieties of expressions [Horacek 2004]. $$$$$ This can be done in many different ways depending, among other things, on what form of descriptions are preferred, for example, disjunctions of conjunctions, or conjunctions of disjunctions.

Subsequent work on referring expression generation has expanded the logical framework to allow reference by negation (the dog that is not black) and references to multiple entities (the brown or black dogs) (van Deemter, 2002), explored different search algorithms for finding the minimal description (e.g., Horacek (2003)) and offered different representation frameworks like graph theory (Krahmer et al, 2003) as alternatives to AVMs. $$$$$ Optimizations may be applied to shorten the resulting descriptions.
Subsequent work on referring expression generation has expanded the logical framework to allow reference by negation (the dog that is not black) and references to multiple entities (the brown or black dogs) (van Deemter, 2002), explored different search algorithms for finding the minimal description (e.g., Horacek (2003)) and offered different representation frameworks like graph theory (Krahmer et al, 2003) as alternatives to AVMs. $$$$$ There is no agreement on the extent to which computational linguists should worry about the computational complexity of algorithms, or about the precise way in which complexity is most relevant (e.g., “typical” or worst-case complexity, cf. footnote 3).
Subsequent work on referring expression generation has expanded the logical framework to allow reference by negation (the dog that is not black) and references to multiple entities (the brown or black dogs) (van Deemter, 2002), explored different search algorithms for finding the minimal description (e.g., Horacek (2003)) and offered different representation frameworks like graph theory (Krahmer et al, 2003) as alternatives to AVMs. $$$$$ Double incrementality, however, does not save D&RBoolean from intractability.

Transformation Rules: In connection with reference to sets, it has been proposed to use the Q-M algorithm (McCluskey,) to find the shortest formula equivalent to a given input formula (van Deemter, 2002). $$$$$ This suggests that the proposed algorithm might also be empirically more accurate than the one using limited backtracking provided, of course, properties are properly aggregated (e.g., Dalianis and Hovy 1996).
Transformation Rules: In connection with reference to sets, it has been proposed to use the Q-M algorithm (McCluskey,) to find the shortest formula equivalent to a given input formula (van Deemter, 2002). $$$$$ We will call an algorithm complete if it is successful in every situation in which a distinguishing description exists.
Transformation Rules: In connection with reference to sets, it has been proposed to use the Q-M algorithm (McCluskey,) to find the shortest formula equivalent to a given input formula (van Deemter, 2002). $$$$$ Then a proof by induction over van Deemter Generating Referring Expressions i shows that [[Desi]] c [[Q1]] n · · · n [[Qi]], for all i < m. (Consider the basic case, where i = 1, and assume that Q1 E� [[Des1]].

GRE has been dominated by Dale and Reiter's (1995) Incremental Algorithm (IA), one version of which, generalised to deal with non-disjunctive plural references, is shown in Algorithm 1 (van Deemter, 2002). $$$$$ This paper brings a logical perspective to the generation of referring expressions, addressing the incompleteness of existing algorithms in this area.
GRE has been dominated by Dale and Reiter's (1995) Incremental Algorithm (IA), one version of which, generalised to deal with non-disjunctive plural references, is shown in Algorithm 1 (van Deemter, 2002). $$$$$ To guarantee that a distinguishing description is generated whenever such descriptions exist, the paper proposes generalizations and extensions of the Incremental Algorithm of Dale and Reiter (1995).

Such a description would be returned by a generalised version of Algorithm 1 proposed by van Deemter (2002). $$$$$ To guarantee that a distinguishing description is generated whenever such descriptions exist, the paper proposes generalizations and extensions of the Incremental Algorithm of Dale and Reiter (1995).
Such a description would be returned by a generalised version of Algorithm 1 proposed by van Deemter (2002). $$$$$ The paper brings a degree of formal precision to this issue and reveals a number of reasons why current GRE algorithms are incomplete; we sketch remedies and discuss their consequences in terms of linguistic coverage and computational tractability.
Such a description would be returned by a generalised version of Algorithm 1 proposed by van Deemter (2002). $$$$$ Be this as it may, we believe that complexity theory can offer valuable insights into the structure of GRE algorithms and that the growing attention to complexity in this area is a healthy development even if the practical implications are not always straightforward.
Such a description would be returned by a generalised version of Algorithm 1 proposed by van Deemter (2002). $$$$$ But r E [[Desm]], so [[Desm]] = {r}.

Unlike van Deemter (2002), we only focus on disjunction, leaving negation aside. $$$$$ A nondistinguishing description may take the form either of a definite description (as in John’s son, when John has several sons) or of an indefinite description (as in one of John’s sons; Horacek 1997; Stone and Webber 1998; Krahmer and Theune 1999).
Unlike van Deemter (2002), we only focus on disjunction, leaving negation aside. $$$$$ But in fact, a description can contain much more than is logically necessary for identification, even beyond the redundancies allowed by the Incremental Algorithm.
Unlike van Deemter (2002), we only focus on disjunction, leaving negation aside. $$$$$ Such generalizations are natural because the properties involved are implicitly present in the KB, as we will explain; they become especially relevant when the algorithms are also generalized to generate references to sets, rather than individual objects.
Unlike van Deemter (2002), we only focus on disjunction, leaving negation aside. $$$$$ Making informed decisions about such questions, with proper attention to their combined effects, is a difficult task that is perhaps best tackled using the graph-theoretical approach outlined by Krahmer, van Erk, and Verleg (2001).

Evaluation results showed that these principles are on the right track, with significantly better performance over a previous model (van Deemter, 2002). $$$$$ Instead of exploring D&RBoolean,Att any further, we will return to its predecessor, D&RBoolean, to prove that it is powerful enough to do its job.
Evaluation results showed that these principles are on the right track, with significantly better performance over a previous model (van Deemter, 2002). $$$$$ Having extablished a completeness result for a version of the intersective Incremental Algorithm, we turn to questions of completeness that involve more complex Boolean combinations in Section 4.
Evaluation results showed that these principles are on the right track, with significantly better performance over a previous model (van Deemter, 2002). $$$$$ After studying references to individual objects, we discuss references to sets, including Boolean descriptions that make use of negated and disjoined properties.
Evaluation results showed that these principles are on the right track, with significantly better performance over a previous model (van Deemter, 2002). $$$$$ A person like Mr. Jones, for example, may be designated using an artificial name like #Jones083, if the name Jones is not uniquely distinguishing.

For instance, the classical Dale and Reiter algorithms compute purely conjunctive formulas; van Deemter (2002) extends this language by adding the other propositional connectives, whereas Dale and Haddock (1991) extends it by allowing existential quantification. $$$$$ (For example, it is useless to consider the property P1 U P2 U P1, which must be true of any element in the domain, or the property P1 U P2 U P1, which is equivalent to the earlier-considered property P1 U P2.)
For instance, the classical Dale and Reiter algorithms compute purely conjunctive formulas; van Deemter (2002) extends this language by adding the other propositional connectives, whereas Dale and Haddock (1991) extends it by allowing existential quantification. $$$$$ If Ai precedes Aj in A, then Ai is “more preferred than” Aj; as a consequence, Ai will be considered before Aj by the algorithm.

Although we agree with van Deemter (2002) and others that the careful use of negation and disjunction can improve REs, these connectives must not be overused. $$$$$ It does this by logically conjoining a number of properties found in a part of the KB that represents information shared between speaker and hearer.
Although we agree with van Deemter (2002) and others that the careful use of negation and disjunction can improve REs, these connectives must not be overused. $$$$$ Abbreviating B = BLACK, D = DOG, P = POODLE, and W = WHITE, we have P = (B, D, P, W, B, D, P, W).
Although we agree with van Deemter (2002) and others that the careful use of negation and disjunction can improve REs, these connectives must not be overused. $$$$$ Accordingly, they proposed an algorithm that only approximates Full Brevity, while being of only linear complexity.
Although we agree with van Deemter (2002) and others that the careful use of negation and disjunction can improve REs, these connectives must not be overused. $$$$$ Now either D&R returns Success before it has inspected all of Q1, ... , Qm, or it reaches the point where all of Q1, ... , Qm have been inspected.

Recently, algorithms have also been developed to the identification of sets of objects rather than individuals (Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001), and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations (van Deemter 2002). $$$$$ Thanks are due to Robert Dale, Magn´us Halld´orsson, Emiel Krahmer, Paul Piwek, Richard Power, Ehud Reiter, and Matthew Stone for useful discussions.
Recently, algorithms have also been developed to the identification of sets of objects rather than individuals (Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001), and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations (van Deemter 2002). $$$$$ Which is better: adding a relational property to a given incomplete description (... in the wooden shed) or adding a negated property (... which is not a poodle)?
Recently, algorithms have also been developed to the identification of sets of objects rather than individuals (Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001), and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations (van Deemter 2002). $$$$$ Examples of this kind suggest that GRE should also take the computational complexity of interpretation into account.

An exception to this method is the work by Paraboni and van Deemter (2002) who use hierarchical object representations to refer to parts of a book (figures, sections., etc.). $$$$$ But in fact, a description can contain much more than is logically necessary for identification, even beyond the redundancies allowed by the Incremental Algorithm.
An exception to this method is the work by Paraboni and van Deemter (2002) who use hierarchical object representations to refer to parts of a book (figures, sections., etc.). $$$$$ The induction step is analogous.)
An exception to this method is the work by Paraboni and van Deemter (2002) who use hierarchical object representations to refer to parts of a book (figures, sections., etc.). $$$$$ To guarantee that a distinguishing description is generated whenever such descriptions exist, the paper proposes generalizations and extensions of the Incremental Algorithm of Dale and Reiter (1995).
An exception to this method is the work by Paraboni and van Deemter (2002) who use hierarchical object representations to refer to parts of a book (figures, sections., etc.). $$$$$ The lemma is true for all n < i, so if x is sent to D&RBoolean, then the output is some x' such that [[x']] = [[x]], in fewer than i phases; so if, instead, cp is sent to D&RBoolean, then, after i − 1 phases, some possibly incomplete description 77 has been found, such that [[77]] C [[x]].
