In this paper we present an algorithm for generating sentences using unification categorial grammars (UCGs, Zeevat et al 1987) but which extends to any categorial grammar with unification (e.g. categorial unification grammars, Uszkoreit 1986, Karttunen 1987). $$$$$ The following section contains a summary of the motivations for working on and with CUG and the main objectives of this work.
In this paper we present an algorithm for generating sentences using unification categorial grammars (UCGs, Zeevat et al 1987) but which extends to any categorial grammar with unification (e.g. categorial unification grammars, Uszkoreit 1986, Karttunen 1987). $$$$$ Approaches to selected linguistic phenomena such as long-distance dependencies, adjuncts, word order, and extraposition are discussed.
In this paper we present an algorithm for generating sentences using unification categorial grammars (UCGs, Zeevat et al 1987) but which extends to any categorial grammar with unification (e.g. categorial unification grammars, Uszkoreit 1986, Karttunen 1987). $$$$$ Instead ot7 phrase structure rules, the grammar contains one or, in some formalisms, two combination rules that combine a functor and an argument by applying the function encoded in the functor to the argument constituent.
In this paper we present an algorithm for generating sentences using unification categorial grammars (UCGs, Zeevat et al 1987) but which extends to any categorial grammar with unification (e.g. categorial unification grammars, Uszkoreit 1986, Karttunen 1987). $$$$$ to be changed rule of forward value -~ functor argument <value> = <functor function val> < argument > = < functor function arg > <functor function dir> = Right.

The lexical types are organised into an inheritance hierarchy, constrained by expressions of a simple feature based category description language, inspired by previous attempts to integrate categorial grammars and unification-based grammars, e.g. Uszkoreit (1986) and Zeevat et al (1987). $$$$$ In addition, they might also be used by linguists to denote linguistic theories that are built around or on top of such a formalism.
The lexical types are organised into an inheritance hierarchy, constrained by expressions of a simple feature based category description language, inspired by previous attempts to integrate categorial grammars and unification-based grammars, e.g. Uszkoreit (1986) and Zeevat et al (1987). $$$$$ Rules that propagate gap information might also include rules that permit parasitic gaps along the lines of Steedman's rules of functional substitution.

Unificationbased versions of Categorial Grammar, known as CUG or UCG, have attracted considerable attention recently (see, for instance, Uszkoreit, 1986, Karttunen, 1986, Bouma, 1988, Bouma et al, 1988, and Calder et al, 1988). $$$$$ In a functor category such as A/B, only domain and range of the function are specified but nothing is said about bow they are related; how, for instance, the features of the argument influence the features of the value.
Unificationbased versions of Categorial Grammar, known as CUG or UCG, have attracted considerable attention recently (see, for instance, Uszkoreit, 1986, Karttunen, 1986, Bouma, 1988, Bouma et al, 1988, and Calder et al, 1988). $$$$$ The meaning of the adjective is indicated by the atom Red.
Unificationbased versions of Categorial Grammar, known as CUG or UCG, have attracted considerable attention recently (see, for instance, Uszkoreit, 1986, Karttunen, 1986, Bouma, 1988, Bouma et al, 1988, and Calder et al, 1988). $$$$$ \[f further research confirms this hypothesis, the incremental {nstantiation f valency lists could be performed through sets of finite state machines.
Unificationbased versions of Categorial Grammar, known as CUG or UCG, have attracted considerable attention recently (see, for instance, Uszkoreit, 1986, Karttunen, 1986, Bouma, 1988, Bouma et al, 1988, and Calder et al, 1988). $$$$$ An example is VP modification.

Higher order versions of categorial grammars like the ones being produced in the CUG/UCG-frameworks. $$$$$ In this paper, the basic concepts of CUGs and simple examples of their application will be presented.
Higher order versions of categorial grammars like the ones being produced in the CUG/UCG-frameworks. $$$$$ Categorial unification grammars (CUGs) embody the essential properties of both unification and categorial grammar formalisms.

The family of grammar models that are based on such formalisms include Generalized Phrase Structure Grammar (GPSG) [Gazdar et al 1985], Lexical Functional Grammar (LFG) [Bresnan 1982], Functional Unification Grammar (bUG) [Kay 1984], Head-Driven Phrase Structure Grammar (I-IPSG) [Pollard and Sag 1988], and Categorial Unification Grammar (CUG) [Karttunen 1986, Uszkoreit 1986, Zeevat et al 1987]. $$$$$ In this paper, the basic concepts of CUGs and simple examples of their application will be presented.
The family of grammar models that are based on such formalisms include Generalized Phrase Structure Grammar (GPSG) [Gazdar et al 1985], Lexical Functional Grammar (LFG) [Bresnan 1982], Functional Unification Grammar (bUG) [Kay 1984], Head-Driven Phrase Structure Grammar (I-IPSG) [Pollard and Sag 1988], and Categorial Unification Grammar (CUG) [Karttunen 1986, Uszkoreit 1986, Zeevat et al 1987]. $$$$$ It requires that information about the two special features be added to every rule.
The family of grammar models that are based on such formalisms include Generalized Phrase Structure Grammar (GPSG) [Gazdar et al 1985], Lexical Functional Grammar (LFG) [Bresnan 1982], Functional Unification Grammar (bUG) [Kay 1984], Head-Driven Phrase Structure Grammar (I-IPSG) [Pollard and Sag 1988], and Categorial Unification Grammar (CUG) [Karttunen 1986, Uszkoreit 1986, Zeevat et al 1987]. $$$$$ There are three types of rules that instantiate l xical entries: feature instantiation rules, valency instantiation rules, and order instantiation rules.

Use of unification (a core operation in HPSG) in CG dates at least as far back as Karttunen (1986, 1989), Uszkoreit (1986), and Zeevat (1988). $$$$$ In the first section, I will introduce the basic notions of CUGs and demonstrate them through examples in PATR notation.
Use of unification (a core operation in HPSG) in CG dates at least as far back as Karttunen (1986, 1989), Uszkoreit (1986), and Zeevat (1988). $$$$$ Original Earley prediction works on category symbols.
Use of unification (a core operation in HPSG) in CG dates at least as far back as Karttunen (1986, 1989), Uszkoreit (1986), and Zeevat (1988). $$$$$ Adverbs and adverbial clauses could receive different features even if their categories encode the same combination function.
