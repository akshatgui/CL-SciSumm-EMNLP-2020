The relation tuple is then converted to root form using the Sussex morphological analyser (Minnen et al, 2000) and the POS tags are removed. $$$$$ We describe how this morphological generator is used in a prototype system for automatic simplification of English newspaper text, and discuss practical morphological and orthographic issues we have encountered in generation of unrestricted text within this application.
The relation tuple is then converted to root form using the Sussex morphological analyser (Minnen et al, 2000) and the POS tags are removed. $$$$$ We describe how this morphological generator is used in a prototype system for automatic simplification of English newspaper text, and discuss practical morphological and orthographic issues we have encountered in generation of unrestricted text within this application.
The relation tuple is then converted to root form using the Sussex morphological analyser (Minnen et al, 2000) and the POS tags are removed. $$$$$ Section 2 describes the morphological generator and evaluates its accuracy.

Following Chambers and Jurafsky (2008), we extracted and lemmatized the verbs from the New York Times section of the Gigaword Corpus using the Stanford POS tagger (Toutanova et al, 2004) and the Morphalemmatizer (Minnen et al, 2000). $$$$$ This work was funded by UK EPSRC project GR/L53175 PSET: Practical Simplification of English Text', and by an EPSRC Advanced Fellowship to the second author.
Following Chambers and Jurafsky (2008), we extracted and lemmatized the verbs from the New York Times section of the Gigaword Corpus using the Stanford POS tagger (Toutanova et al, 2004) and the Morphalemmatizer (Minnen et al, 2000). $$$$$ In practice, it is advantageous to have morphological generation as a postprocessing component that is separate from the rest of the NLG system.
Following Chambers and Jurafsky (2008), we extracted and lemmatized the verbs from the New York Times section of the Gigaword Corpus using the Stanford POS tagger (Toutanova et al, 2004) and the Morphalemmatizer (Minnen et al, 2000). $$$$$ Karttunen (1994)) are publicly available or can be licensed for research use, associated largescale linguistic ..descrip Lions—for-example:En— glish morphological lexicons---are usually commercial products and are therefore not freely available to the NLG research community.

Each word was reduced to its morphological root using the morphological analyser described in (Minnen et al, 2000). $$$$$ Thanks also to the anonymous reviewers for insightful comments.

The relation tuple is then converted to root form using the Sussex morphological analyser (Minnen et al., 2000) and the POS tags are stripped. $$$$$ natural language generation sysit often advantageous to have a separate component that deals purely with morphological processing.
The relation tuple is then converted to root form using the Sussex morphological analyser (Minnen et al., 2000) and the POS tags are stripped. $$$$$ This work was funded by UK EPSRC project GR/L53175 PSET: Practical Simplification of English Text', and by an EPSRC Advanced Fellowship to the second author.
The relation tuple is then converted to root form using the Sussex morphological analyser (Minnen et al., 2000) and the POS tags are stripped. $$$$$ In future work we intend to investigate the use of phonological information in machine readable dictionaries for a inore principled solution to the consonant doubling problem.
The relation tuple is then converted to root form using the Sussex morphological analyser (Minnen et al., 2000) and the POS tags are stripped. $$$$$ In future work we intend to investigate the use of phonological information in machine readable dictionaries for a inore principled solution to the consonant doubling problem.

Information on lemmatisation, as well as abbreviations and their long forms, is added using the morpha lemmatiser (Minnen et al, 2000) and the ExtractAbbrev script of Schwartz and Hearst (2003), respectively. $$$$$ However, a full form lexicon is unwieldy and inconvenient to update, and a system derived from it cannot cope gracefully with unknown words because it does not contain generalisations about regular or subregular morphological behaviour.
Information on lemmatisation, as well as abbreviations and their long forms, is added using the morpha lemmatiser (Minnen et al, 2000) and the ExtractAbbrev script of Schwartz and Hearst (2003), respectively. $$$$$ This makes for a very simple and perspicuous way to express generalizations and exceptions.
Information on lemmatisation, as well as abbreviations and their long forms, is added using the morpha lemmatiser (Minnen et al, 2000) and the ExtractAbbrev script of Schwartz and Hearst (2003), respectively. $$$$$ However, a full form lexicon is unwieldy and inconvenient to update, and a system derived from it cannot cope gracefully with unknown words because it does not contain generalisations about regular or subregular morphological behaviour.
Information on lemmatisation, as well as abbreviations and their long forms, is added using the morpha lemmatiser (Minnen et al, 2000) and the ExtractAbbrev script of Schwartz and Hearst (2003), respectively. $$$$$ Thanks also to the anonymous reviewers for insightful comments.

Heads are extracted from the chunks and lemmatized (Minnen et al, 2000). $$$$$ We also plan to further increase the flexibility of the generator by including an option that allows the user to choose whether it ha.s a preference for generating British or American English
Heads are extracted from the chunks and lemmatized (Minnen et al, 2000). $$$$$ Hut note that the rules in (1) and (2) will always match the same input span_ 3Flex does not allow the use of rules that have Heniteal left-hand side regular expressions. followed by one consonant and the last part of the-word is - stressed-,--in: -general. the ,corisoriant is doubled (Procter, 1995).
Heads are extracted from the chunks and lemmatized (Minnen et al, 2000). $$$$$ We describe how this morphological generator is used in a prototype system for automatic simplification of English newspaper text, and discuss practical morphological and orthographic issues we have encountered in generation of unrestricted text within this application.
Heads are extracted from the chunks and lemmatized (Minnen et al, 2000). $$$$$ In DRAFTER-2 (Power et aL, 1998), an a/an feature can be associated with any lexical entry, and its value is propagated up to the NP level through leftmost rule daughters in the grammar (Power, personal communication).

Further linguistic markup is added using the morpha lemmatiser (Minnen et al, 2000) and the C&C named entity tagger (Curran and Clark, 2003) trained on the data from MUC-7. $$$$$ It does not contain an explicit lexicon or word-list, but instead comprises a set of morphological generalisations together with a list of exceptions for specific (irregular) word forms.
Further linguistic markup is added using the morpha lemmatiser (Minnen et al, 2000) and the C&C named entity tagger (Curran and Clark, 2003) trained on the data from MUC-7. $$$$$ natural language generation sysit often advantageous to have a separate component that deals purely with morphological processing.
Further linguistic markup is added using the morpha lemmatiser (Minnen et al, 2000) and the C&C named entity tagger (Curran and Clark, 2003) trained on the data from MUC-7. $$$$$ Similarly, .the orthography of the .genitive marker cannot be determined without taking context into account, since it depends on the identity of the last letter of the preceding word.

We next lemmatised the data using morpha (Minnen et al, 2000), and chunk parsed the WSJ with TiMBL 4.1 (Daelemans et al, 2001) using the Brown corpus as training data. $$$$$ This makes orthographic processing difficult to decouple from the rest of the system, compromising maintainability and ease of reuse.
We next lemmatised the data using morpha (Minnen et al, 2000), and chunk parsed the WSJ with TiMBL 4.1 (Daelemans et al, 2001) using the Brown corpus as training data. $$$$$ The final processing stage in the system is therefore morphological generation, using the generator described in the previous section.
We next lemmatised the data using morpha (Minnen et al, 2000), and chunk parsed the WSJ with TiMBL 4.1 (Daelemans et al, 2001) using the Brown corpus as training data. $$$$$ This work was funded by UK EPSRC project GR/L53175 PSET: Practical Simplification of English Text', and by an EPSRC Advanced Fellowship to the second author.
We next lemmatised the data using morpha (Minnen et al, 2000), and chunk parsed the WSJ with TiMBL 4.1 (Daelemans et al, 2001) using the Brown corpus as training data. $$$$$ Thanks also to the anonymous reviewers for insightful comments.

Tokenisation, species word identification and chunking were implemented in-house using the LTXML2 tools (Grover and Tobin, 2006), whilst abbreviation extraction used the Schwartz and Hearst abbreviation extractor (Schwartz and Hearst, 2003) and lemmatisation used morpha (Minnen et al, 2000). $$$$$ We also plan to further increase the flexibility of the generator by including an option that allows the user to choose whether it ha.s a preference for generating British or American English
Tokenisation, species word identification and chunking were implemented in-house using the LTXML2 tools (Grover and Tobin, 2006), whilst abbreviation extraction used the Schwartz and Hearst abbreviation extractor (Schwartz and Hearst, 2003) and lemmatisation used morpha (Minnen et al, 2000). $$$$$ We are following a well-established line of research into the use of finite-state techniques for lexical and shallow syntactic NLP tasks (e.g.
Tokenisation, species word identification and chunking were implemented in-house using the LTXML2 tools (Grover and Tobin, 2006), whilst abbreviation extraction used the Schwartz and Hearst abbreviation extractor (Schwartz and Hearst, 2003) and lemmatisation used morpha (Minnen et al, 2000). $$$$$ Also, a side-effect of the fact that the generator is derived from the analyser is that the two modules have exactly the same coverage and are guaranteed to stay in step with each other.
Tokenisation, species word identification and chunking were implemented in-house using the LTXML2 tools (Grover and Tobin, 2006), whilst abbreviation extraction used the Schwartz and Hearst abbreviation extractor (Schwartz and Hearst, 2003) and lemmatisation used morpha (Minnen et al, 2000). $$$$$ We describe how this morphological generator is used in a prototype system for automatic simplification of English newspaper text, and discuss practical morphological and orthographic issues we have encountered in generation of unrestricted text within this application.

We used the morpha lemmatizer (Minnen et al, 2000), which is built into the C&C tools, to match tokens across T and H; and we converted all tokens to lowercase. $$$$$ In the sentence in (4) we need only eliminate the space before the genitive marking, obtaining King's Arms.
We used the morpha lemmatizer (Minnen et al, 2000), which is built into the C&C tools, to match tokens across T and H; and we converted all tokens to lowercase. $$$$$ This work was funded by UK EPSRC project GR/L53175 PSET: Practical Simplification of English Text', and by an EPSRC Advanced Fellowship to the second author.
We used the morpha lemmatizer (Minnen et al, 2000), which is built into the C&C tools, to match tokens across T and H; and we converted all tokens to lowercase. $$$$$ We present such a component: a fast and robust morphological generator for English based on finite-state techniques that generates a word form given a specification of the lemma, part-of-speech, and the type of inflection required.
We used the morpha lemmatizer (Minnen et al, 2000), which is built into the C&C tools, to match tokens across T and H; and we converted all tokens to lowercase. $$$$$ natural language generation sysit often advantageous to have a separate component that deals purely with morphological processing.

Part-of-speech (POS) tagging is done using the C&C tagger (Curran and Clark, 2003a) and lemmatisation is done using morpha (Minnen et al, 2000). $$$$$ We present such a component: a fast and robust morphological generator for English based on finite-state techniques that generates a word form given a specification of the lemma, part-of-speech, and the type of inflection required.
Part-of-speech (POS) tagging is done using the C&C tagger (Curran and Clark, 2003a) and lemmatisation is done using morpha (Minnen et al, 2000). $$$$$ Consider the sentence:6 (4) *Brian Cookman is the attraction at the King '8 Arms on Saturday night and he will be back on Sunday night for a acoustic jam session.
Part-of-speech (POS) tagging is done using the C&C tagger (Curran and Clark, 2003a) and lemmatisation is done using morpha (Minnen et al, 2000). $$$$$ We are currently testing the components of the simplification system on a corpus of 1000 news stories downloaded from the :Sund,erland Echo (a local newspaper in North-East England).

The Grefenstette (1994) relation extractor produces context relations that are then lemmatised using the Minnen et al (2000) morphological analyser. $$$$$ natural language generation sysit often advantageous to have a separate component that deals purely with morphological processing.
The Grefenstette (1994) relation extractor produces context relations that are then lemmatised using the Minnen et al (2000) morphological analyser. $$$$$ The original version of the morphological analyser was kindly provided to us by the University of Sheffield GATE project—Chris -Brew, Dale, Gerdemann • • Adam Kilgarriff and Ehud Reiter have suggested improvements to the analyser/generator.
The Grefenstette (1994) relation extractor produces context relations that are then lemmatised using the Minnen et al (2000) morphological analyser. $$$$$ In a number of cases either the CELEX lemmatisation was wrong in that it disagreed with the relevant entry in the Cambridge International Dictionary of English (Procter, 1995), or the output of the generator was correct even though it was not identical to the word form given in CELEX.

B5 $$$$$ We have therefore implemented a final orthographic postprocessing stage.
B5 $$$$$ Karttunen (1994)) are publicly available or can be licensed for research use, associated largescale linguistic ..descrip Lions—for-example:En— glish morphological lexicons---are usually commercial products and are therefore not freely available to the NLG research community.
B5 $$$$$ The system comprises two main components: an analysis module which downloads the source newspaper texts from the web and computes syntactic analyses for the sentences in them, and a simplification module which operates on the output of the analyser to improve the comprehensibility of the text.
B5 $$$$$ This work was funded by UK EPSRC project GR/L53175 PSET: Practical Simplification of English Text', and by an EPSRC Advanced Fellowship to the second author.

The tokenisation, sentence boundary detection, head word identification and chunking components were implemented with the lt-xml2tools (Grover and Tobin, 2006), and the lemmatisation used morpha (Minnen et al, 2000). $$$$$ Of the remaining 359% mistakes 346-cOneerned word forms that do not occur at all in the 100M words of the BNC.
The tokenisation, sentence boundary detection, head word identification and chunking components were implemented with the lt-xml2tools (Grover and Tobin, 2006), and the lemmatisation used morpha (Minnen et al, 2000). $$$$$ The morphological generator comprises a set of of approximately 1,650 rules expressing morphological regularities, subregularities, and exceptions for specific words; also around 350 lines of C/Flex code for program initialisation and defining the functions called by the rule actions.
The tokenisation, sentence boundary detection, head word identification and chunking components were implemented with the lt-xml2tools (Grover and Tobin, 2006), and the lemmatisation used morpha (Minnen et al, 2000). $$$$$ -,..:Imicurrent,NLG:systesus,-,Prbhographic information is distributed throughout the lexicon and is applied via the grammar or by hard-wired code.
The tokenisation, sentence boundary detection, head word identification and chunking components were implemented with the lt-xml2tools (Grover and Tobin, 2006), and the lemmatisation used morpha (Minnen et al, 2000). $$$$$ An evaluation has shown the error rate to be very low. robustness The generator does not contain an explicit lexicon or word-list, but instead comprises a set of morphological generalisations together with a list of exceptions for specific (irregular) words.

Since MINIPAR performs morphological analysis on the context relations we have added an existing morphological analyser (Minnen et al, 2000) to the other extractors. $$$$$ This makes orthographic processing difficult to decouple from the rest of the system, compromising maintainability and ease of reuse.
Since MINIPAR performs morphological analysis on the context relations we have added an existing morphological analyser (Minnen et al, 2000) to the other extractors. $$$$$ In the case of abbreviations or acronyms (recognised by the occurrence of non-word-initial capital letters and trailing full-stops) we key off the pronunciation of the first letter considered in isolation.

For our purposes, we use a Penn tree bank-style tagger custom-built using fnTBL 1.0 (Ngai and Florian, 2001), and further lemmatise the output of the tagger using morph (Minnen et al, 2000). $$$$$ Thanks also to the anonymous reviewers for insightful comments.
For our purposes, we use a Penn tree bank-style tagger custom-built using fnTBL 1.0 (Ngai and Florian, 2001), and further lemmatise the output of the tagger using morph (Minnen et al, 2000). $$$$$ The generation of contractions presents more of a problem.
For our purposes, we use a Penn tree bank-style tagger custom-built using fnTBL 1.0 (Ngai and Florian, 2001), and further lemmatise the output of the tagger using morph (Minnen et al, 2000). $$$$$ Flex creates as output a C program which at run-time scans a text looking for occurrences of the regular expressions.
For our purposes, we use a Penn tree bank-style tagger custom-built using fnTBL 1.0 (Ngai and Florian, 2001), and further lemmatise the output of the tagger using morph (Minnen et al, 2000). $$$$$ We present such a component: a fast and robust morphological generator for English based on finite-state techniques that generates a word form given a specification of the lemma, part-of-speech, and the type of inflection required.

We use a morphological tool (Minnen et al, 2000) to obtain the base form from the original verb or noun, so that YAG can generate grammatical sentences. $$$$$ We describe how this morphological generator is used in a prototype system for automatic simplification of English newspaper text, and discuss practical morphological and orthographic issues we have encountered in generation of unrestricted text within this application.
We use a morphological tool (Minnen et al, 2000) to obtain the base form from the original verb or noun, so that YAG can generate grammatical sentences. $$$$$ Both of these systems interleave orthographic processing with other processes in realisation.
We use a morphological tool (Minnen et al, 2000) to obtain the base form from the original verb or noun, so that YAG can generate grammatical sentences. $$$$$ The original version of the morphological analyser was kindly provided to us by the University of Sheffield GATE project—Chris -Brew, Dale, Gerdemann • • Adam Kilgarriff and Ehud Reiter have suggested improvements to the analyser/generator.
We use a morphological tool (Minnen et al, 2000) to obtain the base form from the original verb or noun, so that YAG can generate grammatical sentences. $$$$$ Karttunen et al. (1996)).
