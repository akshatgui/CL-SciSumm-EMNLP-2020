For the sake of comparison, let us consider the following example which Pereira 1981 uses in order to illustrate Extraposition Grammar. $$$$$ In a derivation graph, however, a node can have more than one incoming edge â€” in fact, one such edge for each of the symbols on the lefthand side of the rule corresponding to that node.
For the sake of comparison, let us consider the following example which Pereira 1981 uses in order to illustrate Extraposition Grammar. $$$$$ Extraposition grammars are an extension of definite clause grammars, and are similarly defined in terms of logic clauses.
For the sake of comparison, let us consider the following example which Pereira 1981 uses in order to illustrate Extraposition Grammar. $$$$$ The extended formalism makes it easy to describe left extraposition of constituents, an important feature of natural language syntax.
For the sake of comparison, let us consider the following example which Pereira 1981 uses in order to illustrate Extraposition Grammar. $$$$$ I will say then that a rule is being used to expand or rewrite a string.

A number of nonconcatenative grammar formalisms has been put forward, such as head-wrapping grammars (HG) (Pollard, 1984), extra position grammars (XG) (Pereira, 1981). $$$$$ Edinburgh EH1 1JZ SCOTLAND Extraposition grammars are an extension of definite clause grammars, and are similarly defined in terms of logic clauses.
A number of nonconcatenative grammar formalisms has been put forward, such as head-wrapping grammars (HG) (Pollard, 1984), extra position grammars (XG) (Pereira, 1981). $$$$$ The comments of the referees were also very useful.
A number of nonconcatenative grammar formalisms has been put forward, such as head-wrapping grammars (HG) (Pollard, 1984), extra position grammars (XG) (Pereira, 1981). $$$$$ The modified grammar, now a DCG, is given in Figure 4.2.

Other non-concatenative formalisms are head-wrapping grammars (HG) (Pollard, 1984), extra position grammars (XG) (Pereira, 1981) and various exotic forms of tree adjoining grammar (Kroch and Joshi, 1986). $$$$$ The extended formalism makes it easy to describe left extraposition of constituents, an important feature of natural language syntax.
Other non-concatenative formalisms are head-wrapping grammars (HG) (Pollard, 1984), extra position grammars (XG) (Pereira, 1981) and various exotic forms of tree adjoining grammar (Kroch and Joshi, 1986). $$$$$ A British Council Fellowship partly supported my work in this subject.
Other non-concatenative formalisms are head-wrapping grammars (HG) (Pollard, 1984), extra position grammars (XG) (Pereira, 1981) and various exotic forms of tree adjoining grammar (Kroch and Joshi, 1986). $$$$$ The substring of s between xo and xn is the span of the rule application.

Whereas head grammars provide for an account of verb fronting and cross-serial dependencies, Pereira, introducing extraposition grammars in (Pereira, 1981), is focused on displacement of noun phrases in English. $$$$$ This is shown in Figure 5.1.
Whereas head grammars provide for an account of verb fronting and cross-serial dependencies, Pereira, introducing extraposition grammars in (Pereira, 1981), is focused on displacement of noun phrases in English. $$$$$ The effect of the bracketing constraint is independent of the order of application of rules, because if two rules are used in a derivation, the brackets introduced by each of them must be compatible in the way described above.
Whereas head grammars provide for an account of verb fronting and cross-serial dependencies, Pereira, introducing extraposition grammars in (Pereira, 1981), is focused on displacement of noun phrases in English. $$$$$ This makes DCGs a general-purpose grammar formalism, capable of describing any type-0 language.
Whereas head grammars provide for an account of verb fronting and cross-serial dependencies, Pereira, introducing extraposition grammars in (Pereira, 1981), is focused on displacement of noun phrases in English. $$$$$ As in the DCG example of the previous section, the extraposed noun phrase is expanded into a trace.

XP -* NP While XG allows for elegant accounts of cross-serial dependencies and topicalization, it seems again hard to simultaneously account for verb and noun movement, especially if the bracketing constraint introduced in (Pereira, 1981), which requires that XG derivation graphs have a planar representation, is not relaxed. $$$$$ The computing facilities I used to experiment with XGs and to prepare this paper were made available by British Science Research Council grants.
XP -* NP While XG allows for elegant accounts of cross-serial dependencies and topicalization, it seems again hard to simultaneously account for verb and noun movement, especially if the bracketing constraint introduced in (Pereira, 1981), which requires that XG derivation graphs have a planar representation, is not relaxed. $$$$$ Of the extra four arguments, two are used to represent string positions as in DCGs, and the other two are used to represent positions in an extraposition list, which carries symbols to be repositioned.
XP -* NP While XG allows for elegant accounts of cross-serial dependencies and topicalization, it seems again hard to simultaneously account for verb and noun movement, especially if the bracketing constraint introduced in (Pereira, 1981), which requires that XG derivation graphs have a planar representation, is not relaxed. $$$$$ Its meaning is that 'rel pronoun' can be analysed as a 'rel marker' provided that the terminal 't' is added to the front of the input remaining after the rule application.
XP -* NP While XG allows for elegant accounts of cross-serial dependencies and topicalization, it seems again hard to simultaneously account for verb and noun movement, especially if the bracketing constraint introduced in (Pereira, 1981), which requires that XG derivation graphs have a planar representation, is not relaxed. $$$$$ DCGs, although they provide the basic machinery for a clear description of languages and their structures, lack a mechanism to describe simply left extraposition and the associated restrictions.

 $$$$$ The extended formalism makes it easy to describe left extraposition of constituents, an important feature of natural language syntax.
 $$$$$ Some questions about XGs have not been tackled in this paper.
 $$$$$ The last two arguments of the goal are 1 ]' to mean that the overall extraposition list goes from '[ ]' to '[ ]'; i.e., it is the empty list.
