col1,col2
We describe a practical parser for unrestricted dependencies.,{}
The parser creates links between words and names the links according to their syntactic functions.,{}
We first describe the older Constraint Grammar parser where many of the ideas come from.,{}
Then we proceed to describe the central ideas of our new parser.,{}
"Finally, the parser is evaluated.",{}
We are concerned with surface-syntactic parsing of running text.,"{'title': '1 Introduction', 'number': '1'}"
Our main goal is to describe syntactic analyses of sentences using dependency links that show the head-modifier relations between words.,"{'title': '1 Introduction', 'number': '1'}"
"In addition, these links have labels that refer to the syntactic function of the modifying word.","{'title': '1 Introduction', 'number': '1'}"
"A simplified example is in Figure 1, where the link between I and see denotes that I is the modifier of see and its syntactic function is that of subject.","{'title': '1 Introduction', 'number': '1'}"
"Similarly, a modifies bird, and it is a determiner.","{'title': '1 Introduction', 'number': '1'}"
"First, in this paper, we explain some central concepts of the Constraint Grammar framework from which many of the ideas are derived.","{'title': '1 Introduction', 'number': '1'}"
"Then, we give some linguistic background to the notations we are using, with a brief comparison to other current dependency formalisms and systems.","{'title': '1 Introduction', 'number': '1'}"
"New formalism is described briefly, and it is utilised in a small toy grammar to illustrate how the formalism works.","{'title': '1 Introduction', 'number': '1'}"
"Finally, the real parsing system, with a grammar of some 2 500 rules, is evaluated.","{'title': '1 Introduction', 'number': '1'}"
"The parser corresponds to over three man-years of work, which does not include the lexical analyser and the morphological disambiguator, both parts of the existing English Constraint Grammar parser (Karlsson et al., 1995).","{'title': '1 Introduction', 'number': '1'}"
The parsers can be tested via WWW'.,"{'title': '1 Introduction', 'number': '1'}"
Our work is partly based on the work done with the Constraint Grammar framework that was originally proposed by Fred Karlsson (1990).,"{'title': '2 Background', 'number': '2'}"
A detailed description of the English Constraint Grammar (ENGCG) is in Karlsson et al. (1995).,"{'title': '2 Background', 'number': '2'}"
"The basic rule types of the Constraint Grammar (Tapanainen, 1996)2 are REMOVE and SELECT for discarding and selecting an alternative reading of a word.","{'title': '2 Background', 'number': '2'}"
Rules also have contextual tests that describe the condition according to which they may be applied.,"{'title': '2 Background', 'number': '2'}"
"For example, the rule discards a verb (V) reading if the preceding word (-1) is unambiguously (C) a determiner (DET).","{'title': '2 Background', 'number': '2'}"
More than one such test can be appended to a rule.,"{'title': '2 Background', 'number': '2'}"
The rule above represents a local rule: the test checks only neighbouring words in a foreknown position before or after the target word.,"{'title': '2 Background', 'number': '2'}"
The test may also refer to the positions somewhere in the sentence without specifying the exact location.,"{'title': '2 Background', 'number': '2'}"
"For instance,","{'title': '2 Background', 'number': '2'}"
means that a nominal head (NOM-HEAD is a set that contains part-of-speech tags that may represent a nominal head) may not appear anywhere to the left (NOT *-1).,"{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"This &quot;anywhere&quot; to the left or right may be restricted by BARRIERs, which restrict the area of the test.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"Basically, the barrier can be used to limit the test only to the current clause (by using clause boundary markers and &quot;stop words&quot;) or to a constituent (by using &quot;stop categories&quot;) instead of the whole sentence.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"In addition, another test may be added relative to the unrestricted context position using keyword LINK.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"For example, the following rule discards the syntactic function' CI-OBJ (indirect object): The rule holds if the closest finite verb to the left is unambiguously (C) a finite verb (VFIN), and there is no ditransitive verb or participle (subcategorisation SV00) between the verb and the indirect object.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"If, in addition, the verb does not take indirect objects, i.e. there is no SVO0 in the same verb (LINK NOT 0 SV00), the CI-OBJ reading will be discarded.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"In essence, the same formalism is used in the syntactic analysis in Jarvinen (1994) and Anttila (1995).","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"After the morphological disambiguation, all legitimate surface-syntactic labels are added to the set of morphological readings.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"Then, the syntactic rules discard contextually illegitimate alternatives or select legitimate ones.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
The syntactic tagset of the Constraint Grammar provides an underspecific dependency description.,"{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"For example, labels for functional heads (such as CSUBJ, COBJ, CI-OBJ) mark the word which is a head of a noun phrase having that function in the clause, but the parent is not indicated.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"In addition, the representation is shallow, which means that, e.g., objects of infinitives and participles receive the same type of label as objects of finite verbs.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"On the other hand, the non-finite verb forms functioning as objects receive only verbal labels.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"When using the grammar formalism described above, a considerable amount of syntactic ambiguity can not be resolved reliably and is therefore left pending in the parse.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"As a consequence, the output is not optimal in many applications.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"For example, it is not possible to reliably pick head-modifier pairs from the parser output or collect arguments of verbs, which was one of the tasks we originally were interested in.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"To solve the problems, we developed a more powerful rule formalism which utilises an explicit dependency representation.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"The basic Constraint Gram'The convention in the Constraint Grammar is that the tags for syntactic functions begin with the 0-sign. mar idea of introducing the information in a piecemeal fashion is retained, but the integration of different pieces of information is more efficient in the new system.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"3 Dependency grammars in a nutshell Our notation follows the classical model of dependency theory (Heringer, 1993) introduced by Lucien Tesniere (1959) and later advocated by Igor Mel'auk (1987).","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
In Tesniere's and Mel'auk's dependency notation every element of the dependency tree has a unique head.,"{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
The verb serves as the head of a clause and the top element of the sentence is thus the main verb of the main clause.,"{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"In some other theories, e.g.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"Hudson (1991), several heads are allowed.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"Projectivity (or adjacency4) was not an issue for Tesniere (1959, ch.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"10), because he thought that the linear order of the words does not belong to the syntactic level of representation which comprises the structural order only.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"Some early formalisations, c.f.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"(Hays, 1964), have brought the strict projectivity (context-free) requirement into the dependency framework.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"This kind of restriction is present in many dependency-based parsing systems (McCord, 1990; Sleator and Ternperley, 1991; Eisner, 1996).","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"But obviously any recognition grammar should deal with non-projective phenomena to the extent they occur in natural languages as, for example, in the analysis shown in Figure 2.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"Our system has no in-built restrictions concerning projectivity, though the formalism allows us to state when crossing links are not permitted.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"We maintain that one is generally also interested in the linear order of elements, and therefore it is presented in the tree diagrams.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"But, for some purposes, presenting all arguments in a canonical order might be more adequate.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"This, however, is a matter of output formatting, for which the system makes several options available.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
The verbs (as well as other elements) have a valency that describes the number and type of the modifiers they may have.,"{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"In valency theory, usually, complements (obligatory) and adjuncts (optional) are distinguished.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
Our notation makes a difference between valency (rule-based) and subcategorisation (lexical): the valency tells which arguments are expected; the subcategorisation tells which combinations are legitimate.,"{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
The valency merely provides a possibility to have an argument.,"{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"Thus, a verb having three valency slots may have e.g. subcategorisation SVOO or SVOC.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"The former denotes: Subject, Verb, indirect Object and Object, and the latter: Subject, Verb, Object and Object Complement.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"The default is a nominal type of complement, but there might also be additional information concerning the range of possible complements, e.g., the verb say may have an object (SVO), which may also be realised as a to-infinitive clause, WH-clause, that-clause or quote structure.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
The adjuncts are not usually marked in the verbs because most of the verbs may have e.g. spatiotemporal arguments.,"{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"Instead, adverbial complements and adjuncts that are typical of particular verbs are indicated.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"For instance, the verb decide has the tag <P/on> which means that the prepositional phrase on is typically attached to it.","{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
The distinction between the complements and the adjuncts is vague in the implementation; neither the complements nor the adjuncts are obligatory.,"{'title': 'SELECT (IMP) IF (NOT *-1 NOM-HEAD);', 'number': '3'}"
"Usually, both the dependent element and its head are implicitly (and ambiguously) present in the Constraint Grammar type of rule.","{'title': '4 Introducing the dependencies', 'number': '4'}"
"Here, we make this dependency relation explicit.","{'title': '4 Introducing the dependencies', 'number': '4'}"
This is done by declaring the heads and the dependents (complement or modifier) in the context tests.,"{'title': '4 Introducing the dependencies', 'number': '4'}"
"For example, the subject label (OSOBJ) is chosen and marked as a dependent of the immediately following auxiliary (AUXMOD) in the following rule: SELECT (@SUBJ) IF (IC AUXMOD HEAD); To get the full benefit of the parser, it is also useful to name the valency slot in the rule.","{'title': '4 Introducing the dependencies', 'number': '4'}"
"This has two effects: (1) the valency slot is unique, i.e. no more than one subject is linked to a finite verb', and (2) we can explicitly state in rules which kind of valency slots we expect to be filled.","{'title': '4 Introducing the dependencies', 'number': '4'}"
The rule thus is of the form:,"{'title': '4 Introducing the dependencies', 'number': '4'}"
IF (IC AUXMOD HEAD = subject); The rule above works well in an unambiguous context but there is still need to specify more tolerant rules for ambiguous contexts.,"{'title': 'SELECT (@SUBJ)', 'number': '5'}"
"The rule differs from the previous rule in that it leaves the other readings of the noun intact and only adds a (possible) subject dependency, while both the previous rules disambiguated the noun reading also.","{'title': 'SELECT (@SUBJ)', 'number': '5'}"
"But especially in the rule above, the contextual test is far from being sufficient to select the subject reading reliably.","{'title': 'SELECT (@SUBJ)', 'number': '5'}"
"Instead, it leaves open a possibility to attach a dependency from another syntactic function, i.e. the dependency relations remain ambiguous.","{'title': 'SELECT (@SUBJ)', 'number': '5'}"
The grammar tries to be careful not to introduce false dependencies but for an obvious reason this is not always possible.,"{'title': 'SELECT (@SUBJ)', 'number': '5'}"
"If several syntactic functions of a word have dependency relations, they form a dependency forest.","{'title': 'SELECT (@SUBJ)', 'number': '5'}"
"Therefore, when the syntactic function is not rashly disambiguated, the correct reading may survive even after illegitimate linking, as the global pruning (Section 5) later extracts dependency links that form consistent trees.","{'title': 'SELECT (@SUBJ)', 'number': '5'}"
"Links formed between syntactic labels constitute partial trees, usually around verbal nuclei.","{'title': 'SELECT (@SUBJ)', 'number': '5'}"
But a new mechanism is needed to make full use of the structural information provided by multiple rules.,"{'title': 'SELECT (@SUBJ)', 'number': '5'}"
"Once a link is formed between labels, it can be used by the other rules.","{'title': 'SELECT (@SUBJ)', 'number': '5'}"
"For example, when a head of an object phrase (OM) is found and indexed to a verb, the noun phrase to the right (if any) is probably an object complement (CPCOMPL-0).","{'title': 'SELECT (@SUBJ)', 'number': '5'}"
It should have the same head as the existing object if the verb has the proper subcategorisation tag (SVOC).,"{'title': 'SELECT (@SUBJ)', 'number': '5'}"
"The following rule establishes a dependency relation of a verb and its object complement, if the object already exists.","{'title': 'SELECT (@SUBJ)', 'number': '5'}"
The rule says that a dependency relation (o-compl) should be added but the syntactic functions should not be disambiguated (INDEX).,"{'title': 'SELECT (@SUBJ)', 'number': '5'}"
The object complement OPCOMPL-0 is linked to the verb readings having the subcategorisation SVOC.,"{'title': 'SELECT (@SUBJ)', 'number': '5'}"
The relation of the object complement and its head is such that the noun phrase to the left of the object complement is an object (CM) that has established a dependency relation (object) to the verb.,"{'title': 'SELECT (@SUBJ)', 'number': '5'}"
"Naturally, the dependency relations may also be followed downwards (DOWN).","{'title': 'SELECT (@SUBJ)', 'number': '5'}"
But it is also possible to declare the last item in a chain of the links (e.g. the verb chain would have been wanted) using the keywords TOP and BOTTOM.,"{'title': 'SELECT (@SUBJ)', 'number': '5'}"
We pursue the following strategy for linking and disambiguation. in the new dependency grammar.,"{'title': '5 Ambiguity and pruning', 'number': '6'}"
"In practice, these rules are most likely to cause errors, apart from their linguistic interpretation often being rather obscure.","{'title': '5 Ambiguity and pruning', 'number': '6'}"
"Moreover, there is no longer any need to remove these readings explicitly by rules, because the global pruning removes readings which have not obtained any &quot;extra evidence&quot;.","{'title': '5 Ambiguity and pruning', 'number': '6'}"
"Roughly, one could say that the REMOVE rules of the Constraint Grammar are replaced by the INDEX rules.","{'title': '5 Ambiguity and pruning', 'number': '6'}"
The overall result is that the rules in the new framework are much more careful than those of ENGCG.,"{'title': '5 Ambiguity and pruning', 'number': '6'}"
"As already noted, the dependency grammar has a big advantage over ENGCG in dealing with ambiguity.","{'title': '5 Ambiguity and pruning', 'number': '6'}"
"Because the dependencies are supposed to form a tree, we can heuristically prune readings that are not likely to appear in such a tree.","{'title': '5 Ambiguity and pruning', 'number': '6'}"
We have the following hypotheses: (1) the dependency forest is quite sparse and a whole parse tree can not always be found; (2) pruning should favour large (sub)trees; (3) unlinked readings of a word can be removed when there is a linked reading present among the alternatives; (4) unambiguous subtrees are more likely to be correct than ambiguous ones; and (5) pruning need not force the words to be unambiguous.,"{'title': '5 Ambiguity and pruning', 'number': '6'}"
"Instead, we can apply the rules iteratively, and usually some of the rules apply when the ambiguity is reduced.","{'title': '5 Ambiguity and pruning', 'number': '6'}"
"Pruning is then applied again, and so on.","{'title': '5 Ambiguity and pruning', 'number': '6'}"
"Furthermore, the pruning mechanism does not contain any language specific statistics, but works on a topological basis only.","{'title': '5 Ambiguity and pruning', 'number': '6'}"
Some of the most heuristic rules may be applied only after pruning.,"{'title': '5 Ambiguity and pruning', 'number': '6'}"
"This has two advantages: very heuristic links would confuse the pruning mechanism, and words that would not otherwise have a head, may still get one.","{'title': '5 Ambiguity and pruning', 'number': '6'}"
"In this section, we present a set of rules, and show how those rules can parse the sentence &quot;Joan said whatever John likes to decide suits her&quot;.","{'title': '6 Toy-grammar example', 'number': '7'}"
The toy grammar containing 8 rules is presented in Figure 3.,"{'title': '6 Toy-grammar example', 'number': '7'}"
"The rules are extracted from the real grammar, and they are then simplified; some tests are omitted and some tests are made simpler.","{'title': '6 Toy-grammar example', 'number': '7'}"
"The grammar is applied to the input sentence in Figure 4, where the tags are almost equivalent to those used by the English Constraint Grammar, and the final result equals Figure 2, where only the dependencies between the words and certain tags are printed.","{'title': '6 Toy-grammar example', 'number': '7'}"
"Some comments concerning the rules in the toy grammar (Figure 3) are in order: The rule states: the first noun phrase head label to the right is a subject (OSOBJ), link subj exists and is followed up to the finite verb (0+F) in a verb chain (v-ch), which is then followed up to the main verb.","{'title': '6 Toy-grammar example', 'number': '7'}"
"Then object or complement links are followed downwards (BOTTOM), to the last verbal reading (here decide).","{'title': '6 Toy-grammar example', 'number': '7'}"
"If then a verb with subcategorisation for objects is encountered, an object link from the WH-pronoun is formed.","{'title': '6 Toy-grammar example', 'number': '7'}"
"This kind of rule that starts from word A, follows links up to word B and then down to word C, introduces a non-projective dependency link if word B is between words A and C. Note that the conditions TOP and BOTTOM follow the chain of named link, if any, to the upper or lower end of a chain of a multiple (zero or more) links with the same name.","{'title': '6 Toy-grammar example', 'number': '7'}"
"Therefore TOP v-ch: @MA INV always ends with the main verb in the verb chain, whether this be a single finite verb like likes or a chain like would have been liked.","{'title': '6 Toy-grammar example', 'number': '7'}"
6.,"{'title': '6 Toy-grammar example', 'number': '7'}"
"The WH-clause itself may function as a subject, object, etc.","{'title': '6 Toy-grammar example', 'number': '7'}"
"Therefore, there is a set of rules for each function.","{'title': '6 Toy-grammar example', 'number': '7'}"
The &quot;WH-clause as subject&quot; rule looks for a finite verb to the right.,"{'title': '6 Toy-grammar example', 'number': '7'}"
No intervening subject labels and clause boundaries are allowed.,"{'title': '6 Toy-grammar example', 'number': '7'}"
* Rules 1-5 are applied in the first round.,"{'title': '6 Toy-grammar example', 'number': '7'}"
"After that, the pruning operation disambiguates finite verbs, and rule 6 will apply.","{'title': '6 Toy-grammar example', 'number': '7'}"
Pruning will be applied once again.,"{'title': '6 Toy-grammar example', 'number': '7'}"
"The sentence is thus disambiguated both morphologically and morphosyntactically, and a syntactic phosyntactic alternatives, e.g. whatever is ambiguous in 10 ways.","{'title': '6 Toy-grammar example', 'number': '7'}"
The subcategorisation/valency information is not printed here. reading from each word belongs to a subtree of which the root is said or suits.,"{'title': '6 Toy-grammar example', 'number': '7'}"
7.,"{'title': '6 Toy-grammar example', 'number': '7'}"
"The syntactic relationship between the verbs is established by a rule stating that the rightmost main verb is the (clause) object of a main verb to the left, which allows such objects.","{'title': '6 Toy-grammar example', 'number': '7'}"
8.,"{'title': '6 Toy-grammar example', 'number': '7'}"
"Finally, there is a single main verb, which is indexed to the root (<s>) (in position 00).","{'title': '6 Toy-grammar example', 'number': '7'}"
"The evaluation was done using small excerpts of data, not used in the development of the system.","{'title': '7 Evaluation', 'number': '8'}"
"All text samples were excerpted from three different genres in the Bank of English (Jarvinen, 1994) data: American National Public Radio (broadcast), British Books data (literature), and The Independent (newspaper).","{'title': '7 Evaluation', 'number': '8'}"
"Figure 5 lists the samples, their sizes, and the average and maximum sentence lengths.","{'title': '7 Evaluation', 'number': '8'}"
"The measure is in words excluding punctuation. size avg. max. total In addition, Figure 5 shows the total processing time required for the syntactic analysis of the samples.","{'title': '7 Evaluation', 'number': '8'}"
The syntactic analysis has been done in a normal PC with the Linux operating system.,"{'title': '7 Evaluation', 'number': '8'}"
The PC has a Pentium 90 MHz processor and 16 MB of memory.,"{'title': '7 Evaluation', 'number': '8'}"
The speed roughly corresponds to 200 words in second.,"{'title': '7 Evaluation', 'number': '8'}"
"The time does not include morphological analysis and disambiguation6. broadcast literature newspaper One obvious point of reference is the ENGCG syntax, which shares a level of similar representation with an almost identical tagset to the new system.","{'title': '7 Evaluation', 'number': '8'}"
"In addition, both systems use the front parts of the ENGCG system for processing the input.","{'title': '7 Evaluation', 'number': '8'}"
"These include the tokeniser, lexical analyser and morphological disambiguator.","{'title': '7 Evaluation', 'number': '8'}"
Figure 6 shows the results of the comparison of the ENGCG syntax and the morphosyntactic level of the dependency grammar.,"{'title': '7 Evaluation', 'number': '8'}"
"Because both systems leave some amount of the ambiguity pending, two figures are given: the success rate, which is the percentage of correct morphosyntactic labels present in the output, and the ambiguity rate, which is the percentage of words containing more than one label.","{'title': '7 Evaluation', 'number': '8'}"
"The ENGCG results compare to those reported elsewhere (Jirvinen, 1994; Tapanainen and Jarvinen, 1994).","{'title': '7 Evaluation', 'number': '8'}"
The DG success rate is similar or maybe even slightly better than in ENGCG.,"{'title': '7 Evaluation', 'number': '8'}"
"More importantly, the ambiguity rate is only about a quarter of that in the ENGCG output.","{'title': '7 Evaluation', 'number': '8'}"
The overall result should be considered good in the sense that the output contains information about the syntactic functions (see Figure 4) not only part-of-speech tags.,"{'title': '7 Evaluation', 'number': '8'}"
"The major improvement over ENGCG is the level of explicit dependency representation, which makes it possible to excerpt modifiers of certain elements, such as arguments of verbs.","{'title': '7 Evaluation', 'number': '8'}"
This section evaluates the success of the level of dependencies.,"{'title': '7 Evaluation', 'number': '8'}"
One of the crude measures to evaluate dependencies is to count how many times the correct head is found.,"{'title': '7 Evaluation', 'number': '8'}"
"The results are listed in Fig( received. correct links, ) ure 7.","{'title': '7 Evaluation', 'number': '8'}"
"Precision is and rereceived links call ( ). received correct links, The difference between ‘ desired lnks precision and recalli is due to the fact that the parser does not force a head on every word.","{'title': '7 Evaluation', 'number': '8'}"
Trying out some very heuristic methods to assign heads would raise recall but lower precision.,"{'title': '7 Evaluation', 'number': '8'}"
"A similar measure is used in (Eisner, 1996) except that every word has a head, i.e. the precision equals recall, reported as 79.2%.","{'title': '7 Evaluation', 'number': '8'}"
We evaluated our parser against the selected dependencies in the test samples.,"{'title': '7 Evaluation', 'number': '8'}"
"The samples being rather small, only the most common dependencies are evaluated: subject, object and predicative.","{'title': '7 Evaluation', 'number': '8'}"
"These dependencies are usually resolved more reliably than, say, appositions, prepositional attachments etc.","{'title': '7 Evaluation', 'number': '8'}"
The results of the test samples are listed in Figure 8.,"{'title': '7 Evaluation', 'number': '8'}"
It seems the parser leaves some amount of the words unlinked (e.g.,"{'title': '7 Evaluation', 'number': '8'}"
10-15% of subjects) but what it has recognised is generally correct (precision 95-98% for subjects).,"{'title': '7 Evaluation', 'number': '8'}"
"Dekang Lin (1996) has earlier used this kind of evaluation, where precision and recall were for subjects 87% and 78%, and for complements (including objects) 84% and 72 %, respectively.","{'title': '7 Evaluation', 'number': '8'}"
The results are not strictly comparable because the syntactic description is somewhat different.,"{'title': '7 Evaluation', 'number': '8'}"
"In this paper, we have presented some main features of our new framework for dependency syntax.","{'title': '8 Conclusion', 'number': '9'}"
The most important result is that the new framework allows us to describe non-projective dependency grammars and apply them efficiently.,"{'title': '8 Conclusion', 'number': '9'}"
This is a property that will be crucial when we will apply this framework to a language having free word-order.,"{'title': '8 Conclusion', 'number': '9'}"
"Basically, the parsing framework combines the Constraint Grammar framework (removing ambiguous readings) with a mechanism that adds dependencies between readings or tags.","{'title': '8 Conclusion', 'number': '9'}"
"This means that while the parser disambiguates it also builds up a dependency forest that, in turn, is reduced by other disambiguation rules and a global pruning mechanism.","{'title': '8 Conclusion', 'number': '9'}"
"This setup makes it possible to operate on several layers of information, and use and combine structural information more efficiently than in the original Constraint Grammar framework, without any further disadvantage in dealing with ambiguity.","{'title': '8 Conclusion', 'number': '9'}"
First preliminary evaluations are presented.,"{'title': '8 Conclusion', 'number': '9'}"
"Compared to the ENGCG syntactic analyser, the output not only contains more information but it is also more accurate and explicit.","{'title': '8 Conclusion', 'number': '9'}"
The ambiguity rate is reduced to a quarter without any compromise in correctness.,"{'title': '8 Conclusion', 'number': '9'}"
"We did not have access to other systems, and care must be taken when interpreting the results which are not strictly comparable.","{'title': '8 Conclusion', 'number': '9'}"
"However, the comparison to other current systems suggests that our dependency parser is very promising both theoretically and practically.","{'title': '8 Conclusion', 'number': '9'}"
We are using Atro Voutilainen's (1995) improved part-of-speech disambiguation grammar which runs in the CG-2 parser.,"{'title': 'Acknowledgments', 'number': '10'}"
Voutilainen and Juha Heikkild created the original ENGCG lexicon.,"{'title': 'Acknowledgments', 'number': '10'}"
