col1,col2
Unsupervised grammar induction models tend to employ relatively simple models of syntax when compared to their supervised counterparts.,{}
"Traditionally, the unsupervised models have been kept simple due to tractability and data sparsity concerns.",{}
"In this paper, we introduce basic valence frames and lexical information into an unsupervised dependency grammar inducer and show how this additional information can be leveraged via smoothing.",{}
"Our model produces state-of-theart results on the task of unsupervised grammar induction, improving over the best previous work by almost 10 percentage points.",{}
The last decade has seen great strides in statistical natural language parsing.,"{'title': '1 Introduction', 'number': '1'}"
"Supervised and semisupervised methods now provide highly accurate parsers for a number of languages, but require training from corpora hand-annotated with parse trees.","{'title': '1 Introduction', 'number': '1'}"
"Unfortunately, manually annotating corpora with parse trees is expensive and time consuming so for languages and domains with minimal resources it is valuable to study methods for parsing without requiring annotated sentences.","{'title': '1 Introduction', 'number': '1'}"
"In this work, we focus on unsupervised dependency parsing.","{'title': '1 Introduction', 'number': '1'}"
Our goal is to produce a directed graph of dependency relations (e.g.,"{'title': '1 Introduction', 'number': '1'}"
Figure 1) where each edge indicates a head-argument relation.,"{'title': '1 Introduction', 'number': '1'}"
"Since the task is unsupervised, we are not given any examples of correct dependency graphs and only take words and their parts of speech as input.","{'title': '1 Introduction', 'number': '1'}"
"Most of the recent work in this area (Smith, 2006; Cohen et al., 2008) has focused on variants of the The big dog barks Dependency Model with Valence (DMV) by Klein and Manning (2004).","{'title': '1 Introduction', 'number': '1'}"
DMV was the first unsupervised dependency grammar induction system to achieve accuracy above a right-branching baseline.,"{'title': '1 Introduction', 'number': '1'}"
"However, DMV is not able to capture some of the more complex aspects of language.","{'title': '1 Introduction', 'number': '1'}"
"Borrowing some ideas from the supervised parsing literature, we present two new models: Extended Valence Grammar (EVG) and its lexicalized extension (L-EVG).","{'title': '1 Introduction', 'number': '1'}"
The primary difference between EVG and DMV is that DMV uses valence information to determine the number of arguments a head takes but not their categories.,"{'title': '1 Introduction', 'number': '1'}"
"In contrast, EVG allows different distributions over arguments for different valence slots.","{'title': '1 Introduction', 'number': '1'}"
L-EVG extends EVG by conditioning on lexical information as well.,"{'title': '1 Introduction', 'number': '1'}"
This allows L-EVG to potentially capture subcategorizations.,"{'title': '1 Introduction', 'number': '1'}"
The downside of adding additional conditioning events is that we introduce data sparsity problems.,"{'title': '1 Introduction', 'number': '1'}"
Incorporating more valence and lexical information increases the number of parameters to estimate.,"{'title': '1 Introduction', 'number': '1'}"
A common solution to data sparsity in supervised parsing is to add smoothing.,"{'title': '1 Introduction', 'number': '1'}"
"We show that smoothing can be employed in an unsupervised fashion as well, and show that mixing DMV, EVG, and L-EVG together produces state-ofthe-art results on this task.","{'title': '1 Introduction', 'number': '1'}"
"To our knowledge, this is the first time that grammars with differing levels of detail have been successfully combined for unsupervised dependency parsing.","{'title': '1 Introduction', 'number': '1'}"
A brief overview of the paper follows.,"{'title': '1 Introduction', 'number': '1'}"
"In Section 2, we discuss the relevant background.","{'title': '1 Introduction', 'number': '1'}"
Section 3 presents how we will extend DMV with additional that satisfies the following properties: features.,"{'title': '1 Introduction', 'number': '1'}"
We describe smoothing in an unsupervised context in Section 4.,"{'title': '1 Introduction', 'number': '1'}"
"In Section 5, we discuss search issues.","{'title': '1 Introduction', 'number': '1'}"
We present our experiments in Section 6 and conclude in Section 7.,"{'title': '1 Introduction', 'number': '1'}"
"In this paper, the observed variables will be a corpus of n sentences of text s = s1 ... sn, and for each word sij an associated part-of-speech τij.","{'title': '2 Background', 'number': '2'}"
We denote the set of all words as Vw and the set of all parts-ofspeech as Vτ.,"{'title': '2 Background', 'number': '2'}"
The hidden variables are parse trees t = t1 ... tn and parameters θ¯ which specify a distribution over t. A dependency tree ti is a directed acyclic graph whose nodes are the words in si.,"{'title': '2 Background', 'number': '2'}"
"The graph has a single incoming edge for each word in each sentence, except one called the root of ti.","{'title': '2 Background', 'number': '2'}"
"An edge from word i to word j means that word j is an argument of word i or alternatively, word i is the head of word j.","{'title': '2 Background', 'number': '2'}"
"Note that each word token may be the argument of at most one head, but a head may have several arguments.","{'title': '2 Background', 'number': '2'}"
"If parse tree ti can be drawn on a plane above the sentence with no crossing edges, it is called projective.","{'title': '2 Background', 'number': '2'}"
Otherwise it is nonprojective.,"{'title': '2 Background', 'number': '2'}"
"As in previous work, we restrict ourselves to projective dependency trees.","{'title': '2 Background', 'number': '2'}"
"The dependency models in this paper will be formulated as a particular kind of Probabilistic Context Free Grammar (PCFG), described below.","{'title': '2 Background', 'number': '2'}"
3.,"{'title': '2 Background', 'number': '2'}"
"If N1 —* β1 and N2 —* β2 are tied then the tying relation defines a one-to-one mapping between rules in RN, and RN2, and we say that N1 and N2 are tied nonterminals.","{'title': '2 Background', 'number': '2'}"
"As we see below, we can estimate tied PCFGs using standard techniques.","{'title': '2 Background', 'number': '2'}"
"Clearly, the tying relation also defines an equivalence class over nonterminals.","{'title': '2 Background', 'number': '2'}"
The tying relation allows us to formulate the distributions over trees in terms of rule equivalence classes and nonterminal equivalence classes.,"{'title': '2 Background', 'number': '2'}"
Suppose R¯ is the set of rule equivalence classes and JV¯ is the set of nonterminal equivalence classes.,"{'title': '2 Background', 'number': '2'}"
"Since all rules in an equivalence class r¯ have the same probability (condition 1), and since all the nonterminals in an equivalence class N¯ E JV¯ have the same distribution over rule equivalence classes (condition 1 and 3), we can define the set of rule equivalence classes R¯N¯ associated with a nonterminal equivalence class ¯N, and a vector θ¯ of probabilities, indexed by rule equivalence classes r¯ E R¯ . θ¯N¯ refers to the subvector of θ¯ associated with nonterminal equivalence class ¯N, indexed by r¯ E R¯¯N.","{'title': '2 Background', 'number': '2'}"
"Since rules in the same equivalence class have the same probability, In order to perform smoothing, we will find useful a class of PCFGs in which the probabilities of certain rules are required to be the same.","{'title': '2 Background', 'number': '2'}"
"This will allow us to make independence assumptions for smoothing purposes without losing information, by giving analogous rules the same probability.","{'title': '2 Background', 'number': '2'}"
"Let G = (JV, T , S, R, θ) be a Probabilistic Context Free Grammar with nonterminal symbols JV, terminal symbols T, start symbol S E JV, set of productions R of the form N —* β, N E JV, β E (JV U T )*.","{'title': '2 Background', 'number': '2'}"
"Let RN indicate the subset of R whose left-hand sides are N. θ is a vector of length JRJ, indexed by productions N —* β E R. θN�β specifies the probability that N rewrites to β.","{'title': '2 Background', 'number': '2'}"
We will let θN indicate the subvector of θ corresponding to RN.,"{'title': '2 Background', 'number': '2'}"
"A tied PCFG constrains a PCFG G with a tying relation, which is an equivalence relation over rules Let f(t, r) denote the number of times rule r appears in tree t, and let f(t, ¯r) = ErE¯r f(t, r).","{'title': '2 Background', 'number': '2'}"
"We see that the complete data likelihood is That is, the likelihood is a product of multinomials, one for each nonterminal equivalence class, and there are no constraints placed on the parameters of these multinomials besides being positive and summing to one.","{'title': '2 Background', 'number': '2'}"
This means that all the standard estimation methods (e.g.,"{'title': '2 Background', 'number': '2'}"
"Expectation Maximization, Variational Bayes) extend directly to tied PCFGs.","{'title': '2 Background', 'number': '2'}"
Maximum likelihood estimation provides a point estimate of ¯θ.,"{'title': '2 Background', 'number': '2'}"
"However, often we want to incorporate information about θ¯ by modeling its prior distribution.","{'title': '2 Background', 'number': '2'}"
"As a prior, for each N¯ E JV¯ we will specify a Dirichlet distribution over θN¯ with hyperparameters α ¯N.","{'title': '2 Background', 'number': '2'}"
"The Dirichlet has the density function: Thus the prior over θ is a product of Dirichlets,which is conjugate to the PCFG likelihood function (Johnson et al., 2007).","{'title': '2 Background', 'number': '2'}"
"That is, the posterior P(¯θ|s, t, α) is also a product of Dirichlets, also factoring into a Dirichlet for each nonterminal ¯N, where the parameters α¯r are augmented by the number of times rule r¯ is observed in tree t: We can see that α¯r acts as a pseudocount of the number of times r¯ is observed prior to t. To make use of this prior, we use the Variational Bayes (VB) technique for PCFGs with Dirichlet Priors presented by Kurihara and Sato (2004).","{'title': '2 Background', 'number': '2'}"
VB estimates a distribution over ¯θ.,"{'title': '2 Background', 'number': '2'}"
"In contrast, Expectation Maximization estimates merely a point estimate of ¯θ.","{'title': '2 Background', 'number': '2'}"
"In VB, one estimates Q(t, ¯θ), called the variational distribution, which approximates the posterior distribution P(t, ¯θ|s, α) by minimizing the KL divergence of P from Q.","{'title': '2 Background', 'number': '2'}"
"Minimizing the KL divergence, it turns out, is equivalent to maximizing a lower bound F of the log marginal likelihood log P(s|α).","{'title': '2 Background', 'number': '2'}"
"The negative of the lower bound, −F, is sometimes called the free energy.","{'title': '2 Background', 'number': '2'}"
"As is typical in variational approaches, Kurihara and Sato (2004) make certain independence assumptions about the hidden variables in the variational posterior, which will make estimating it simpler.","{'title': '2 Background', 'number': '2'}"
"It factors Q(t, θ) = Q(t)Q( ¯θ) = Qn i=1 Qi(ti)Q¯N∈N¯Q( θ ¯N).","{'title': '2 Background', 'number': '2'}"
"The goal is to recover θ), the estimate of the posterior distribution over parameters and Q(t), the estimate of the posterior distribution over trees.","{'title': '2 Background', 'number': '2'}"
Finding a local maximum of F is done via an alternating maximization of Q(¯θ) and Q(t).,"{'title': '2 Background', 'number': '2'}"
"Kurihara and Sato (2004) show that each θ ¯N) is a Dirichlet distribution with parameters ˆαr = αr + EQ(t)f(t, r).","{'title': '2 Background', 'number': '2'}"
"In the sections that follow, we frame various dependency models as a particular variety of CFGs known as split-head bilexical CFGs (Eisner and Satta, 1999).","{'title': '2 Background', 'number': '2'}"
"These allow us to use the fast Eisner and Satta (1999) parsing algorithm to compute the expectations required by VB in O(m3) time (Eisner and Blatz, 2007; Johnson, 2007) where m is the length of the sentence.1 In the split-head bilexical CFG framework, each nonterminal in the grammar is annotated with a terminal symbol.","{'title': '2 Background', 'number': '2'}"
"For dependency grammars, these annotations correspond to words and/or parts-ofspeech.","{'title': '2 Background', 'number': '2'}"
"Additionally, split-head bilexical CFGs require that each word sij in sentence si is represented in a split form by two terminals called its left part sijL and right part sijR.","{'title': '2 Background', 'number': '2'}"
The set of these parts constitutes the terminal symbols of the grammar.,"{'title': '2 Background', 'number': '2'}"
This split-head property relates to a particular type of dependency grammar in which the left and right dependents of a head are generated independently.,"{'title': '2 Background', 'number': '2'}"
"Note that like CFGs, split-head bilexical CFGs can be made probabilistic.","{'title': '2 Background', 'number': '2'}"
The most successful recent work on dependency induction has focused on the Dependency Model with Valence (DMV) by Klein and Manning (2004).,"{'title': '2 Background', 'number': '2'}"
DMV is a generative model in which the head of the sentence is generated and then each head recursively generates its left and right dependents.,"{'title': '2 Background', 'number': '2'}"
The arguments of head H in direction d are generated by repeatedly deciding whether to generate another new argument or to stop and then generating the argument if required.,"{'title': '2 Background', 'number': '2'}"
"The probability of deciding whether to generate another argument is conditioned on H, d and whether this would be the first argument (this is the sense in which it models valence).","{'title': '2 Background', 'number': '2'}"
"When DMV generates an argument, the part-of-speech of that argument A is generated given H and d. 1Efficiently parsable versions of split-head bilexical CFGs for the models described in this paper can be derived using the fold-unfold grammar transform (Eisner and Blatz, 2007; Johnson, 2007). tence.","{'title': '2 Background', 'number': '2'}"
"Note that these rules are for VH, A E VT so there is an instance of the first schema rule for each part-of-speech.","{'title': '2 Background', 'number': '2'}"
YH splits words into their left and right components.,"{'title': '2 Background', 'number': '2'}"
LH encodes the stopping decision given that we have not generated any arguments so far.,"{'title': '2 Background', 'number': '2'}"
L′H encodes the same decision after generating one or more arguments.,"{'title': '2 Background', 'number': '2'}"
L1H represents the distribution over left attachments.,"{'title': '2 Background', 'number': '2'}"
"To extract dependency relations from these parse trees, we scan for attachment rules (e.g., L1H —* YA L′H) and record that A depends on H. The schema omits the rules for right arguments since they are symmetric.","{'title': '2 Background', 'number': '2'}"
We show a parse of “The big dog barks” in Figure 3.2 Much of the extensions to this work have focused on estimation procedures.,"{'title': '2 Background', 'number': '2'}"
Klein and Manning (2004) use Expectation Maximization to estimate the model parameters.,"{'title': '2 Background', 'number': '2'}"
Smith and Eisner (2005) and Smith (2006) investigate using Contrastive Estimation to estimate DMV.,"{'title': '2 Background', 'number': '2'}"
Contrastive Estimation maximizes the conditional probability of the observed sentences given a neighborhood of similar unseen sequences.,"{'title': '2 Background', 'number': '2'}"
"The results of this approach vary widely based on regularization and neighborhood, but often outperforms EM.","{'title': '2 Background', 'number': '2'}"
Smith (2006) also investigates two techniques for maximizing likelihood while incorporating the locality bias encoded in the harmonic initializer for DMV.,"{'title': '2 Background', 'number': '2'}"
"One technique, skewed deterministic annealing, ameliorates the local maximum problem by flattening the likelihood and adding a bias towards the Klein and Manning initializer, which is decreased during learning.","{'title': '2 Background', 'number': '2'}"
"The second technique is structural annealing (Smith and Eisner, 2006; Smith, 2006) which penalizes long dependencies initially, gradually weakening the penalty during estimation.","{'title': '2 Background', 'number': '2'}"
"If hand-annotated dependencies on a held-out set are available for parameter selection, this performs far better than EM; however, performing parameter selection on a held-out set without the use of gold dependencies does not perform as well.","{'title': '2 Background', 'number': '2'}"
Cohen et al. (2008) investigate using Bayesian Priors with DMV.,"{'title': '2 Background', 'number': '2'}"
"The two priors they use are the Dirichlet (which we use here) and the Logistic Normal prior, which allows the model to capture correlations between different distributions.","{'title': '2 Background', 'number': '2'}"
They initialize using the harmonic initializer of Klein and Manning (2004).,"{'title': '2 Background', 'number': '2'}"
They find that the Logistic Normal distribution performs much better than the Dirichlet with this initialization scheme.,"{'title': '2 Background', 'number': '2'}"
"Cohen and Smith (2009), investigate (concurrently with our work) an extension of this, the Shared Logistic Normal prior, which allows different PCFG rule distributions to share components.","{'title': '2 Background', 'number': '2'}"
"They use this machinery to investigate smoothing the attachment distributions for (nouns/verbs), and for learning using multiple languages.","{'title': '2 Background', 'number': '2'}"
DMV models the distribution over arguments identically without regard to their order.,"{'title': '3 Enriched Contexts', 'number': '3'}"
"Instead, we propose to distinguish the distribution over the argument nearest the head from the distribution of subsequent arguments.","{'title': '3 Enriched Contexts', 'number': '3'}"
3 Consider the following changes to the DMV grammar (results shown in Figure 4).,"{'title': '3 Enriched Contexts', 'number': '3'}"
"First, we will introduce the rule L2H —* YA L′H to denote the decision of what argument to generate for positions not nearest to the head.","{'title': '3 Enriched Contexts', 'number': '3'}"
"Next, instead of having L′H expand to HL or L1H, we will expand it to L1H (attach to nearest argument and stop) or L2H (attach to nonnearest argument and continue).","{'title': '3 Enriched Contexts', 'number': '3'}"
We call this the Extended Valence Grammar (EVG).,"{'title': '3 Enriched Contexts', 'number': '3'}"
"As a concrete example, consider the phrase “the big hungry dog” (Figure 5).","{'title': '3 Enriched Contexts', 'number': '3'}"
We would expect that distribution over the nearest left argument for “dog” to be different than farther left arguments.,"{'title': '3 Enriched Contexts', 'number': '3'}"
The figure shows that EVG allows these two distributions to be different (nonterminals L2dog and L1dog) whereas DMV forces them to be equivalent (both use L1dog as the nonterminal).,"{'title': '3 Enriched Contexts', 'number': '3'}"
All of the probabilistic models discussed thus far have incorporated only part-of-speech information (see Footnote 2).,"{'title': '3 Enriched Contexts', 'number': '3'}"
"In supervised parsing of both dependencies and constituency, lexical information is critical (Collins, 1999).","{'title': '3 Enriched Contexts', 'number': '3'}"
"We incorporate lexical information into EVG (henceforth L-EVG) by extending the distributions over argument parts-of-speech A to condition on the head word h in addition to the head part-of-speech H, direction d and argument position v. The argument word a distribution is merely conditioned on part-of-speech A; we leave refining this model to future work.","{'title': '3 Enriched Contexts', 'number': '3'}"
"In order to incorporate lexicalization, we extend the EVG CFG to allow the nonterminals to be annotated with both the word and part-of-speech of the head.","{'title': '3 Enriched Contexts', 'number': '3'}"
"We first remove the old rules YH —* LH RH for each H E VT. Then we mark each nonterminal which is annotated with a part-of-speech as also annotated with its head, with a single exception: YH.","{'title': '3 Enriched Contexts', 'number': '3'}"
"We add a new nonterminal YH,h for each H E VT, h E Vw, and the rules YH —* YH,h and YH,h —* LH,h RH,h.","{'title': '3 Enriched Contexts', 'number': '3'}"
"The rule YH —* YH,h corresponds to selecting the word, given its part-ofspeech.","{'title': '3 Enriched Contexts', 'number': '3'}"
"In supervised estimation one common smoothing technique is linear interpolation, (Jelinek, 1997).","{'title': '4 Smoothing', 'number': '4'}"
"This section explains how linear interpolation can be represented using a PCFG with tied rule probabilities, and how one might estimate smoothing parameters in an unsupervised framework.","{'title': '4 Smoothing', 'number': '4'}"
In many probabilistic models it is common to estimate the distribution of some event x conditioned on some set of context information P(x|N(1) ... N(k)) by smoothing it with less complicated conditional distributions.,"{'title': '4 Smoothing', 'number': '4'}"
"Using linear interpolation we model P(x|N(1) ... N(k)) as a weighted average of two distributions λ1P1(x|N(1), ... , N(k)) + λ2P2(x|N(1), ... , N(k−1)), where the distribution P2 makes an independence assumption by dropping the conditioning event N(k).","{'title': '4 Smoothing', 'number': '4'}"
"In a PCFG a nonterminal N can encode a collection of conditioning events N(1) ... N(k), and BN determines a distribution conditioned on N(1) ... N(k) over events represented by the rules r ∈ RN.","{'title': '4 Smoothing', 'number': '4'}"
"For example, in EVG the nonterminal L1 encodes three separate pieces of conditioning information: the direction d = left, the head part-of-speech H = NN, and the argument position v = 0; BL1→YJJ NNL represents the probability of generating JJ as the first left argument of NN.","{'title': '4 Smoothing', 'number': '4'}"
"Suppose in EVG we are interested in smoothing P(A | d, H, v) with a component that excludes the head conditioning event.","{'title': '4 Smoothing', 'number': '4'}"
"Using linear interpolation, this would be: We will estimate PCFG rules with linearly interpolated probabilities by creating a tied PCFG which is extended by adding rules that select between the main distribution P1 and the backoff distribution P2, and also rules that correspond to draws from those distributions.","{'title': '4 Smoothing', 'number': '4'}"
We will make use of tied rule probabilities to make the independence assumption in the backoff distribution.,"{'title': '4 Smoothing', 'number': '4'}"
We still use the original grammar to parse the sentence.,"{'title': '4 Smoothing', 'number': '4'}"
"However, we estimate the parameters in the extended grammar and then translate them back into the original grammar for parsing.","{'title': '4 Smoothing', 'number': '4'}"
"More formally, suppose B ⊆ N is a set of nonterminals (called the backoff set) with conditioning events N(1) ... N(k−1) in common (differing in a conditioning event N(k)), and with rule sets of the same cardinality.","{'title': '4 Smoothing', 'number': '4'}"
"If G is our model’s PCFG, we can define a new tied PCFG G′ = (N′, T , S, R′, O), where N′ = N ∪ {Nbℓ  |N ∈ B, E ∈ {1, 2}}, meaning for each nonterminal N in the backoff set we add two nonterminals Nb1, Nb2 representing each distribution P1 and P2.","{'title': '4 Smoothing', 'number': '4'}"
"The new rule set R′ = (∪N∈N′R′N) where for all N ∈ B rule set R′N = IN → Nbℓ  |E ∈ {1, 2}}, meaning at N in G′ we decide which distribution P1, P2 to use; and for N ∈ B and E ∈ {1, 2} , R′Nbℓ = {Nbℓ → Q  |N → Q ∈ RN} indicating a draw from distribution Pℓ.","{'title': '4 Smoothing', 'number': '4'}"
"For nonterminals N ∈6 B, R′N = RN.","{'title': '4 Smoothing', 'number': '4'}"
"Finally, for each N, M ∈ B we specify a tying relation between the rules inR′Nb2 and R′Mb2 , grouping together analogous rules.","{'title': '4 Smoothing', 'number': '4'}"
"This has the effect of making an independence assumption about P2, namely that it ignores the conditioning event N(k), drawing from a common distribution each time a nonterminal Nb2 is rewritten.","{'title': '4 Smoothing', 'number': '4'}"
"For example, in EVG to smooth P(A = DT | d = left, H = NN, v = 0) with P2(A = DT | d = left, v = 0) we define the backoff set to be {LH  |H ∈ Vτ}.","{'title': '4 Smoothing', 'number': '4'}"
"In the extended grammar we define the tying relation to form rule equivalence classes by the argument they generate, i.e. for each argument A ∈ Vτ, we have a rule equivalence class {LFb2 → YA HL  |H ∈ Vτ}.","{'title': '4 Smoothing', 'number': '4'}"
"We can see that in grammar G′ each N ∈ B eventually ends up rewriting to one of N’s expansions Q in G. There are two indirect paths, one through Nb1 and one through Nb2.","{'title': '4 Smoothing', 'number': '4'}"
"Thus this defines the probability of N → Q in G, BN→β, as the probability of rewriting N as Q in G′ via Nb1 and Nb2.","{'title': '4 Smoothing', 'number': '4'}"
That is: BN→β = ON→Nb1 ONb1→β + ON→Nb2 ONb2→β The example in Figure 6 shows the probability that L1 rewrites to Ybig dogL in grammar G. dog Typically when smoothing we need to incorporate the prior knowledge that conditioning events that have been seen fewer times should be more strongly smoothed.,"{'title': '4 Smoothing', 'number': '4'}"
"We accomplish this by setting the Dirichlet hyperparameters for each N → Nb1, N → Nb2 decision to (K, 2K), where K = |RNb1  |is the number of rewrite rules for A.","{'title': '4 Smoothing', 'number': '4'}"
This ensures that the model will only start to ignore the backoff distribuOur first experiments examine smoothing the distributions over an argument in the DMV and EVG models.,"{'title': '4 Smoothing', 'number': '4'}"
"In DMV we smooth the probability of argument A given head part-of-speech H and direction d with a distribution that ignores H. In EVG, which conditions on H, d and argument position v we back off two ways.","{'title': '4 Smoothing', 'number': '4'}"
"The first is to ignore v and use backoff conditioning event H, d. This yields a backoff distribution with the same conditioning information as the argument distribution from DMV.","{'title': '4 Smoothing', 'number': '4'}"
We call this EVG smoothed-skip-val.,"{'title': '4 Smoothing', 'number': '4'}"
"The second possibility is to have the backoff distribution ignore the head part-of-speech H and use backoff conditioning event v, d. This assumes that arguments share a common distribution across heads.","{'title': '4 Smoothing', 'number': '4'}"
We call this EVG smoothed-skip-head.,"{'title': '4 Smoothing', 'number': '4'}"
"As we see below, backing off by ignoring the part-ofspeech of the head H worked better than ignoring the argument position v. For L-EVG we smooth the argument part-ofspeech distribution (conditioned on the head word) with the unlexicalized EVG smoothed-skip-head model.","{'title': '4 Smoothing', 'number': '4'}"
Klein and Manning (2004) strongly emphasize the importance of smart initialization in getting good performance from DMV.,"{'title': '5 Initialization and Search issues', 'number': '5'}"
The likelihood function is full of local maxima and different initial parameter values yield vastly different quality solutions.,"{'title': '5 Initialization and Search issues', 'number': '5'}"
They offer what they call a “harmonic initializer” which initializes the attachment probabilities to favor arguments that appear more closely in the data.,"{'title': '5 Initialization and Search issues', 'number': '5'}"
This starts EM in a state preferring shorter attachments.,"{'title': '5 Initialization and Search issues', 'number': '5'}"
"Since our goal is to expand the model to incorporate lexical information, we want an initialization scheme which does not depend on the details of DMV.","{'title': '5 Initialization and Search issues', 'number': '5'}"
The method we use is to create M sets of B random initial settings and to run VB some small number of iterations (40 in all our experiments) for each initial setting.,"{'title': '5 Initialization and Search issues', 'number': '5'}"
"For each of the M sets, the model with the best free energy of the B runs is then run out until convergence (as measured by likelihood of a held-out data set); the other models are pruned away.","{'title': '5 Initialization and Search issues', 'number': '5'}"
In this paper we use B = 20 and M = 50.,"{'title': '5 Initialization and Search issues', 'number': '5'}"
"For the bth setting, we draw a random sample from the prior ¯θ(b).","{'title': '5 Initialization and Search issues', 'number': '5'}"
"We set the initial Q(t) = P(t|s,¯θ(b)) which can be calculated using the Expectation-Maximization E-Step.","{'title': '5 Initialization and Search issues', 'number': '5'}"
Q(¯θ) is then initialized using the standard VB M-step.,"{'title': '5 Initialization and Search issues', 'number': '5'}"
"For the Lexicalized-EVG, we modify this procedure slightly, by first running MB smoothed EVG models for 40 iterations each and selecting the best model in each cohort as before; each L-EVG distribution is initialized from its corresponding EVG distribution.","{'title': '5 Initialization and Search issues', 'number': '5'}"
"The new P(A|h, H, d, v) distributions are set initially to their corresponding P(A|H, d, v) values.","{'title': '5 Initialization and Search issues', 'number': '5'}"
"We trained on the standard Penn Treebank WSJ corpus (Marcus et al., 1993).","{'title': '6 Results', 'number': '6'}"
"Following Klein and Manning (2002), sentences longer than 10 words after removing punctuation are ignored.","{'title': '6 Results', 'number': '6'}"
We refer to this variant as WSJ10.,"{'title': '6 Results', 'number': '6'}"
"Following Cohen et al. (2008), we train on sections 2-21, used 22 as a held-out development corpus, and present results evaluated on section 23.","{'title': '6 Results', 'number': '6'}"
"The models were all trained using Variational Bayes, and initialized as described in Section 5.","{'title': '6 Results', 'number': '6'}"
"To evaluate, we follow Cohen et al. (2008) in using the mean of the variational posterior Dirichlets as a point estimate ¯θ′.","{'title': '6 Results', 'number': '6'}"
"For the unsmoothed models we decode by selecting the Viterbi parse given ¯θ′, or argmaxtP (t|s, ¯θ′).","{'title': '6 Results', 'number': '6'}"
"For the smoothed models we find the Viterbi parse of the unsmoothed CFG, but use the smoothed probabilities.","{'title': '6 Results', 'number': '6'}"
"We evaluate against the gold standard dependencies for section 23, which were extracted from the phrase structure trees using the standard rules by Yamada and Matsumoto (2003).","{'title': '6 Results', 'number': '6'}"
We measure the percent accuracy of the directed dependency edges.,"{'title': '6 Results', 'number': '6'}"
"For the lexicalized model, we replaced all words that were seen fewer than 100 times with “UNK.” We ran each of our systems 10 times, and report the average directed accuracy achieved.","{'title': '6 Results', 'number': '6'}"
The results are shown in Table 1.,"{'title': '6 Results', 'number': '6'}"
We compare to work by Cohen et al. (2008) and Cohen and Smith (2009).,"{'title': '6 Results', 'number': '6'}"
"Looking at Table 1, we can first of all see the benefit of randomized initialization over the harmonic initializer for DMV.","{'title': '6 Results', 'number': '6'}"
"We can also see a large gain by adding smoothing to DMV, topping even the logistic normal prior.","{'title': '6 Results', 'number': '6'}"
"The unsmoothed EVG actually performs worse than unsmoothed DMV, but both smoothed versions improve even on smoothed DMV.","{'title': '6 Results', 'number': '6'}"
Adding lexical information (L-EVG) yields a moderate further improvement.,"{'title': '6 Results', 'number': '6'}"
"As the greatest improvement comes from moving to model EVG smoothed-skip-head, we show in Table 2 the most probable arguments for each val, dir, using the mean of the appropriate variational Dirichlet.","{'title': '6 Results', 'number': '6'}"
"For d = right, v = 1, P(A|v, d) largely seems to acts as a way of grouping together various verb types, while for d = left, v = 0 the model finds that nouns tend to act as the closest left argument. tion, according to smoothing distribution P(arg|dir, val) in EVG smoothed-skip-head model with lowest free energy.","{'title': '6 Results', 'number': '6'}"
We present a smoothing technique for unsupervised PCFG estimation which allows us to explore more sophisticated dependency grammars.,"{'title': '7 Conclusion', 'number': '7'}"
Our method combines linear interpolation with a Bayesian prior that ensures the backoff distribution receives probability mass.,"{'title': '7 Conclusion', 'number': '7'}"
Estimating the smoothed model requires running the standard Variational Bayes on an extended PCFG.,"{'title': '7 Conclusion', 'number': '7'}"
We used this technique to estimate a series of dependency grammars which extend DMV with additional valence and lexical information.,"{'title': '7 Conclusion', 'number': '7'}"
We found that both were helpful in learning English dependency grammars.,"{'title': '7 Conclusion', 'number': '7'}"
Our L-EVG model gives the best reported accuracy to date on the WSJ10 corpus.,"{'title': '7 Conclusion', 'number': '7'}"
Future work includes using lexical information more deeply in the model by conditioning argument words and valence on the lexical head.,"{'title': '7 Conclusion', 'number': '7'}"
We suspect that successfully doing so will require using much larger datasets.,"{'title': '7 Conclusion', 'number': '7'}"
We would also like to explore using our smoothing technique in other models such as HMMs.,"{'title': '7 Conclusion', 'number': '7'}"
"For instance, we could do unsupervised HMM part-of-speech induction by smooth a tritag model with a bitag model.","{'title': '7 Conclusion', 'number': '7'}"
"Finally, we would like to learn the parts-of-speech in our dependency model from text and not rely on the gold-standard tags.","{'title': '7 Conclusion', 'number': '7'}"
