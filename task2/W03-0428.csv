col1,col2
We discuss two named-entity recognition models which use characters and character -grams either exclusively or as an important part of their data representation.,{}
"The first model is a character-level HMM with minimal context information, and the second model is a maximum-entropy conditional markov model with substantially richer context features.",{}
Our best model achieves an overall F of 86.07% on the English test data (92.31% on the development data).,{}
This number represents a 25% error reduction over the same model without word-internal (substring) features.,{}
"For most sequence-modeling tasks with word-level evaluation, including named-entity recognition and part-ofspeech tagging, it has seemed natural to use entire words as the basic input features.","{'title': '1 Introduction', 'number': '1'}"
"For example, the classic HMM view of these two tasks is one in which the observations are words and the hidden states encode class labels.","{'title': '1 Introduction', 'number': '1'}"
"However, because of data sparsity, sophisticated unknown word models are generally required for good performance.","{'title': '1 Introduction', 'number': '1'}"
"A common approach is to extract word-internal features from unknown words, for example suffix, capitalization, or punctuation features (Mikheev, 1997, Wacholder et al., 1997, Bikel et al., 1997).","{'title': '1 Introduction', 'number': '1'}"
One then treats the unknown word as a collection of such features.,"{'title': '1 Introduction', 'number': '1'}"
"Having such unknown-word models as an add-on is perhaps a misplaced focus: in these tasks, providing correct behavior on unknown words is typically the key challenge.","{'title': '1 Introduction', 'number': '1'}"
"Here, we examine the utility of taking character sequences as a primary representation.","{'title': '1 Introduction', 'number': '1'}"
"We present two models in which the basic units are characters and character -grams, instead of words and word phrases.","{'title': '1 Introduction', 'number': '1'}"
"Earlier papers have taken a character-level approach to named entity recognition (NER), notably Cucerzan and Yarowsky (1999), which used prefix and suffix tries, though to our knowledge incorporating all character grams is new.","{'title': '1 Introduction', 'number': '1'}"
"In section 2, we discuss a character-level HMM, while in section 3 we discuss a sequence-free maximum-entropy (maxent) classifier which uses -gram substring features.","{'title': '1 Introduction', 'number': '1'}"
"Finally, in section 4 we add additional features to the maxent model, and chain these models into a conditional markov model (CMM), as used for tagging (Ratnaparkhi, 1996) or earlier NER work (Borthwick, 1999).","{'title': '1 Introduction', 'number': '1'}"
Figure 1 shows a graphical model representation of our character-level HMM.,"{'title': '2 A Character-Level HMM', 'number': '2'}"
"Characters are emitted one at a time, and there is one state per character.","{'title': '2 A Character-Level HMM', 'number': '2'}"
Each state’s identity depends only on the previous state.,"{'title': '2 A Character-Level HMM', 'number': '2'}"
Each character’s identity depends on both the current state and on the previous characters.,"{'title': '2 A Character-Level HMM', 'number': '2'}"
"In addition to this HMM view, it may also be convenient to think of the local emission models as type-conditional -gram models.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Indeed, the character emission model in this section is directly based on the -gram proper-name classification engine described in (Smarr and Manning, 2002).","{'title': '2 A Character-Level HMM', 'number': '2'}"
"The primary addition is the state-transition chaining, which allows the model to do segmentation as well as classification.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"When using character-level models for word-evaluated tasks, one would not want multiple characters inside a single word to receive different labels.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"This can be avoided in two ways: by explicitly locking state transitions inside words, or by careful choice of transition topology.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"In our current implementation, we do the latter.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Each state is a pair where is an entity type (such as PERSON, and including an other type) and indicates the length of time the system has been in state .","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Therefore, a state like (PERSON, 2) indicates the second letter inside a person phrase.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"The final letter of a phrase is a following space (we insert one if there is none) and the state is a special final state like (PERSON, F).","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Additionally, once reaches our -gram history order, it stays there.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"We then use empirical, unsmoothed estimates for statestate transitions.","{'title': '2 A Character-Level HMM', 'number': '2'}"
This annotation and estimation enforces consistent labellings in practice.,"{'title': '2 A Character-Level HMM', 'number': '2'}"
"For example, (PERSON, 2) can only transition to the next state (PERSON, 3) or the final state (PERSON, F).","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Final states can only transition to beginning states, like (other, 1).","{'title': '2 A Character-Level HMM', 'number': '2'}"
"For emissions, we must estimate a quantity of the form , for example, .1 We use an -gram model of order .2 The -gram estimates are smoothed via deleted interpolation.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Given this model, we can do Viterbi decoding in the standard way.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"To be clear on what this model does and does not capture, we consider a few examples ( indicates a space).","{'title': '2 A Character-Level HMM', 'number': '2'}"
"First, we might be asked for .","{'title': '2 A Character-Level HMM', 'number': '2'}"
"In this case, we know both that we are in the middle of a location that begins with Denv and also that the preceding context was to.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"In essence, encoding into the state lets us distinguish the beginnings of phrases, which lets us model trends like named entities (all the classes besides other) generally starting with capital letters in English.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Second, we may be asked for quantities like , which allows us to model the ends of phrases.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Here we have a slight complexity: by the notation, one would expect such emissions to have probability 1, since nothing else can be emitted from a final state.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"In practice, we have a special stop symbol in our n-gram counts, and the probability of emitting a space from a final state is the probability of the n-gram having chosen the stop character.3 models.","{'title': '2 A Character-Level HMM', 'number': '2'}"
The value was the empirically optimal order.,"{'title': '2 A Character-Level HMM', 'number': '2'}"
"3This can be cleaned up conceptually by considering the entire process to have been a hierarchical HMM (Fine et al., 1998), where the -gram model generates the entire phrase, followed by a tier pop up to the phrase transition tier.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Using this model, we tested two variants, one in which preceding context was discarded (for example, was turned into ), and another where context was used as outlined above.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"For comparison, we also built a first-order word-level HMM; the results are shown in table 1.","{'title': '2 A Character-Level HMM', 'number': '2'}"
We give F both per-category and overall.,"{'title': '2 A Character-Level HMM', 'number': '2'}"
"The word-level model and the (context disabled) character-level model are intended as a rough minimal pair, in that the only information crossing phrase boundaries was the entity type, isolating the effects of character- vs word-level modeling (a more precise minimal pair is examined in section 3).","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Switching to the character model raised the overall score greatly, from 74.5% to 82.2%.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"On top of this, context helped, but substantially less, bringing the total to 83.2%.","{'title': '2 A Character-Level HMM', 'number': '2'}"
We did also try to incorporate gazetteer information by adding -gram counts from gazetteer entries to the training counts that back the above character emission model.,"{'title': '2 A Character-Level HMM', 'number': '2'}"
"However, this reduced performance (by 2.0% with context on).","{'title': '2 A Character-Level HMM', 'number': '2'}"
"The supplied gazetteers appear to have been built from the training data and so do not increase coverage, and provide only a flat distribution of name phrases whose empirical distributions are very spiked.","{'title': '2 A Character-Level HMM', 'number': '2'}"
"Given the amount of improvement from using a model backed by character -grams instead of word -grams, the immediate question is whether this benefit is complementary to the benefit from features which have traditionally been of use in word level systems, such as syntactic context features, topic features, and so on.","{'title': '3 A Character-Feature Based Classifier', 'number': '3'}"
"To test this, we constructed a maxent classifier which locally classifies single words, without modeling the entity type sequences .4 These local classifiers map a feature representation of each word position to entity types, such as PERSON.5 We present a hill-climb over feature sets for the English development set data in table 2.","{'title': '3 A Character-Feature Based Classifier', 'number': '3'}"
"First, we tried only the local word as a feature; the result was that each word was assigned its most common class in the training data.","{'title': '3 A Character-Feature Based Classifier', 'number': '3'}"
"The overall F-score was 52.29%, well below the official CoNLL baseline of 71.18%.6 We next added -gram features; specifically, we framed each word with special start and end symbols, and then added every contiguous substring to the feature list.","{'title': '3 A Character-Feature Based Classifier', 'number': '3'}"
Note that this subsumes the entire-word features.,"{'title': '3 A Character-Feature Based Classifier', 'number': '3'}"
"Using the substring features alone scored 73.10%, already breaking the the phrase-based CoNLL baseline, though lower than the no-context HMM, which better models the context inside phrases.","{'title': '3 A Character-Feature Based Classifier', 'number': '3'}"
Adding a current tag feature gave a score of 74.17%.,"{'title': '3 A Character-Feature Based Classifier', 'number': '3'}"
"At this point, the bulk of outstanding errors were plausibly attributable to insufficient context information.","{'title': '3 A Character-Feature Based Classifier', 'number': '3'}"
Adding even just the previous and next words and tags as (atomic) features raised performance to 82.39%.,"{'title': '3 A Character-Feature Based Classifier', 'number': '3'}"
"More complex, joint context features which paired the current word and tag with the previous and next words and tags raised the score further to 83.09%, nearly to the level of the HMM, still without actually having any model of previous classification decisions.","{'title': '3 A Character-Feature Based Classifier', 'number': '3'}"
"In order to include state sequence features, which allow the classifications at various positions to interact, we have to abandon classifying each position independently.","{'title': '4 A Character-Based CMM', 'number': '4'}"
"Sequence-sensitive features can be included by chaining our local classifiers together and performing joint inference, i.e., by building a conditional markov model (CMM), also known as a maximum entropy markov model (McCallum et al., 2000).","{'title': '4 A Character-Based CMM', 'number': '4'}"
"Previous classification decisions are clearly relevant: for example the sequence Grace Road is a single location, not a person’s name adjacent to a location (which is the erroneous output of the model in section 3).","{'title': '4 A Character-Based CMM', 'number': '4'}"
Adding features representing the previous classification decision ( ) raised the score 2.35% to 85.44%.,"{'title': '4 A Character-Based CMM', 'number': '4'}"
"We found knowing that the previous word was an other wasn’t particularly useful without also knowing its part-of-speech (e.g., a preceding preposition might indicate a location).","{'title': '4 A Character-Based CMM', 'number': '4'}"
"Joint tag-sequence features, along with longer distance sequence and tag-sequence features, gave 87.21%.","{'title': '4 A Character-Based CMM', 'number': '4'}"
The remaining improvements involved a number of other features which directly targetted observed error types.,"{'title': '4 A Character-Based CMM', 'number': '4'}"
These features included letter type pattern features (for example 20-month would become d-x for digitlowercase and Italy would become Xx for mixed case).,"{'title': '4 A Character-Based CMM', 'number': '4'}"
"This improved performance substantially, for example allowing the system to detect ALL CAPS regions.","{'title': '4 A Character-Based CMM', 'number': '4'}"
"Table 3 shows an example of a local decision for Grace in the context at Grace Road, using all of the features defined to date.","{'title': '4 A Character-Based CMM', 'number': '4'}"
Note that the evidence against Grace as a name completely overwhelms the -gram and word preference for PERSON.,"{'title': '4 A Character-Based CMM', 'number': '4'}"
Other features included secondprevious and second-next words (when the previous or next words were very short) and a marker for capitalized words whose lowercase forms had also been seen.,"{'title': '4 A Character-Based CMM', 'number': '4'}"
The final system also contained some simple error-driven postprocessing.,"{'title': '4 A Character-Based CMM', 'number': '4'}"
"In particular, repeated sub-elements (usually last names) of multi-word person names were given type PERSON, and a crude heuristic restoration of B- prefixes was performed.","{'title': '4 A Character-Based CMM', 'number': '4'}"
"In total, this final system had an F-score of 92.31% on the English development set.","{'title': '4 A Character-Based CMM', 'number': '4'}"
"Table 4 gives a more detailed breakdown of this score, and also gives the results of this system on the English test set, and both German data sets.","{'title': '4 A Character-Based CMM', 'number': '4'}"
"The primary argument of this paper is that character substrings are a valuable, and, we believe, underexploited source of model features.","{'title': '5 Conclusion', 'number': '5'}"
"In an HMM with an admittedly very local sequence model, switching from a word model to a character model gave an error reduction of about 30%.","{'title': '5 Conclusion', 'number': '5'}"
"In the final, much richer chained maxent setting, the reduction from the best model minus -gram features to the reported best model was about 25% – smaller, but still substantial.","{'title': '5 Conclusion', 'number': '5'}"
This paper also again demonstrates how the ease of incorporating features into a discriminative maxent model allows for productive feature engineering.,"{'title': '5 Conclusion', 'number': '5'}"
