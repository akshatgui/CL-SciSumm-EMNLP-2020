col1,col2
"If we take an existing supervised NLP system, a simple and general way to improve accuracy is to use unsupervised word representations as extra word features.",Introduction
"We evaluate Brown clusters, Collobert and Weston (2008) embeddings, and HLBL (Mnih & Hinton, 2009) embeddings of words on both NER and chunking.",Introduction
"We use near state-of-the-art supervised baselines, and find that each of the three word representations improves the accuracy of these baselines.",Introduction
We find further by combining word representations.,Introduction
"You can download word features, for use in existing NLP systems, as well as our here:",Introduction
"By using unlabelled data to reduce data sparsity in the labeled training data, semi-supervised approaches improve generalization accuracy.",Experiment/Discussion
"Semi-supervised models such as Ando and Zhang (2005), Suzuki and Isozaki (2008), and Suzuki et al. (2009) achieve state-of-the-art accuracy.",Experiment/Discussion
"However, these approaches dictate a particular choice of model and training regime.",Experiment/Discussion
It can be tricky and time-consuming to adapt an existing supervised NLP system to use these semi-supervised techniques.,Experiment/Discussion
It is preferable to use a simple and general method to adapt existing supervised NLP systems to be semi-supervised.,Experiment/Discussion
"One approach that is becoming popular is to use unsupervised methods to induce word features—or to download word features that have already been induced—plug these word features into an existing system, and observe a significant increase in accuracy.",Experiment/Discussion
But which word features are good for what tasks?,Experiment/Discussion
Should we prefer certain word features?,Experiment/Discussion
Can we combine them?,Experiment/Discussion
"A word representation is a mathematical object associated with each word, often a vector.",Experiment/Discussion
"Each dimension’s value corresponds to a feature and might even have a semantic or grammatical interpretation, so we call it a word feature.",Experiment/Discussion
"Conventionally, supervised lexicalized NLP approaches take a word and convert it to a symbolic ID, which is then transformed into a feature vector using a one-hot representation: The feature vector has the same length as the size of the vocabulary, and only one dimension is on.",Experiment/Discussion
"However, the one-hot representation of a word suffers from data sparsity: Namely, for words that are rare in the labeled training data, their corresponding model parameters will be poorly estimated.",Experiment/Discussion
"Moreover, at test time, the model cannot handle words that do not appear in the labeled training data.",Experiment/Discussion
These limitations of one-hot word representations have prompted researchers to investigate unsupervised methods for inducing word representations over large unlabeled corpora.,Experiment/Discussion
"Word features can be hand-designed, but our goal is to learn them.",Experiment/Discussion
"One common approach to inducing unsupervised word representation is to use clustering, perhaps hierarchical.",Experiment/Discussion
"This technique was used by a variety of researchers (Miller et al., 2004; Liang, 2005; Koo et al., 2008; Ratinov & Roth, 2009; Huang & Yates, 2009).",Experiment/Discussion
This leads to a one-hot representation over a smaller vocabulary size.,Experiment/Discussion
"Neural language models (Bengio et al., 2001; Schwenk & Gauvain, 2002; Mnih & Hinton, 2007; Collobert & Weston, 2008), on the other hand, induce dense real-valued low-dimensional word embeddings using unsupervised approaches.",Experiment/Discussion
(See Bengio (2008) for a more complete list of references on neural language models.),Experiment/Discussion
"Unsupervised word representations have been used in previous NLP work, and have demonstrated improvements in generalization accuracy on a variety of tasks.",Experiment/Discussion
But different word representations have never been systematically compared in a controlled way.,Experiment/Discussion
"In this work, we compare different techniques for inducing word representations, evaluating them on the tasks of named entity recognition (NER) and chunking.",Experiment/Discussion
"We retract former negative results published in Turian et al. (2009) about Collobert and Weston (2008) embeddings, given training improvements that we describe in Section 7.1.",Experiment/Discussion
"Distributional word representations are based upon a cooccurrence matrix F of size WxC, where W is the vocabulary size, each row Fw is the initial representation of word w, and each column Fc is some context.",Experiment/Discussion
"Sahlgren (2006) and Turney and Pantel (2010) describe a handful of possible design decisions in contructing F, including choice of context types (left window? right window? size of window?) and type of frequency count (raw? binary? tf-idf?).",Experiment/Discussion
"Fw has dimensionality W, which can be too large to use Fw as features for word w in a supervised model.",Experiment/Discussion
"One can map F to matrix f of size W x d, where d << C, using some function g, where f = g(F). fw represents word w as a vector with d dimensions.",Experiment/Discussion
"The choice of g is another design decision, although perhaps not as important as the statistics used to initially construct F. The self-organizing semantic map (Ritter & Kohonen, 1989) is a distributional technique that maps words to two dimensions, such that syntactically and semantically related words are nearby (Honkela et al., 1995; Honkela, 1997).",Experiment/Discussion
"LSA (Dumais et al., 1988; Landauer et al., 1998), LSI, and LDA (Blei et al., 2003) induce distributional representations over F in which each column is a document context.",Experiment/Discussion
"In most of the other approaches discussed, the columns represent word contexts.",Experiment/Discussion
"In LSA, g computes the SVD of F. Hyperspace Analogue to Language (HAL) is another early distributional approach (Lund et al., 1995; Lund & Burgess, 1996) to inducing word representations.",Experiment/Discussion
They compute F over a corpus of 160 million word tokens with a vocabulary size W of 70K word types.,Experiment/Discussion
"There are 2·W types of context (columns): The first or second W are counted if the word c occurs within a window of 10 to the left or right of the word w, respectively. f is chosen by taking the 200 columns (out of 140K in F) with the highest variances.",Experiment/Discussion
"ICA is another technique to transform F into f. (V¨ayrynen & Honkela, 2004; V¨ayrynen & Honkela, 2005; V¨ayrynen et al., 2007).",Experiment/Discussion
"ICA is expensive, and the largest vocabulary size used in these works was only 10K.",Experiment/Discussion
"As far as we know, ICA methods have not been used when the size of the vocab W is 100K or more.",Experiment/Discussion
"Explicitly storing cooccurrence matrix F can be memory-intensive, and transforming F to f can be time-consuming.",Experiment/Discussion
"It is preferable that F never be computed explicitly, and that f be constructed incrementally.",Experiment/Discussion
ˇReh˚uˇrek and Sojka (2010) describe an incremental approach to inducing LSA and LDA topic models over 270 millions word tokens with a vocabulary of 315K word types.,Experiment/Discussion
This is similar in magnitude to our experiments.,Experiment/Discussion
Another incremental approach to constructing f is using a random projection: Linear mapping g is multiplying F by a random matrix chosen a priori.,Experiment/Discussion
"This random indexing method is motivated by the Johnson-Lindenstrauss lemma, which states that for certain choices of random matrix, if d is sufficiently large, then the original distances between words in F will be preserved in f (Sahlgren, 2005).",Experiment/Discussion
Kaski (1998) uses this technique to produce 100-dimensional representations of documents.,Experiment/Discussion
Sahlgren (2001) was the first author to use random indexing using narrow context.,Experiment/Discussion
"Sahlgren (2006) does a battery of experiments exploring different design decisions involved in constructing F, prior to using random indexing.",Experiment/Discussion
"However, like all the works cited above, Sahlgren (2006) only uses distributional representation to improve existing systems for one-shot classification tasks, such as IR, WSD, semantic knowledge tests, and text categorization.",Experiment/Discussion
It is not well-understood what settings are appropriate to induce distributional word representations for structured prediction tasks (like parsing and MT) and sequence labeling tasks (like chunking and NER).,Experiment/Discussion
"Previous research has achieved repeated successes on these tasks using clustering representations (Section 3) and distributed representations (Section 4), so we focus on these representations in our work.",Experiment/Discussion
Another type of word representation is to induce a clustering over words.,Experiment/Discussion
Clustering methods and distributional methods can overlap.,Experiment/Discussion
"For example, Pereira et al. (1993) begin with a cooccurrence matrix and transform this matrix into a clustering.",Experiment/Discussion
"The Brown algorithm is a hierarchical clustering algorithm which clusters words to maximize the mutual information of bigrams (Brown et al., 1992).",Experiment/Discussion
So it is a class-based bigram language model.,Experiment/Discussion
"It runs in time O(V·K2), where V is the size of the vocabulary and K is the number of clusters.",Experiment/Discussion
"The hierarchical nature of the clustering means that we can choose the word class at several levels in the hierarchy, which can compensate for poor clusters of a small number of words.",Experiment/Discussion
"One downside of Brown clustering is that it is based solely on bigram statistics, and does not consider word usage in a wider context.",Experiment/Discussion
"Brown clusters have been used successfully in a variety of NLP applications: NER (Miller et al., 2004; Liang, 2005; Ratinov & Roth, 2009), PCFG parsing (Candito & Crabb´e, 2009), dependency parsing (Koo et al., 2008; Suzuki et al., 2009), and semantic dependency parsing (Zhao et al., 2009).",Experiment/Discussion
Martin et al. (1998) presents algorithms for inducing hierarchical clusterings based upon word bigram and trigram statistics.,Experiment/Discussion
"Ushioda (1996) presents an extension to the Brown clustering algorithm, and learn hierarchical clusterings of words as well as phrases, which they apply to POS tagging.",Experiment/Discussion
"Lin and Wu (2009) present a K-means-like non-hierarchical clustering algorithm for phrases, which uses MapReduce.",Experiment/Discussion
"HMMs can be used to induce a soft clustering, specifically a multinomial distribution over possible clusters (hidden states).",Experiment/Discussion
Li and McCallum (2005) use an HMM-LDA model to improve POS tagging and Chinese Word Segmentation.,Experiment/Discussion
"Huang and Yates (2009) induce a fully-connected HMM, which emits a multinomial distribution over possible vocabulary words.",Experiment/Discussion
They perform hard clustering using the Viterbi algorithm.,Experiment/Discussion
"(Alternately, they could keep the soft clustering, with the representation for a particular word token being the posterior probability distribution over the states.)",Experiment/Discussion
"However, the CRF chunker in Huang and Yates (2009), which uses their HMM word clusters as extra features, achieves F1 lower than a baseline CRF chunker (Sha & Pereira, 2003).",Experiment/Discussion
"Goldberg et al. (2009) use an HMM to assign POS tags to words, which in turns improves the accuracy of the PCFG-based Hebrew parser.",Experiment/Discussion
Deschacht and Moens (2009) use a latent-variable language model to improve semantic role labeling.,Experiment/Discussion
Another approach to word representation is to learn a distributed representation.,Experiment/Discussion
(Not to be confused with distributional representations.),Experiment/Discussion
"A distributed representation is dense, lowdimensional, and real-valued.",Experiment/Discussion
Distributed word representations are called word embeddings.,Experiment/Discussion
"Each dimension of the embedding represents a latent feature of the word, hopefully capturing useful syntactic and semantic properties.",Experiment/Discussion
"A distributed representation is compact, in the sense that it can represent an exponential number of clusters in the number of dimensions.",Experiment/Discussion
"Word embeddings are typically induced using neural language models, which use neural networks as the underlying predictive model (Bengio, 2008).",Experiment/Discussion
"Historically, training and testing of neural language models has been slow, scaling as the size of the vocabulary for each model computation (Bengio et al., 2001; Bengio et al., 2003).",Experiment/Discussion
"However, many approaches have been proposed in recent years to eliminate that linear dependency on vocabulary size (Morin & Bengio, 2005; Collobert & Weston, 2008; Mnih & Hinton, 2009) and allow scaling to very large training corpora.",Experiment/Discussion
"Collobert and Weston (2008) presented a neural language model that could be trained over billions of words, because the gradient of the loss was computed stochastically over a small sample of possible outputs, in a spirit similar to Bengio and S´en´ecal (2003).",Experiment/Discussion
This neural model of Collobert and Weston (2008) was refined and presented in greater depth in Bengio et al. (2009).,Experiment/Discussion
The model is discriminative and nonprobabilistic.,Experiment/Discussion
"For each training update, we read an n-gram x = (w1, ... , wn) from the corpus.",Experiment/Discussion
"The model concatenates the learned embeddings of the n words, giving e(w1) ® ... ® e(wn), where e is the lookup table and ® is concatenation.",Experiment/Discussion
"We also create a corrupted or noise n-gram x˜ = (w1, ... , wn_q, ˜wn), where ˜wn # wn is chosen uniformly from the vocabulary.1 For convenience, we write e(x) to mean e(w1) ® ... ® e(wn).",Experiment/Discussion
We predict a score s(x) for x by passing e(x) through a single hidden layer neural network.,Experiment/Discussion
The training criterion is that n-grams that are present in the training corpus like x must have a score at least some margin higher than corrupted n-grams like ˜x.,Experiment/Discussion
"Specifically: L(x) = max(0, 1− s(x) + s(˜x)).",Experiment/Discussion
"We minimize this loss stochastically over the n-grams in the corpus, doing gradient descent simultaneously over the neural network parameters and the embedding lookup table.",Experiment/Discussion
"We implemented the approach of Collobert and Weston (2008), with the following differences: The log-bilinear model (Mnih & Hinton, 2007) is a probabilistic and linear neural model.",Experiment/Discussion
"Given an n-gram, the model concatenates the embeddings of the n − 1 first words, and learns a linear model to predict the embedding of the last word.",Experiment/Discussion
The similarity between the predicted embedding and the current actual embedding is transformed into a probability by exponentiating and then normalizing.,Experiment/Discussion
Mnih and Hinton (2009) speed up model evaluation during training and testing by using a hierarchy to exponentially filter down the number of computations that are performed.,Experiment/Discussion
This hierarchical evaluation technique was first proposed by Morin and Bengio (2005).,Experiment/Discussion
"The model, combined with this optimization, is called the hierarchical log-bilinear (HLBL) model. n-gram is corrupted.",Experiment/Discussion
"In Bengio et al. (2009), the last word in the n-gram is corrupted.",Experiment/Discussion
"We evaluate the hypothesis that one can take an existing, near state-of-the-art, supervised NLP system, and improve its accuracy by including word representations as word features.",Experiment/Discussion
This technique for turning a supervised approach into a semi-supervised one is general and task-agnostic.,Experiment/Discussion
"However, we wish to find out if certain word representations are preferable for certain tasks.",Experiment/Discussion
"Lin and Wu (2009) finds that the representations that are good for NER are poor for search query classification, and vice-versa.",Experiment/Discussion
"We apply clustering and distributed representations to NER and chunking, which allows us to compare our semi-supervised models to those of Ando and Zhang (2005) and Suzuki and Isozaki (2008).",Experiment/Discussion
Chunking is a syntactic sequence labeling task.,Experiment/Discussion
"We follow the conditions in the CoNLL-2000 shared task (Sang & Buchholz, 2000).",Experiment/Discussion
The linear CRF chunker of Sha and Pereira (2003) is a standard near-state-of-the-art baseline chunker.,Experiment/Discussion
"In fact, many off-the-shelf CRF implementations now replicate Sha and Pereira (2003), including their choice of feature set: We use CRFsuite because it makes it simple to modify the feature generation code, so one can easily add new features.",Experiment/Discussion
"We use SGD optimization, and enable negative state features and negative transition features.",Experiment/Discussion
"(“feature.possible transitions=1, feature.possible states=1”) Table 1 shows the features in the baseline chunker.",Experiment/Discussion
"As you can see, the Brown and embedding features are unigram features, and do not participate in conjunctions like the word features and tag features do.",Experiment/Discussion
Koo et al. (2008) sees further accuracy improvements on dependency parsing when using word representations in compound features.,Experiment/Discussion
"The data comes from the Penn Treebank, and is newswire from the Wall Street Journal in 1989.",Experiment/Discussion
"Of the 8936 training sentences, we used 1000 randomly sampled sentences (23615 words) for development.",Experiment/Discussion
"We trained models on the 7936 training partition sentences, and evaluated their F1 on the development set.",Experiment/Discussion
"After choosing hyperparameters to maximize the dev F1, we would retrain the model using these hyperparameters on the full 8936 sentence training set, and evaluate on test.",Experiment/Discussion
"One hyperparameter was l2-regularization sigma, which for most models was optimal at 2 or 3.2.",Experiment/Discussion
"The word embeddings also required a scaling hyperparameter, as described in Section 7.2.",Experiment/Discussion
NER is typically treated as a sequence prediction problem.,Experiment/Discussion
"Following Ratinov and Roth (2009), we use the regularized averaged perceptron model.",Experiment/Discussion
"Ratinov and Roth (2009) describe different sequence encoding like BILOU and BIO, and show that the BILOU encoding outperforms BIO, and the greedy inference performs competitively to Viterbi while being significantly faster.",Experiment/Discussion
"Accordingly, we use greedy inference and BILOU text chunk representation.",Experiment/Discussion
We use the publicly available implementation from Ratinov and Roth (2009) (see the end of this paper for the URL).,Experiment/Discussion
"In our baseline experiments, we remove gazetteers and non-local features (Krishnan & Manning, 2006).",Experiment/Discussion
"However, we also run experiments that include these features, to understand if the information they provide mostly overlaps with that of the word representations.",Experiment/Discussion
"After each epoch over the training set, we measured the accuracy of the model on the development set.",Experiment/Discussion
"Training was stopped after the accuracy on the development set did not improve for 10 epochs, generally about 50–80 epochs total.",Experiment/Discussion
The epoch that performed best on the development set was chosen as the final model.,Experiment/Discussion
"We use the following baseline set of features When using the lexical features, we normalize dates and numbers.",Experiment/Discussion
"For example, 1980 becomes *DDDD* and 212-325-4751 becomes *DDD**DDD*-*DDDD*.",Experiment/Discussion
"This allows a degree of abstraction to years, phone numbers, etc.",Experiment/Discussion
This delexicalization is performed separately from using the word representation.,Experiment/Discussion
"That is, if we have induced an embedding for 12/3/2008 , we will use the embedding of 12/3/2008 , and *DD*/*D*/*DDDD* in the baseline features listed above.",Experiment/Discussion
"Unlike in our chunking experiments, after we chose the best model on the development set, we used that model on the test set too.",Experiment/Discussion
"(In chunking, after finding the best hyperparameters on the development set, we would combine the dev and training set and training a model over this combined set, and then evaluate on test.)",Experiment/Discussion
The standard evaluation benchmark for NER is the CoNLL03 shared task dataset drawn from the Reuters newswire.,Experiment/Discussion
"The training set contains 204K words (14K sentences, 946 documents), the test set contains 46K words (3.5K sentences, 231 documents), and the development set contains 51K words (3.3K sentences, 216 documents).",Experiment/Discussion
"We also evaluated on an out-of-domain (OOD) dataset, the MUC7 formal run (59K words).",Experiment/Discussion
MUC7 has a different annotation standard than the CoNLL03 data.,Experiment/Discussion
"It has several NE types that don’t appear in CoNLL03: money, dates, and numeric quantities.",Experiment/Discussion
"CoNLL03 has MISC, which is not present in MUC7.",Experiment/Discussion
"To evaluate on MUC7, we perform the following postprocessing steps prior to evaluation: These postprocessing steps will adversely affect all NER models across-the-board, nonetheless allowing us to compare different models in a controlled manner.",Experiment/Discussion
Unlabeled data is used for inducing the word representations.,Experiment/Discussion
"We used the RCV1 corpus, which contains one year of Reuters English newswire, from August 1996 to August 1997, about 63 millions words in 3.3 million sentences.",Experiment/Discussion
We left case intact in the corpus.,Experiment/Discussion
"By comparison, Collobert and Weston (2008) downcases words and delexicalizes numbers.",Experiment/Discussion
"We use a preprocessing technique proposed by Liang, (2005, p. 51), which was later used by Koo et al. (2008): Remove all sentences that are less than 90% lowercase a–z.",Experiment/Discussion
"We assume that whitespace is not counted, although this is not specified in Liang’s thesis.",Experiment/Discussion
We call this preprocessing step cleaning.,Experiment/Discussion
"In Turian et al. (2009), we found that all word representations performed better on the supervised task when they were induced on the clean unlabeled data, both embeddings and Brown clusters.",Experiment/Discussion
"This is the case even though the cleaning process was very aggressive, and discarded more than half of the sentences.",Experiment/Discussion
"According to the evidence and arguments presented in Bengio et al. (2009), the non-convex optimization process for Collobert and Weston (2008) embeddings might be adversely affected by noise and the statistical sparsity issues regarding rare words, especially at the beginning of training.",Experiment/Discussion
"For this reason, we hypothesize that learning representations over the most frequent words first and gradually increasing the vocabulary—a curriculum training strategy (Elman, 1993; Bengio et al., 2009; Spitkovsky et al., 2010)—would provide better results than cleaning.",Experiment/Discussion
"After cleaning, there are 37 million words (58% of the original) in 1.3 million sentences (41% of the original).",Experiment/Discussion
The cleaned RCV1 corpus has 269K word types.,Experiment/Discussion
"This is the vocabulary size, i.e. how many word representations were induced.",Experiment/Discussion
"Note that cleaning is applied only to the unlabeled data, not to the labeled data used in the supervised tasks.",Experiment/Discussion
RCV1 is a superset of the CoNLL03 corpus.,Experiment/Discussion
"For this reason, NER results that use RCV1 word representations are a form of transductive learning.",Experiment/Discussion
"The Brown clusters took roughly 3 days to induce, when we induced 1000 clusters, the baseline in prior work (Koo et al., 2008; Ratinov & Roth, 2009).",Experiment/Discussion
"We also induced 100, 320, and 3200 Brown clusters, for comparison.",Experiment/Discussion
"(Because Brown clustering scales quadratically in the number of clusters, inducing 10000 clusters would have been prohibitive.)",Experiment/Discussion
"Because Brown clusters are hierarchical, we can use cluster supersets as features.",Experiment/Discussion
"We used clusters at path depth 4, 6, 10, and 20 (Ratinov & Roth, 2009).",Experiment/Discussion
These are the prefixes used in Table 1.,Experiment/Discussion
"The Collobert and Weston (2008) (C&W) embeddings were induced over the course of a few weeks, and trained for about 50 epochs.",Experiment/Discussion
"One of the difficulties in inducing these embeddings is that there is no stopping criterion defined, and that the quality of the embeddings can keep improving as training continues.",Experiment/Discussion
Collobert (p.c.) simply leaves one computer training his embeddings indefinitely.,Experiment/Discussion
"We induced embeddings with 25, 50, 100, or 200 dimensions over 5-gram windows.",Experiment/Discussion
"In comparison to Turian et al. (2009), we use improved C&W embeddings in this work: formly in the range [-0.01, +0.01], not [-1,+1].",Experiment/Discussion
"For rare words, which are typically updated only 143 times per epoch2, and given that our embedding learning rate was typically 1e-6 or 1e-7, this means that rare word embeddings will be concentrated around zero, instead of spread out randomly.",Experiment/Discussion
"The HLBL embeddings were trained for 100 epochs (7 days).3 Unlike our Collobert and Weston (2008) embeddings, we did not extensively tune the learning rates for HLBL.",Experiment/Discussion
We used a learning rate of 1e-3 for both model parameters and embedding parameters.,Experiment/Discussion
"We induced embeddings with 100 dimensions over 5-gram windows, and embeddings with 50 dimensions over 5-gram windows.",Experiment/Discussion
"Embeddings were induced over one pass approach using a random tree, not two passes with an updated tree and embeddings re-estimation.",Experiment/Discussion
"Like many NLP systems, the baseline system contains only binary features.",Experiment/Discussion
"The word embeddings, however, are real numbers that are not necessarily in a bounded range.",Experiment/Discussion
"If the range of the word embeddings is too large, they will exert more influence than the binary features.",Experiment/Discussion
We generally found that embeddings had zero mean.,Experiment/Discussion
"We can scale the embeddings by a hyperparameter, to control their standard deviation.",Experiment/Discussion
Assume that the embeddings are represented by a matrix E: c- is a scaling constant that sets the new standard deviation after scaling the embeddings. work.,Experiment/Discussion
"In Turian et al. (2009), we were not able to prescribe a default value for scaling the embeddings.",Experiment/Discussion
"However, these curves demonstrate that a reasonable choice of scale factor is such that the embeddings have a standard deviation of 0.1.",Experiment/Discussion
"There are capacity controls for the word representations: number of Brown clusters, and number of dimensions of the word embeddings.",Experiment/Discussion
Figure 2 shows the effect on the validation F1 as we vary the capacity of the word representations.,Experiment/Discussion
"In general, it appears that more Brown clusters are better.",Experiment/Discussion
"We would like to induce 10000 Brown clusters, however this would take several months.",Experiment/Discussion
"In Turian et al. (2009), we hypothesized on the basis of solely the HLBL NER curve that higher-dimensional word embeddings would give higher accuracy.",Experiment/Discussion
Figure 2 shows that this hypothesis is not true.,Experiment/Discussion
"For NER, the C&W curve is almost flat, and we were suprised to find the even 25-dimensional C&W word embeddings work so well.",Experiment/Discussion
"For chunking, 50-dimensional embeddings had the highest validation F1 for both C&W and HLBL.",Experiment/Discussion
These curves indicates that the optimal capacity of the word embeddings is task-specific. gazetteers to the baseline.,Experiment/Discussion
"To speed up training, in combined experiments (C&W plus another word representation), we used the 50-dimensional C&W embeddings, not the 200-dimensional ones.",Experiment/Discussion
"In the last section, we show how many unlabeled words were used.",Experiment/Discussion
Table 2 shows the final chunking results and Table 3 shows the final NER F1 results.,Experiment/Discussion
"We compare to the state-of-the-art methods of Ando and Zhang (2005), Suzuki and Isozaki (2008), and—for NER—Lin and Wu (2009).",Experiment/Discussion
Tables 2 and 3 show that accuracy can be increased further by combining the features from different types of word representations.,Experiment/Discussion
"But, if only one word representation is to be used, Brown clusters have the highest accuracy.",Experiment/Discussion
"Given the improvements to the C&W embeddings since Turian et al. (2009), C&W embeddings outperform the HLBL embeddings.",Experiment/Discussion
"On chunking, there is only a minute difference between Brown clusters and the embeddings.",Experiment/Discussion
Combining representations leads to small increases in the test F1.,Experiment/Discussion
"In comparison to chunking, combining different word representations on NER seems gives larger improvements on the test F1.",Experiment/Discussion
"On NER, Brown clusters are superior to the word embeddings.",Experiment/Discussion
"Since much of the NER F1 is derived from decisions made over rare words, we suspected that Brown clustering has a superior representation for rare words.",Experiment/Discussion
"Brown makes a single hard clustering decision, whereas the embedding for a rare word is close to its initial value since it hasn’t received many training updates (see Footnote 2).",Experiment/Discussion
"Figure 3 shows the total number of per-token errors incurred on the test set, depending upon the frequency of the word token in the unlabeled data.",Experiment/Discussion
"For NER, Figure 3 (b) shows that most errors occur on rare words, and that Brown clusters do indeed incur fewer errors for rare words.",Experiment/Discussion
"This supports our hypothesis that, for rare words, Brown clustering produces better representations than word embeddings that haven’t received sufficient training updates.",Experiment/Discussion
"For chunking, Brown clusters and C&W embeddings incur almost identical numbers of errors, and errors are concentrated around the more common words.",Experiment/Discussion
"We hypothesize that non-rare words have good representations, regardless of the choice of word representation technique.",Experiment/Discussion
"For tasks like chunking in which a syntactic decision relies upon looking at several token simultaneously, compound features that use the word representations might increase accuracy more (Koo et al., 2008).",Experiment/Discussion
Using word representations in NER brought larger gains on the out-of-domain data than on the in-domain data.,Experiment/Discussion
"We were surprised by this result, because the OOD data was not even used during the unsupervised word representation induction, as was the in-domain data.",Experiment/Discussion
We are curious to investigate this phenomenon further.,Experiment/Discussion
Ando and Zhang (2005) present a semisupervised learning algorithm called alternating structure optimization (ASO).,Experiment/Discussion
They find a lowdimensional projection of the input features that gives good linear classifiers over auxiliary tasks.,Experiment/Discussion
"These auxiliary tasks are sometimes specific to the supervised task, and sometimes general language modeling tasks like “predict the missing word”.",Experiment/Discussion
Suzuki and Isozaki (2008) present a semisupervised extension of CRFs.,Experiment/Discussion
"(In Suzuki et al. (2009), they extend their semi-supervised approach to more general conditional models.)",Experiment/Discussion
One of the advantages of the semi-supervised learning approach that we use is that it is simpler and more general than that of Ando and Zhang (2005) and Suzuki and Isozaki (2008).,Experiment/Discussion
"Their methods dictate a particular choice of model and training regime and could not, for instance, be used with an NLP system based upon an SVM classifier.",Experiment/Discussion
"Lin and Wu (2009) present a K-means-like non-hierarchical clustering algorithm for phrases, which uses MapReduce.",Experiment/Discussion
"Since they can scale to millions of phrases, and they train over 800B unlabeled words, they achieve state-of-the-art accuracy on NER using their phrase clusters.",Experiment/Discussion
This suggests that extending word representations to phrase representations is worth further investigation.,Experiment/Discussion
"Word features can be learned in advance in an unsupervised, task-inspecific, and model-agnostic manner.",Results/Conclusion
"These word features, once learned, are easily disseminated with other researchers, and easily integrated into existing supervised NLP systems.",Results/Conclusion
"The disadvantage, however, is that accuracy might not be as high as a semi-supervised method that includes task-specific information and that jointly learns the supervised and unsupervised tasks (Ando & Zhang, 2005; Suzuki & Isozaki, 2008; Suzuki et al., 2009).",Results/Conclusion
"Unsupervised word representations have been used in previous NLP work, and have demonstrated improvements in generalization accuracy on a variety of tasks.",Results/Conclusion
Ours is the first work to systematically compare different word representations in a controlled way.,Results/Conclusion
We found that Brown clusters and word embeddings both can improve the accuracy of a near-state-of-the-art supervised NLP system.,Results/Conclusion
We also found that combining different word representations can improve accuracy further.,Results/Conclusion
Error analysis indicates that Brown clustering induces better representations for rare words than C&W embeddings that have not received many training updates.,Results/Conclusion
Another contribution of our work is a default method for setting the scaling parameter for word embeddings.,Results/Conclusion
"With this contribution, word embeddings can now be used off-the-shelf as word features, with no tuning.",Results/Conclusion
"Future work should explore methods for inducing phrase representations, as well as techniques for increasing in accuracy by using word representations in compound features.",Results/Conclusion
"Replicating our experiments You can visit http://metaoptimize.com/ projects/wordreprs/ to find: The word representations we induced, which you can download and use in your experiments; The code for inducing the word representations, which you can use to induce word representations on your own data; The NER and chunking system, with code for replicating our experiments.",Results/Conclusion
"Thank you to Magnus Sahlgren, Bob Carpenter, Percy Liang, Alexander Yates, and the anonymous reviewers for useful discussion.",Results/Conclusion
Thank you to Andriy Mnih for inducing his embeddings on RCV1 for us.,Results/Conclusion
"Joseph Turian and Yoshua Bengio acknowledge the following agencies for research funding and computing support: NSERC, RQCHP, CIFAR.",Results/Conclusion
Lev Ratinov was supported by the Air Force Research Laboratory (AFRL) under prime contract no.,Results/Conclusion
FA8750-09-C-0181.,Results/Conclusion
"Any opinions, findings, and conclusion or recommendations expressed in this material are those of the author and do not necessarily reflect the view of the Air Force Research Laboratory (AFRL).",Results/Conclusion
