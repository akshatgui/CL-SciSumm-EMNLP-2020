col1,col2
"Kernel-based learning (e.g., Support Vector Machines) has been successfully applied to many hard problems in Natural Language Processing (NLP).",Introduction
"In NLP, although feature combinations are crucial to improving performance, they are heuristically selected.",Introduction
Kernel methods change this situation.,Introduction
The merit of the kernel is that feature combinaimplicitly expanded without loss of generality and increasing the computational costs.,Introduction
"Kernel-based text analysis shows an excellent performance in terms in accuracy; however, these methods are usually too slow to apply to large-scale text analysis.",Introduction
"In this paper, we extend Mining to convert a kernel-based classifier into a simple and fast linear classifier.",Introduction
"Experimental results on English BaseNP Chunking, Japanese Word Segmentation and Japanese Dependency Parsing show that our new classifiers are about 30 to 300 times faster than the standard kernel-based classifiers.",Introduction
"Kernel methods (e.g., Support Vector Machines (Vapnik, 1995)) attract a great deal of attention recently.",Experiment/Discussion
"In the field of Natural Language Processing, many successes have been reported.",Experiment/Discussion
"Examples include Part-of-Speech tagging (Nakagawa et al., 2002) Text Chunking (Kudo and Matsumoto, 2001), Named Entity Recognition (Isozaki and Kazawa, 2002), and Japanese Dependency Parsing (Kudo and Matsumoto, 2000; Kudo and Matsumoto, 2002).",Experiment/Discussion
It is known in NLP that combination of features contributes to a significant improvement in accuracy.,Experiment/Discussion
"For instance, in the task of dependency parsing, it would be hard to confirm a correct dependency relation with only a single set of features from either a head or its modifier.",Experiment/Discussion
"Rather, dependency relations should be determined by at least information from both of two phrases.",Experiment/Discussion
"In previous research, feature combination has been selected manually, and the performance significantly depended on these selections.",Experiment/Discussion
This is not the case with kernel-based methodology.,Experiment/Discussion
"For instance, if we use a polynomial kernel, all feature combinations are implicitly expanded without loss of generality and increasing the computational costs.",Experiment/Discussion
"Although the mapped feature space is quite large, the maximal margin strategy (Vapnik, 1995) of SVMs gives us a good generalization performance compared to the previous manual feature selection.",Experiment/Discussion
This is the main reason why kernel-based learning has delivered great results to the field of NLP.,Experiment/Discussion
"Kernel-based text analysis shows an excellent performance in terms in accuracy; however, its inefficiency in actual analysis limits practical application.",Experiment/Discussion
"For example, an SVM-based NE-chunker runs at a rate of only 85 byte/sec, while previous rulebased system can process several kilobytes per second (Isozaki and Kazawa, 2002).",Experiment/Discussion
"Such slow execution time is inadequate for Information Retrieval, Question Answering, or Text Mining, where fast analysis of large quantities of text is indispensable.",Experiment/Discussion
This paper presents two novel methods that make the kernel-based text analyzers substantially faster.,Experiment/Discussion
These methods are applicable not only to the NLP tasks but also to general machine learning tasks where training and test examples are represented in a binary vector.,Experiment/Discussion
"More specifically, we focus on a Polynomial Kernel of degree d, which can attain feature combinations that are crucial to improving the performance of tasks in NLP.",Experiment/Discussion
"Second, we introduce two fast classification algorithms for this kernel.",Experiment/Discussion
"One is PKI (Polynomial Kernel Inverted), which is an extension of Inverted Index in Information Retrieval.",Experiment/Discussion
"The other is PKE (Polynomial Kernel Expanded), where all feature combinations are explicitly expanded.",Experiment/Discussion
"By applying PKE, we can convert a kernel-based classifier into a simple and fast liner classifier.",Experiment/Discussion
"In order to build PKE, we extend the PrefixSpan (Pei et al., 2001), an efficient Basket Mining algorithm, to enumerate effective feature combinations from a set of support examples.",Experiment/Discussion
"Experiments on English BaseNP Chunking, Japanese Word Segmentation and Japanese Dependency Parsing show that PKI and PKE perform respectively 2 to 13 times and 30 to 300 times faster than standard kernel-based systems, without a discernible change in accuracy.",Experiment/Discussion
"Suppose we have a set of training data for a binary classification problem: (x1, y1), .",Experiment/Discussion
.,Experiment/Discussion
.,Experiment/Discussion
", (xL, yL) xj E RN, yj E {+1, −1}, where xj is a feature vector of the j-th training sample, and yj is the class label associated with this training sample.",Experiment/Discussion
The decision function of SVMs is defined by where: (A) φ is a non-liner mapping function from RN to RH (N « H).,Experiment/Discussion
"(B) αj, b E R, αj > 0.",Experiment/Discussion
The mapping function φ should be designed such that all training examples are linearly separable in RH space.,Experiment/Discussion
"Since H is much larger than N, it requires heavy computation to evaluate the dot products φ(xi) · φ(x) in an explicit form.",Experiment/Discussion
This problem can be overcome by noticing that both construction of optimal parameter αi (we will omit the details of this construction here) and the calculation of the decision function only require the evaluation of dot products φ(xi)·φ(x).,Experiment/Discussion
"This is critical, since, in some cases, the dot products can be evaluated by a simple Kernel Function: K(x1, x2) = φ(x1) · φ(x2).",Experiment/Discussion
"Substituting kernel function into (1), we have the following decision function.",Experiment/Discussion
"One of the advantages of kernels is that they are not limited to vectorial object x, but that they are applicable to any kind of object representation, just given the dot products.",Experiment/Discussion
"For many tasks in NLP, the training and test examples are represented in binary vectors; or sets, since examples in NLP are usually represented in socalled Feature Structures.",Experiment/Discussion
"Here, we focus on such cases 1.",Experiment/Discussion
"Suppose a feature set F = {1, 2, ... , N} and training examples Xj(j = 1, 2, ... , L), all of which are subsets of F (i.e., Xj C_ F).",Experiment/Discussion
"In this case, Xj can be regarded as a binary vector xj = (xj1, xj2, ... , xjN) where xji = 1 if i E Xj, xji = 0 otherwise.",Experiment/Discussion
The dot product of x1 and x2 is given by x1 · x2 = |X1 n X2|.,Experiment/Discussion
"Kd(x, y) = Kd(X, Y ) = (1 + |X n Y |)d, (3) where d = 1, 2,3, ....",Experiment/Discussion
"In this paper, (3) will be referred to as an implicit form of the Polynomial Kernel.",Experiment/Discussion
"It is known in NLP that a combination of features, a subset of feature set F in general, contributes to overall accuracy.",Experiment/Discussion
"In previous research, feature combination has been selected manually.",Experiment/Discussion
"The use of a polynomial kernel allows such feature expansion without loss of generality or an increase in computational costs, since the Polynomial Kernel of degree d implicitly maps the original feature space F into Fd space.",Experiment/Discussion
"(i.e., 0 : F —* Fd).",Experiment/Discussion
"This property is critical and some reports say that, in NLP, the polynomial kernel outperforms the simple linear kernel (Kudo and Matsumoto, 2000; Isozaki and Kazawa, 2002).",Experiment/Discussion
"Here, we will give an explicit form of the Polynomial Kernel to show the mapping function 0(·).",Experiment/Discussion
Lemma 1 Explicit form ofPolynomial Kernel.,Experiment/Discussion
The Polynomial Kernel of degree d can be rewritten as,Experiment/Discussion
"In this section, we introduce two fast classification algorithms for the Polynomial Kernel of degree d. Before describing them, we give the baseline classifier (PKB): where 3 X ´ cd(r) will be referred as a subset weight of the Polynomial Kernel of degree d. This function gives a prior weight to the subset s, where |s |= r. Example 1 Quadratic and Cubic Kernel Given sets X = {a, b, c, d} and Y = {a, b, d, e}, the Quadratic Kernel K2(X, Y ) and the Cubic Kernel K3(X, Y ) can be calculated in an implicit form as: K2(X,Y ) = (1 + |X n Y |)2 = (1 + 3)2 = 16, K3(X,Y ) = (1 + |X n Y |)3 = (1 + 3)3 = 64.",Experiment/Discussion
"Using Lemma 1, the subset weights of the Quadratic Kernel and the Cubic Kernel can be calculated as c2(0) = 1, c2(1) = 3, c2(2) = 2 and c3(0)=1, c3(1)=7, c3(2)=12, c3(3)=6.",Experiment/Discussion
"In addition, subsets Pr(X n Y ) (r = 0, 1, 2, 3) are given as follows: P0(X n Y ) = The complexity of PKB is O(|X |· |SV |), since it takes O(|X|) to calculate (1 + |Xj n X|)d and there are a total of |SV  |support examples.",Experiment/Discussion
"Given an item i E F, if we know in advance the set of support examples which contain item i E F, we do not need to calculate |Xj n X |for all support examples.",Experiment/Discussion
This is a naive extension of Inverted Indexing in Information Retrieval.,Experiment/Discussion
Figure 1 shows the pseudo code of the algorithm PKI.,Experiment/Discussion
The function h(i) is a pre-compiled table and returns a set of support examples which contain item i.,Experiment/Discussion
"The complexity of the PKI is O(|X |· B + |SV |), where B is an average of |h(i) |over all item i E F. The PKI can make the classification speed drastically faster when B is small, in other words, when feature space is relatively sparse (i.e., B « |SV |).",Experiment/Discussion
"The feature space is often sparse in many tasks in NLP, since lexical entries are used as features.",Experiment/Discussion
The algorithm PKI does not change the final accuracy of the classification.,Experiment/Discussion
"Using Lemma 1, we can represent the decision function (5) in an explicit form: where Γd(X) = udr=0 Pr(X).",Experiment/Discussion
The classification algorithm given by (7) will be referred to as PKE.,Experiment/Discussion
"The complexity of PKE is O(|Γd(X)|) = O(|X|d), independent on the number of support examples |SV |.",Experiment/Discussion
"To apply the PKE, we first calculate |Γd(F) |degree of vectors This calculation is trivial only when we use a Quadratic Kernel, since we just project the original feature space F into F x F space, which is small enough to be calculated by a naive exhaustive method.",Experiment/Discussion
"However, if we, for instance, use a polynomial kernel of degree 3 or higher, this calculation becomes not trivial, since the size of feature space exponentially increases.",Experiment/Discussion
"Here we take the following strategy: Definition 2 w': An approximation of w An approximation of w is given by w' = (w'(s1), w'(s2), ... , w'(s|Γd(F)|)), where w'(s) is set to 0 if w(s) is trivially close to 0.",Experiment/Discussion
"(i.e., σneg < w(s) < σpos (σneg < 0, σpos > 0), where σpos and σneg are predefined thresholds).",Experiment/Discussion
"The algorithm PKE is an approximation of the PKB, and changes the final accuracy according to the selection of thresholds σpos and σneg.",Experiment/Discussion
"The calculation of w' is formulated as the following mining problem: Given a set of support examples and subset weight cd(r), extract all subsets s and their weights w(s) if w(s) holds w(s) > σpos or w(s) :5 σneg .",Experiment/Discussion
"In this paper, we apply a Sub-Structure Mining algorithm to the feature combination mining problem.",Experiment/Discussion
"Generally speaking, sub-structures mining algorithms efficiently extract frequent sub-structures (e.g., subsets, sub-sequences, sub-trees, or subgraphs) from a large database (set of transactions).",Experiment/Discussion
"In this context, frequent means that there are no less than ξ transactions which contain a sub-structure.",Experiment/Discussion
The parameter ξ is usually referred to as the Minimum Support.,Experiment/Discussion
"Since we must enumerate all subsets of F, we can apply subset mining algorithm, in some times called as Basket Mining algorithm, to our task.",Experiment/Discussion
"There are many subset mining algorithms proposed, however, we will focus on the PrefixSpan algorithm, which is an efficient algorithm for sequential pattern mining, originally proposed by (Pei et al., 2001).",Experiment/Discussion
"The PrefixSpan was originally designed to extract frequent sub-sequence (not subset) patterns, however, it is a trivial difference since a set can be seen as a special case of sequences (i.e., by sorting items in a set by lexicographic order, the set becomes a sequence).",Experiment/Discussion
The basic idea of the PrefixSpan is to divide the database by frequent sub-patterns (prefix) and to grow the prefix-spanning pattern in a depth-first search fashion.,Experiment/Discussion
We now modify the PrefixSpan to suit to our feature combination mining.,Experiment/Discussion
"We only enumerate up to subsets of size d. when we plan to apply the Polynomial Kernel of degree d. In the original PrefixSpan, the frequency of each subset does not change by its size.",Experiment/Discussion
"However, in our mining task, it changes (i.e., the frequency of subset s is weighted by cd(|s|)).",Experiment/Discussion
"Here, we process the mining algorithm by assuming that each transaction (support example Xj) has its frequency Cdyjαj, where Cd = max(cd(1), cd(2), ... , cd(d)).",Experiment/Discussion
"The weight w(s) is calculated by w(s) = ω(s) x cd(|s|)/Cd, where ω(s) is a frequency of s, given by the original PrefixSpan.",Experiment/Discussion
"We first divide the support examples into positive (yi > 0) and negative (yi < 0) examples, and process mining independently.",Experiment/Discussion
The result can be obtained by merging these two results.,Experiment/Discussion
"In the original PrefixSpan, minimum support is an integer.",Experiment/Discussion
"In our mining task, we can give a real number to minimum support, since each transaction (support example Xj) has possibly non-integer frequency Cdyjαj.",Experiment/Discussion
Minimum supports σpos and σneg control the rate of approximation.,Experiment/Discussion
"For the sake of convenience, we just give one parameter σ, and calculate σpos and σneg as follows After the process of mining, a set of tuples Q = {(s, w(s))I is obtained, where s is a frequent subset and w(s) is its weight.",Experiment/Discussion
We use a TRIE to efficiently store the set Q.,Experiment/Discussion
The example of such TRIE compression is shown in Figure 2.,Experiment/Discussion
"Although there are many implementations for TRIE, we use a Double-Array (Aoe, 1989) in our task.",Experiment/Discussion
The actual classification of PKE can be examined by traversing the TRIE for all subsets s E Fd(X).,Experiment/Discussion
"To demonstrate performances of PKI and PKE, we examined three NLP tasks: English BaseNP Chunking (EBC), Japanese Word Segmentation (JWS) and Japanese Dependency Parsing (JDP).",Experiment/Discussion
"A more detailed description of each task, training and test data, the system parameters, and feature sets are presented in the following subsections.",Experiment/Discussion
"Table 1 summarizes the detail information of support examples (e.g., size of SVs, size of feature set etc.).",Experiment/Discussion
"Our preliminary experiments show that a Quadratic Kernel performs the best in EBC, and a Cubic Kernel performs the best in JWS and JDP.",Experiment/Discussion
"The experiments using a Cubic Kernel are suitable to evaluate the effectiveness of the basket mining approach applied in the PKE, since a Cubic Kernel projects the original feature space F into F3 space, which is too large to be handled only using a naive exhaustive method.",Experiment/Discussion
All experiments were conducted under Linux using XEON 2.4 Ghz dual processors and 3.5 Gbyte of main memory.,Experiment/Discussion
All systems are implemented in C++.,Experiment/Discussion
Text Chunking is a fundamental task in NLP – dividing sentences into non-overlapping phrases.,Experiment/Discussion
BaseNP chunking deals with a part of this task and recognizes the chunks that form noun phrases.,Experiment/Discussion
Here is an example sentence: [He] reckons [the current account deficit] will narrow to [only $ 1.8 billion] .,Experiment/Discussion
A BaseNP chunk is represented as sequence of words between square brackets.,Experiment/Discussion
"BaseNP chunking task is usually formulated as a simple tagging task, where we represent chunks with three types of tags: B: beginning of a chunk.",Experiment/Discussion
I: non-initial word.,Experiment/Discussion
O: outside of the chunk.,Experiment/Discussion
"In our experiments, we used the same settings as (Kudo and Matsumoto, 2002).",Experiment/Discussion
"We use a standard data set (Ramshaw and Marcus, 1995) consisting of sections 15-19 of the WSJ corpus as training and section 20 as testing.",Experiment/Discussion
"Since there are no explicit spaces between words in Japanese sentences, we must first identify the word boundaries before analyzing deep structure of a sentence.",Experiment/Discussion
Japanese word segmentation is formalized as a simple classification task.,Experiment/Discussion
"Let s = c1c2 · · · cm be a sequence of Japanese characters, t = t1t2 · · · tm be a sequence of Japanese character types 3 associated with each character, and yi ∈ {+1, −1}, (i = (1, 2,...,m− 1)) be a boundary marker.",Experiment/Discussion
"If there is a boundary between ci and ci+1, yi = 1, otherwise yi = −1.",Experiment/Discussion
"The feature set of example xi is given by all characters as well as character types in some constant window (e.g., 5): {ci−2, ci−1, ··· , ci+2, ci+3, ti−2, ti−1, ··· , ti+2, ti+3}.",Experiment/Discussion
Note that we distinguish the relative position of each character and character type.,Experiment/Discussion
"We use the Kyoto University Corpus (Kurohashi and Nagao, 1997), 7,958 sentences in the articles on January 1st to January 7th are used as training data, and 1,246 sentences in the articles on January 9th are used as the test data.",Experiment/Discussion
The task of Japanese dependency parsing is to identify a correct dependency of each Bunsetsu (base phrase in Japanese).,Experiment/Discussion
"In previous research, we presented a state-of-the-art SVMs-based Japanese dependency parser (Kudo and Matsumoto, 2002).",Experiment/Discussion
"We combined SVMs into an efficient parsing algorithm, Cascaded Chunking Model, which parses a sentence deterministically only by deciding whether the current chunk modifies the chunk on its immediate right hand side.",Experiment/Discussion
"The input for this algorithm consists of a set of the linguistic features related to the head and modifier (e.g., word, part-of-speech, and inflections), and the output from the algorithm is either of the value +1 (dependent) or -1 (independent).",Experiment/Discussion
"We use a standard data set, which is the same corpus described in the Japanese Word Segmentation.",Experiment/Discussion
"3Usually, in Japanese, word boundaries are highly constrained by character types, such as hiragana and katakana (both are phonetic characters in Japanese), Chinese characters, English alphabets and numbers.",Experiment/Discussion
"Tables 2, 3 and 4 show the execution time, accuracy4, and |Q |(size of extracted subsets), by changing σ from 0.01 to 0.0005.",Experiment/Discussion
The PKI leads to about 2 to 12 times improvements over the PKB.,Experiment/Discussion
"In JDP, the improvement is significant.",Experiment/Discussion
"This is because B, the average of h(i) over all items i ∈ F, is relatively small in JDP.",Experiment/Discussion
The improvement significantly depends on the sparsity of the given support examples.,Experiment/Discussion
The improvements of the PKE are more significant than the PKI.,Experiment/Discussion
"The running time of the PKE is 30 to 300 times faster than the PKB, when we set an appropriate σ, (e.g., σ = 0.005 for EBC and JWS, σ = 0.0005 for JDP).",Experiment/Discussion
"In these settings, we could preserve the final accuracies for test data.",Experiment/Discussion
"The PKE with a Cubic Kernel tends to make Q large (e.g., |Q |= 2.32 million for JWS, |Q |= 8.26 million for JDP).",Experiment/Discussion
"To reduce the size of Q, we examined simple frequency-based pruning experiments.",Experiment/Discussion
"Our extension is to simply give a prior threshold ξ(= 1, 2, 3, 4 ...), and erase all subsets which occur in less than ξ support examples.",Experiment/Discussion
The calculation of frequency can be similarly conducted by the PrefixSpan algorithm.,Experiment/Discussion
"Tables 5 and 6 show the results of frequency-based pruning, when we fix σ=0.005 for JWS, and σ=0.0005 for JDP.",Experiment/Discussion
"In JDP, we can make the size of set Q about one third of the original size.",Experiment/Discussion
This reduction gives us not only a slight speed increase but an improvement of accuracy (89.29%→89.34%).,Experiment/Discussion
Frequency-based pruning allows us to remove subsets that have large weight and small frequency.,Experiment/Discussion
"Such subsets may be generated from errors or special outliers in the training examples, which sometimes cause an overfitting in training.",Experiment/Discussion
"In JWS, the frequency-based pruning does not work well.",Experiment/Discussion
"Although we can reduce the size of Q by half, the accuracy is also reduced (97.94%→97.83%).",Experiment/Discussion
"It implies that, in JWS, features even with frequency of one contribute to the final decision hyperplane. classification; building Kx(K−1)/2 classifiers considering all pairs of classes, and final class decision was given by majority voting.",Experiment/Discussion
The values in this column are averages over all pairwise classifiers.),Experiment/Discussion
There have been several studies for efficient classification of SVMs.,Experiment/Discussion
"Isozaki et al. propose an XQK (eXpand the Quadratic Kernel) which can make their Named-Entity recognizer drastically fast (Isozaki and Kazawa, 2002).",Experiment/Discussion
XQK can be subsumed into PKE.,Experiment/Discussion
Both XQK and PKE share the basic idea; all feature combinations are explicitly expanded and we convert the kernel-based classifier into a simple linear classifier.,Experiment/Discussion
The explicit difference between XQK and PKE is that XQK is designed only for Quadratic Kernel.,Experiment/Discussion
It implies that XQK can only deal with feature combination of size up to two.,Experiment/Discussion
"On the other hand, PKE is more general and can also be applied not only to the Quadratic Kernel but also to the general-style of polynomial kernels (1 + |X ∩ Y |)d. In PKE, there are no theoretical constrains to limit the size of combinations.",Experiment/Discussion
"In addition, Isozaki et al. did not mention how to expand the feature combinations.",Experiment/Discussion
"They seem to use a naive exhaustive method to expand them, which is not always scalable and efficient for extracting three or more feature combinations.",Experiment/Discussion
PKE takes a basket mining approach to enumerating effective feature combinations more efficiently than their exhaustive method.,Experiment/Discussion
"We focused on a Polynomial Kernel of degree d, which has been widely applied in many tasks in NLP and can attain feature combination that is crucial to improving the performance of tasks in NLP.",Results/Conclusion
"Then, we introduced two fast classification algorithms for this kernel.",Results/Conclusion
"One is PKI (Polynomial Kernel Inverted), which is an extension of Inverted Index.",Results/Conclusion
"The other is PKE (Polynomial Kernel Expanded), where all feature combinations are explicitly expanded.",Results/Conclusion
"The concept in PKE can also be applicable to kernels for discrete data structures, such as String Kernel (Lodhi et al., 2002) and Tree Kernel (Kashima and Koyanagi, 2002; Collins and Duffy, 2001).",Results/Conclusion
"For instance, Tree Kernel gives a dot product of an ordered-tree, and maps the original ordered-tree onto its all sub-tree space.",Results/Conclusion
"To apply the PKE, we must efficiently enumerate the effective sub-trees from a set of support examples.",Results/Conclusion
"We can similarly apply a sub-tree mining algorithm (Zaki, 2002) to this problem.",Results/Conclusion
µd ¶µ,Results/Conclusion
