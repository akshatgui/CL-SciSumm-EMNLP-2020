col1,col2
"We present a version of Inversion Transduction Grammar where rule probabilities are lexicalized throughout the synchronous parse tree, along with pruning techniques for efficient training.",Introduction
"Alignment results improve over unlexicalized ITG on short sentences for which full EM is feasible, but pruning seems to have a negative impact on longer sentences.",Introduction
The Inversion Transduction Grammar (ITG) of Wu (1997) is a syntactically motivated algorithm for producing word-level alignments of pairs of translationally equivalent sentences in two languages.,Experiment/Discussion
"The algorithm builds a synchronous parse tree for both sentences, and assumes that the trees have the same underlying structure but that the ordering of constituents may differ in the two languages.",Experiment/Discussion
"This probabilistic, syntax-based approach has inspired much subsequent reasearch.",Experiment/Discussion
Alshawi et al. (2000) use hierarchical finite-state transducers.,Experiment/Discussion
"In the tree-to-string model of Yamada and Knight (2001), a parse tree for one sentence of a translation pair is projected onto the other string.",Experiment/Discussion
"Melamed (2003) presents algorithms for synchronous parsing with more complex grammars, discussing how to parse grammars with greater than binary branching and lexicalization of synchronous grammars.",Experiment/Discussion
"Despite being one of the earliest probabilistic syntax-based translation models, ITG remains stateof-the art.",Experiment/Discussion
Zens and Ney (2003) found that the constraints of ITG were a better match to the decoding task than the heuristics used in the IBM decoder of Berger et al. (1996).,Experiment/Discussion
"Zhang and Gildea (2004) found ITG to outperform the tree-to-string model for word-level alignment, as measured against human gold-standard alignments.",Experiment/Discussion
"One explanation for this result is that, while a tree representation is helpful for modeling translation, the trees assigned by the traditional monolingual parsers (and the treebanks on which they are trained) may not be optimal for translation of a specific language pair.",Experiment/Discussion
ITG has the advantage of being entirely data-driven – the trees are derived from an expectation maximization procedure given only the original strings as input.,Experiment/Discussion
"In this paper, we extend ITG to condition the grammar production probabilities on lexical information throughout the tree.",Experiment/Discussion
"This model is reminiscent of lexicalization as used in modern statistical parsers, in that a unique head word is chosen for each constituent in the tree.",Experiment/Discussion
It differs in that the head words are chosen through EM rather than deterministic rules.,Experiment/Discussion
"This approach is designed to retain the purely data-driven character of ITG, while giving the model more information to work with.",Experiment/Discussion
"By conditioning on lexical information, we expect the model to be able capture the same systematic differences in languages’ grammars that motive the tree-to-string model, for example, SVO vs. SOV word order or prepositions vs. postpositions, but to be able to do so in a more fine-grained manner.",Experiment/Discussion
The interaction between lexical information and word order also explains the higher performance of IBM model 4 over IBM model 3 for alignment.,Experiment/Discussion
"We begin by presenting the probability model in the following section, detailing how we address issues of pruning and smoothing that lexicalization introduces.",Experiment/Discussion
We present alignment results on a parallel Chinese-English corpus in Section 3.,Experiment/Discussion
An Inversion Transduction Grammar can generate pairs of sentences in two languages by recursively applying context-free bilingual production rules.,Experiment/Discussion
"Most work on ITG has focused on the 2-normal form, which consists of unary production rules that are responsible for generating word pairs: and binary production rules in two forms that are responsible for generating syntactic subtree pairs: The rules with square brackets enclosing the right hand side expand the left hand side symbol into the two symbols on the right hand side in the same order in the two languages, whereas the rules with pointed brackets expand the left hand side symbol into the two right hand side symbols in reverse order in the two languages.",Experiment/Discussion
One special case of ITG is the bracketing ITG that has only one nonterminal that instantiates exactly one straight rule and one inverted rule.,Experiment/Discussion
"The ITG we apply in our experiments has more structural labels than the primitive bracketing grammar: it has a start symbol 5, a single preterminal C, and two intermediate nonterminals A and B used to ensure that only one parse can generate any given word-level alignment, as discussed by Wu (1997) and Zens and Ney (2003).",Experiment/Discussion
"As an example, Figure 1 shows the alignment and the corresponding parse tree for the sentence pair Je les vois / I see them using the unambiguous bracketing ITG.",Experiment/Discussion
A stochastic ITG can be thought of as a stochastic CFG extended to the space of bitext.,Experiment/Discussion
The independence assumptions typifying S-CFGs are also valid for S-ITGs.,Experiment/Discussion
"Therefore, the probability of an S-ITG parse is calculated as the product of the probabilities of all the instances of rules in the parse tree.",Experiment/Discussion
"For instance, the probability of the parse in Figure 1 is: It is important to note that besides the bottomlevel word-pairing rules, the other rules are all nonlexical, which means the structural alignment component of the model is not sensitive to the lexical contents of subtrees.",Experiment/Discussion
"Although the ITG model can effectively restrict the space of alignment to make polynomial time parsing algorithms possible, the preference for inverted or straight rules only passively reflect the need of bottom level word alignment.",Experiment/Discussion
We are interested in investigating how much help it would be if we strengthen the structural alignment component by making the orientation choices dependent on the real lexical pairs that are passed up from the bottom.,Experiment/Discussion
The first step of lexicalization is to associate a lexical pair with each nonterminal.,Experiment/Discussion
The head word pair generation rules are designed for this purpose: The word pair e/f is representative of the lexical content of X in the two languages.,Experiment/Discussion
"For binary rules, the mechanism of head selection is introduced.",Experiment/Discussion
Now there are 4 forms of binary rules: determined by the four possible combinations of head selections (Y or Z) and orientation selections (straight or inverted).,Experiment/Discussion
"The rules for generating lexical pairs at the leaves of the tree are now predetermined: Putting them all together, we are able to derive a lexicalized bilingual parse tree for a given sentence pair.",Experiment/Discussion
"In Figure 2, the example in Figure 1 is revisited.",Experiment/Discussion
The probability of the lexicalized parse is: The factors of the product are ordered to show the generative process of the most probable parse.,Experiment/Discussion
"Starting from the start symbol 5, we first choose the head word pair for 5, which is see/vois in the example.",Experiment/Discussion
"Then, we recursively expand the lexicalized head constituents using the lexicalized structural rules.",Experiment/Discussion
"Since we are only lexicalizing rather than bilexicalizing the rules, the non-head constituents need to be lexicalized using head generation rules so that the top-down generation process can proceed in all branches.",Experiment/Discussion
"By doing so, word pairs can appear at all levels of the final parse tree in contrast with the unlexicalized parse tree in which the word pairs are generated only at the bottom.",Experiment/Discussion
The binary rules are lexicalized rather than bilexicalized.1 This is a trade-off between complexity and expressiveness.,Experiment/Discussion
"After our lexicalization, the number of lexical rules, thus the number of parameters in the statistical model, is still at the order of O(|V ||T |), where |V  |and |T  |are the vocabulary sizes of the 1In a sense our rules are bilexicalized in that they condition on words from both languages; however they do not capture head-modifier relations within a language. two languages.",Experiment/Discussion
"Given a bilingual sentence pair, a synchronous parse can be built using a two-dimensional extension of chart parsing, where chart items are indexed by their nonterminal X, head word pair e/f if specified, beginning and ending positions l, m in the source language string, and beginning and ending positions i, j in the target language string.",Experiment/Discussion
"For Expectation Maximization training, we compute lexicalized inside probabilities Q(X(e/f),l, m, i, j), as well as unlexicalized inside probabilities Q(X,l, m, i, j), from the bottom up as outlined in Algorithm 1.",Experiment/Discussion
"The algorithm has a complexity of O(N4s N4t ), where Ns and Nt are the lengths of source and target sentences respectively.",Experiment/Discussion
The complexity of parsing for an unlexicalized ITG is O(N3s N3t ).,Experiment/Discussion
"Lexicalization introduces an additional factor of O(NsNt), caused by the choice of headwords e and f in the pseudocode.",Experiment/Discussion
"Assuming that the lengths of the source and target sentences are proportional, the algorithm has a complexity of O(n8), where n is the average length of the source and target sentences.",Experiment/Discussion
We need to further restrict the space of alignments spanned by the source and target strings to make the algorithm feasible.,Experiment/Discussion
Our technique involves computing an estimate of how likely each of the n4 cells in the chart is before considering all ways of building the cell by combining smaller subcells.,Experiment/Discussion
Our figure of merit for a cell involves an estimate of both the inside probability of the cell (how likely the words within the box in both dimensions are to align) and the outside probability (how likely the words outside the box in both dimensions are to align).,Experiment/Discussion
"In including an estimate of the outside probability, our technique is related to A* methods for monolingual parsing (Klein and Manning, 2003), although our estimate is not guaranteed to be lower than complete outside probabity assigned by ITG.",Experiment/Discussion
Figure 3(a) displays the tic-tac-toe pattern for the inside and outside components of a particular cell.,Experiment/Discussion
We use IBM Model 1 as our estimate of both the inside and outside probabilities.,Experiment/Discussion
"In the Model 1 estimate of the outside probability, source and target words can align using any combination of points from the four outside corners of the tic-tac-toe pattern.",Experiment/Discussion
"Thus in Figure 3(a), there is one solid cell (corresponding to the Model 1 Viterbi alignment) in each column, falling either in the upper or lower outside shaded corner.",Experiment/Discussion
"This can be also be thought of as squeezing together the four outside corners, creating a new cell whose probability is estimated using IBM Model 1.",Experiment/Discussion
"Mathematically, our figure of merit for the cell (l, m, i, j) is a product of the inside Model 1 probability and the outside Model 1 probability: alignments included in the figure of merit for bitext cell (l, m, i, j) (Equation 1); solid black cells show the Model 1 Viterbi alignment within the shaded area.",Experiment/Discussion
"(b) shows how to compute the inside probability of a unit-width cell by combining basic cells (Equation 2), and (c) shows how to compute the inside probability of any cell by combining unit-width cells (Equation 3). where (l, m) and (i, j) represent the complementary spans in the two languages.",Experiment/Discussion
"λL1,L2 is the probability of any word alignment template for a pair of L1word source string and L2-word target string, which we model as a uniform distribution of word-forword alignment patterns after a Poisson distribution of target string’s possible lengths, following Brown et al. (1993).",Experiment/Discussion
"As an alternative, the E operator can be replaced by the max operator as the inside operator over the translation probabilities above, meaning that we use the Model 1 Viterbi probability as our estimate, rather than the total Model 1 probability.2 A naive implementation would take O(n6) steps of computation, because there are O(n4) cells, each of which takes O(n2) steps to compute its Model 1 probability.",Experiment/Discussion
"Fortunately, we can exploit the recursive nature of the cells.",Experiment/Discussion
"Let INS(l, m, i, j) denote the major factor of our Model 1 estimate of a cell’s inside probability, Ht∈(i,j) Es∈{0,(l,m)} t(ft  |es).",Experiment/Discussion
"It turns out that one can compute cells of width one (i = j) in constant time from a cell of equal width and lower height: Similarly, one can compute cells of width greater than one by combining a cell of one smaller width 2The experimental difference of the two alternatives was small.",Experiment/Discussion
"For our results, we used the max version. with a cell of width one: Figure 3(b) and (c) illustrate the inductive computation indicated by the two equations.",Experiment/Discussion
Each of the O(n4) inductive steps takes one additive or multiplicative computation.,Experiment/Discussion
A similar dynammic programing technique can be used to efficiently compute the outside component of the figure of merit.,Experiment/Discussion
"Hence, the algorithm takes just O(n4) steps to compute the figure of merit for all cells in the chart.",Experiment/Discussion
"Once the cells have been scored, there can be many ways of pruning.",Experiment/Discussion
"In our experiments, we applied beam ratio pruning to each individual bucket of cells sharing a common source substring.",Experiment/Discussion
We prune cells whose probability is lower than a fixed ratio below the best cell for the same source substring.,Experiment/Discussion
"As a result, at least one cell will be kept for each source substring.",Experiment/Discussion
We safely pruned more than 70% of cells using 10−5 as the beam ratio for sentences up to 25 words.,Experiment/Discussion
Note that this pruning technique is applicable to both the lexicalized ITG and the conventional ITG.,Experiment/Discussion
"In addition to pruning based on the figure of merit described above, we use top-k pruning to limit the number of hypotheses retained for each cell.",Experiment/Discussion
This is necessary for lexicalized ITG because the number of distinct hypotheses in the two-dimensional ITG chart has increased to O(N33 N3t ) from O(N23 N2t ) due to the choice one of O(N3) source language words and one of O(Nt) target language words as the head.,Experiment/Discussion
"We keep only the top-k lexicalized items for a given chart cell of a certain nonterminal Y contained in the cell l, m, i, j.",Experiment/Discussion
Thus the additional complexity of O(N3Nt) will be replaced by a constant factor.,Experiment/Discussion
The two pruning techniques can work for both the computation of expected counts during the training process and for the Viterbi-style algorithm for extracting the most probable parse after training.,Experiment/Discussion
"However, if we initialize EM from a uniform distribution, all probabilties are equal on the first iteration, giving us no basis to make pruning decisions.",Experiment/Discussion
"So, in our experiments, we initialize the head generation probabilities of the form P(X(e/f)  |X) to be the same as P(e/f  |C) from the result of the unlexicalized ITG training.",Experiment/Discussion
"Even though we have controlled the number of parameters of the model to be at the magnitude of O(|V ||T |), the problem of data sparseness still renders a smoothing method necessary.",Experiment/Discussion
We use backing off smoothing as the solution.,Experiment/Discussion
The probabilities of the unary head generation rules are in the form of P(X(e/f)  |X).,Experiment/Discussion
We simply back them off to the uniform distribution.,Experiment/Discussion
"The probabilities of the binary rules, which are conditioned on lexicalized nonterminals, however, need to be backed off to the probabilities of generalized rules in the following forms: where * stands for any lexical pair.",Experiment/Discussion
"For instance, where The more often X(e/f) occurred, the more reliable are the estimated conditional probabilities with the condition part being X(e/f).",Experiment/Discussion
We trained both the unlexicalized and the lexicalized ITGs on a parallel corpus of Chinese-English newswire text.,Experiment/Discussion
"The Chinese data were automatically segmented into tokens, and English capitalization was retained.",Experiment/Discussion
"We replaced words occurring only once with an unknown word token, resulting in a Chinese vocabulary of 23,783 words and an English vocabulary of 27,075 words.",Experiment/Discussion
"In the first experiment, we restricted ourselves to sentences of no more than 15 words in either language, resulting in a training corpus of 6,984 sentence pairs with a total of 66,681 Chinese words and 74,651 English words.",Experiment/Discussion
"In this experiment, we didn’t apply the pruning techniques for the lexicalized ITG.",Experiment/Discussion
"In the second experiment, we enabled the pruning techniques for the LITG with the beam ratio for the tic-tac-toe pruning as 10−5 and the number k for the top-k pruning as 25.",Experiment/Discussion
We ran the experiments on sentences up to 25 words long in both languages.,Experiment/Discussion
"The resulting training corpus had 18,773 sentence pairs with a total of 276,113 Chinese words and 315,415 English words.",Experiment/Discussion
We evaluate our translation models in terms of agreement with human-annotated word-level alignments between the sentence pairs.,Experiment/Discussion
"For scoring the Viterbi alignments of each system against goldstandard annotated alignments, we use the alignment error rate (AER) of Och and Ney (2000), which measures agreement at the level of pairs of words: where A is the set of word pairs aligned by the automatic system, GS is the set marked in the gold standard as “sure”, and GP is the set marked as “possible” (including the “sure” pairs).",Experiment/Discussion
"In our Chinese-English data, only one type of alignment was marked, meaning that GP = GS.",Experiment/Discussion
"In our hand-aligned data, 20 sentence pairs are less than or equal to 15 words in both languages, and were used as the test set for the first experiment, and 47 sentence pairs are no longer than 25 words in either language and were used to evaluate the pruned LITG against the unlexicalized ITG.",Experiment/Discussion
A separate development set of hand-aligned sentence pairs was used to control overfitting.,Experiment/Discussion
The subset of up to 15 words in both languages was used for cross-validating in the first experiment.,Experiment/Discussion
The subset of up to 25 words in both languages was used for the same purpose in the second experiment.,Experiment/Discussion
Table 1 compares results using the full (unpruned) model of unlexicalized ITG with the full model of lexicalized ITG.,Experiment/Discussion
"The two models were initialized from uniform distributions for all rules and were trained until AER began to rise on our held-out cross-validation data, which turned out to be 4 iterations for ITG and 3 iterations for LITG.",Experiment/Discussion
The results from the second experiment are shown in Table 2.,Experiment/Discussion
The performance of the full model of unlexicalized ITG is compared with the pruned model of lexicalized ITG using more training data and evaluation data.,Experiment/Discussion
"Under the same check condition, we trained ITG for 3 iterations and the pruned LITG for 1 iteration.",Experiment/Discussion
"For comparison, we also included the results from IBM Model 1 and Model 4.",Experiment/Discussion
The numbers of iterations for the training of the IBM models were chosen to be the turning points of AER changing on the cross-validation data.,Experiment/Discussion
"As shown by the numbers in Table 1, the full lexicalized model produced promising alignment results on sentence pairs that have no more than 15 words on both sides.",Results/Conclusion
"However, due to its prohibitive O(n8) computational complexity, our C++ implementation of the unpruned lexicalized model took more than 500 CPU hours, which were distributed over multiple machines, to finish one iteration of training.",Results/Conclusion
The number of CPU hours would increase to a point that is unacceptable if we doubled the average sentence length.,Results/Conclusion
Some type of pruning is a must-have.,Results/Conclusion
"Our pruned version of LITG controlled the running time for one iteration to be less than 1200 CPU hours, despite the fact that both the number of sentences and the average length of sentences were more than doubled.",Results/Conclusion
"To verify the safety of the tic-tac-toe pruning technique, we applied it to the unlexicalized ITG using the same beam ratio (10−5) and found that the AER on the test data was not changed.",Results/Conclusion
"However, whether or not the top-k lexical head pruning technique is equally safe remains a question.",Results/Conclusion
One noticeable implication of this technique for training is the reliance on initial probabilities of lexical pairs that are discriminative enough.,Results/Conclusion
"The comparison of results for ITG and LITG in Table 2 and the fact that AER began to rise after only one iteration of training seem to indicate that keeping few distinct lexical heads caused convergence on a suboptimal set of parameters, leading to a form of overfitting.",Results/Conclusion
"In contrast, overfitting did not seem to be a problem for LITG in the unpruned experiment of Table 1, despite the much larger number of parameters for LITG than for ITG and the smaller training set.",Results/Conclusion
"We also want to point out that for a pair of long sentences, it would be hard to reflect the inherent bilingual syntactic structure using the lexicalized binary bracketing parse tree.",Results/Conclusion
"In Figure 2, A(see/vois) echoes IP(see/vois) and B(see/vois) echoes VP(see/vois) so that it means IP(see/vois) is not inverted from English to French but its right child VP(see/vois) is inverted.",Results/Conclusion
"However, for longer sentences with more than 5 levels of bracketing and the same lexicalized nonterminal repeatedly appearing at different levels, the correspondences would become less linguistically plausible.",Results/Conclusion
We think the limitations of the bracketing grammar are another reason for not being able to improve the AER of longer sentence pairs after lexicalization.,Results/Conclusion
The space of alignments that is to be considered by LITG is exactly the space considered by ITG since the structural rules shared by them define the alignment space.,Results/Conclusion
The lexicalized ITG is designed to be more sensitive to the lexical influence on the choices of inversions so that it can find better alignments.,Results/Conclusion
"Wu (1997) demonstrated that for pairs of sentences that are less than 16 words, the ITG alignment space has a good coverage over all possibilities.",Results/Conclusion
"Hence, it’s reasonable to see a better chance of improving the alignment result for sentences less than 16 words.",Results/Conclusion
"We presented the formal description of a Stochastic Lexicalized Inversion Transduction Grammar with its EM training procedure, and proposed specially designed pruning and smoothing techniques.",Results/Conclusion
The experiments on a parallel corpus of Chinese and English showed that lexicalization helped for aligning sentences of up to 15 words on both sides.,Results/Conclusion
The pruning and the limitations of the bracketing grammar may be the reasons that the result on sentences of up to 25 words on both sides is not better than that of the unlexicalized ITG.,Results/Conclusion
"Acknowledgments We are very grateful to Rebecca Hwa for assistance with the Chinese-English data, to Kevin Knight and Daniel Marcu for their feedback, and to the authors of GIZA.",Results/Conclusion
This work was partially supported by NSF ITR IIS-09325646 and NSF ITR IIS-0428020.,Results/Conclusion
