col1,col2
A considerable body of accumulated knowledge about the design of languages for communicating information to computers has been derived from the subfields of programming language design and semantics.,Introduction
It has been the goal of the PATR group at SRI to utilize a relevant portion of this knowledge in implementing tools to facilitate communication of linguistic information to computers.,Introduction
The PATR-TI formalism is our current computer language for encoding linguistic information.,Introduction
"This paper, a brief overview of that formalism, attempts to explicate our design decisions in terms of a set of properties that effective computer languages should incorporate.",Introduction
The goal of natural-language processing research can be stated quite simply: to endow computers with human language capability.,Experiment/Discussion
"The pursuit of this objective, however, has been a difficult task for at least two reasons: first, this capability is far from being a well-understood phenomenon; second, the tools for teaching computers what we do know about human language are still very primitive.",Experiment/Discussion
The solution of these problems lies within the respective domains of linguistics and computer science.,Experiment/Discussion
Similar problems have arisen previously in computer science.,Experiment/Discussion
"Whenever a new computer application area emerges, there follow new modes of communication with computers that are geared towards such areas.",Experiment/Discussion
Computer languages are a direct result of this need for effective communication with computers.,Experiment/Discussion
A considerable body of accumulated knowledge about the design of languages for communicating information to computers has been derived from the subfields of programming language design and seman0575 with the Naval Electronic Systems Command.,Experiment/Discussion
"The views and conclusions contained in this document are those of the author and should not be interpreted as representative of the official policies, either expressed or implied, of the Defense Advanced Research Projects Agency, or the United States government.",Experiment/Discussion
"The author is indebted to Fernando Pereira, Barbara Grosz, and Ray Perrault for their comments on earlier drafts. tics.",Experiment/Discussion
It has been the goal of the PATR group at SRI2 to utilize a relevant portion of this knowledge in implementing tools to facilitate communication of linguistic information to computers.,Experiment/Discussion
The PATR-II formalism is our current computer language for encoding linguistic information.,Experiment/Discussion
"This paper, a brief overview of that formalism, attempts to explicate our design decisions in terms of a set of properties that effective computer languages should incorporate, namely: simplicity, power, mathematical well-foundedness, implementability, modularity, and declarativeness.",Experiment/Discussion
"More extensive discussions of various aspects of the PATR-II formalism and systems can be found in papers by Shieber tt. al., [831, Pereira and Shieber [841 and Karttunen [841.",Experiment/Discussion
"The notion of designing specialized computer languages and systems to encode linguistic information is not new; PROGRAMMAR [Winograd, 72], ATNs [Woods, 74 and DIALOGIC [Grosz, et al., 821 are but a few of the better-known examples.",Experiment/Discussion
"Furthermore, a trend has arisen recently in linguistics towards declarativeness in grammar formalisms—for instance, lexical-functional grammar (LFG) [Bresnan, 831, generalized phrase-structure grammar (GPSG) fGazdar and Pullum, 82] and functional unification grammar (UG) [Kay, 83].",Experiment/Discussion
"Finally, in computer science there has been a great deal of interest in declarative languages (e.g., logic programming and specification languages), and their supporting denotational semantics.",Experiment/Discussion
"But to our knowledge, no attempt has yet been made to combine the three approaches so as to yield a declarative computer language with clear semantics designed specifically for encoding linguistic information.",Experiment/Discussion
"Such a language, of which PATR-II is an example, would reflect a felicitous convergence of ideas from linguistics, artificial intelligence, and computer science.",Experiment/Discussion
"It is not the purpose of this paper to provide a comprehensive description of the PATR-II project, or even of the formalism itself.",Experiment/Discussion
"Rather, we will discuss briefly the critical properties of PATR-II to give a flavor for our approach to the design of the language.",Experiment/Discussion
References to papers with more complete descriptions of particular aspects of the project are provided when appropriate.,Experiment/Discussion
"Building on a convergence of ideas from the linguistics and Al communities, PATH-II takes as its primitive operation an extended pattern-matching technique, unification, first used in logic and theorem-proving research and lately finding its way into research in linguistics [Kay, 79; Gazdar and PuIlum, 821 and knowledge representation [Reynolds, 70; Ait-Kaci, 83).",Experiment/Discussion
"Instead of unifying logic terms, however, PAIR unification operates on directed acyclic graphs (DAG).3 DAGs can be atomic symbols or sets of label/value pairs, where the values are themselves DAGs (either atomic or complex).",Experiment/Discussion
Two labels can have the same value—thus the use of the term graph rather than tree.,Experiment/Discussion
"DAGs are notated either by drawing the graph structure itself, with the labels marking the arcs, or, as in this paper, by notating the sets of label/value pairs in square brackets, with the labels separated from their values by a colon; e.g., a DAG associated with the verb &quot;knight&quot; (as in &quot;Ether wants to knight Arthur&quot;) would appear (in at least one of our grammars) as whose value will be the category of the associated lexical entry.",Experiment/Discussion
"Other arcs may encode information about the syntactic features, translation, or syntactic subcategorization of the entry.",Experiment/Discussion
"But only the label cat has any special significance; it provides the link between context-free phrase structure rules and the DAGs, as explicated below.",Experiment/Discussion
PATR-II grammars consist of rules with a context-free phrase structure portion and a set of unifications on the DAGs associated with the constituents that participate in the application of the rule.,Experiment/Discussion
The grammar rules describe how constituents can be built up to form new constituents with associated DAGs.,Experiment/Discussion
"The right side of the rule lists the cat values of the DAGs associated with the filial constituents; the left side, the cat of the parent.",Experiment/Discussion
The associated unifications specify equivalences that must exist among the various DAGs and sub-DAGs of the parent and children.,Experiment/Discussion
"Thus, the formalism uses only one representation- --DAGs---for lexical, syntactic, and semantic information, and one operation—unification--on this representation.",Experiment/Discussion
"By way of example, we present a trivial grammar for a fragment of English with a lexicon associating words with DAGs.",Experiment/Discussion
"[cat: v head: [aux: false form: nonfinite voice: active trans: [pred: knight argl: cf1134> arg2: <f1138> [l]] syncat : [first: [cat: np head: [trans: <f1134>]] rest: [first: [cat: np head: [trans: <f1138>]] rest: <f1140> . lambda] tail: <f1140>]] Reentrant structure is notated by labeling the DAG with an arbitrary label (in angle brackets), then using that label for future references to the DAG, Associated with each entry in the lexicon is a set of DAGs.4 The root of each DAG will have an arc labeled cat sTechnically, these are rooted, directed, acyclic graphs with labeled arcs.",Experiment/Discussion
Formal definition of these and other technical notions can be found in Appendix A of Shieber et at.,Experiment/Discussion
1831.,Experiment/Discussion
"Note that some implementations have been extended to handle cyclic graph structures as well as graph structures with disjunction and negation 1Karttunen, 841.",Experiment/Discussion
"4In our implementation, this association is not directly encoded—since this would yield a grossly inefficient characterization of the lexicon— but is mediated by a morphological analyzer.",Experiment/Discussion
See Section 2.6 for further details.,Experiment/Discussion
"This grammar (plus lexicon) admits the two sentences &quot;Uther knights Arthur&quot; and &quot;Arthur knights Uther.&quot; The phrase structure associated with the first of these is: Is [NP Uther) [yr Iv knights) [NP Arthur))) The VP rule requires that the agr feature of the DAG associated with the VP be the same as (unified with) the agr of the V. Thus, the VP's agr feature will have as its value the same node as the V's agr, and hence the same values for the person and number features.",Experiment/Discussion
"Similarly, by virtue of the unification associated with the S rule, the NP will have the same agr value as the VP and, consequently, the V. We have thus encoded a form of subject-verb agreement.",Experiment/Discussion
Note that the process of unification is order-independent.,Experiment/Discussion
"For instance, we would get the same effect regardless of whether the unifications at the top of the parse tree were effected before or after those at the bottom.",Experiment/Discussion
"In either case, the DAG associated with, e.g., the VP node would be These trivial examples of grammars and lexicons offer but a glimpse of the techniques used in writing PATR-H grammars, arid do not begin to employ the power of unification as a general information-passing mechanism.",Experiment/Discussion
Examples of the use of PATR-II for encoding much more complex linguistic phenomena can be found in Shieber et at.,Experiment/Discussion
184 Augmented phrase-structure grammars such as PATRII ran in fart be quite powerful.,Experiment/Discussion
The ability to encode unbounded amounts of information in the augmentations (which PATIt-ll obviously allows) gives this formalism the power of a Turing machine.,Experiment/Discussion
"As a linguistic theory, this much power might be considered disadvantageous; as a computer language, however, such power is clearly desirable. since the intent of the language is to enable the modeling of many kinds of linguistic analyses from a range of theories.",Experiment/Discussion
"As such, PATR-H is a tool, not a result.",Experiment/Discussion
"Nevertheless, a good case could be made for maintaining at lea.st the decidability of determining whether a string is admitted by a PATR-II grammar.",Experiment/Discussion
"This property can be ensured by requiring the context-free skeleton to have the property of off-line parsability [Pereira, 83), which was used originally in the definition of LFG to maintain the decidability of that formalism [Kaplan and Bresnan, 83].",Experiment/Discussion
Off-line parsability requires that the context-free &quot;skeleton&quot; of the grammar allows no trivial cyclic derivations of the form fl One reason for maintaining the simplicity of the bare PATR-I1 formalism is to permit a clean semantics for the language.,Experiment/Discussion
"We have provided a denotational semantics for PATR-11 [Pereira and Shieber, 841 based on the information systems domain theory of Dana Scott [Scott, 82).",Experiment/Discussion
"Insofar as more complex formalisms, such as GPSG and LFG, can be modeled as appropriate notations for PATR-II grammars, PATR-11's denotational semantics constitutes a framework in which the semantics of these formalisms can also be defined, discussed, and compared.",Experiment/Discussion
"As it appears that not all the power of domain theory is needed for the semantics of PATR-II, we are currently pursuing the possibility of building a semantics based on a less powerful mode1.3 Clearly, the bare PATR-II formalism, as it was presented in Section 2.1, is sorely inadequate for any major attempt at building natural-language grammars because of its verbosity and redundancy.",Experiment/Discussion
"Efficiency of encoding was 5 But see Pereira and Shieber 184j for arguments in favor of using domain theory even if all the available power is not utilized. temporarily sacrificed in an attempt to keep the underlying formalism simple, general, and semantically well-founded.",Experiment/Discussion
"However, given a simple underlying formalism, we can build more efficient, specialized languages on top of it, much as MACLISP might be built on top of pure LISP.",Experiment/Discussion
"And just as MACLISP need not be implemented (and is not implemented) directly in pure LISP, specialized formalisms built conceptually on top of pure PATR-II need not be so implemented (although currently we do implement them directly through pure PATR-II).",Experiment/Discussion
The effectiveness of this approach can be seen in the fact that at least a sizable portion of English syntax has been encoded in various experimental PATR-II grammars constructed to date.,Experiment/Discussion
"The syntactic constructs encoded include subcategorization of various complement types (NPs, Ss, etc.",Experiment/Discussion
"), active, passive, &quot;there&quot; insertion, extraposition, raising, and equi-NP constructions, and unbounded dependencies (such as Wh-movement and relative clauses).",Experiment/Discussion
"Other theory-dependent devices that have been modeled with PATR-II include head-feature percolation (Gazdar and Pullum, 821, and LFG-like semantic forms [Kaplan and Bresnan, 83).",Experiment/Discussion
"Note that none of these constructs and techniques required expansion of the underlying formalism; indeed, the constructions all make use of the techniques described in this section.",Experiment/Discussion
See Shieber et al. [831 for a detailed discussion of the modeling of some of these phenomena.,Experiment/Discussion
The devices now available for molding PAM-II to conform to a particular intended usage or linguistic theory are in their nascent stage.,Experiment/Discussion
"However, because of their great importance in making the PATH-Il system a usable one, we will discuss them briefly.",Experiment/Discussion
"It is important to keep in mind that these methods should not be considered a part of the underlying formalism, but merely &quot;syntactic sugar&quot; to increase the system's utility and allow it to conform to a user's intentions.",Experiment/Discussion
"Because so much of the information in the PATR-II grammars under actual development tends to be encoded in the lexicon, most of our research has been devoted to methods for removing redundancy in the lexicon by allowing the users themselves to define primitive constructs and operations on lexical items.",Results/Conclusion
"Primitive constructs, such as the transitive, dyadic, or equi-NP properties of a verb, can be defined by means of templates, that is, DAGs that encode some linguistically isolable portion of the DAG of a lexical item.",Results/Conclusion
These template DAGs can then be combined to build the lexical item out of the user-defined primitives.,Results/Conclusion
"As a simple example, we could define (with the following syntax) the template Verb as Let Verb be and the template ThirdSing as Let ThirdSing be <agr number> = singular <agr person> = third The lexical entry for &quot;knights' would then be knights: Verb ThirdSing Templates can themselves refer to other templates, enabling definition of abstract linguistic concepts hierarchically.",Results/Conclusion
"For instance, a modal verb template may use an auxiliary verb template, which in term may be defined using the verb template above.",Results/Conclusion
"In fact, templates are currently employed for abstracting notions of subcategorization, verb form, semantic type, and a host of other concepts.",Results/Conclusion
More complex relationships among lexical items can be encoded by means of lexical rules.,Results/Conclusion
"These rules, such as passive and &quot;there&quot; insertion, are user-definable operations on the lexical items, enabling one variant of a word to be built from the specification of another variant.",Results/Conclusion
A lexical rule is specified as a set of selective unifications relating an input DAG and an output DAG.,Results/Conclusion
"Thus, unification is the primitive used in this device as well.",Results/Conclusion
Lexical rules are used to encode the relationships among various lexical entries that would typically be thought of as transformations or relation-changing rules (depending on one's ideological outlook).,Results/Conclusion
"Because lexical rules perform these operations, the lexicon need include only a prototype entry for each verb.",Results/Conclusion
The variant forms can be derived through lexical rules applied in accordance with the morphology actually found on the verb.,Results/Conclusion
"(The morphological analysis in the implementations of PATR-II is performed by a program based on the system of Koskenniemi 1831 and was written by Lauri Karttunen 18314 For instance, given a PATR-II grammar in which the DAGs are used to emulate the f-structures of LFG, we might write a passive lexical rule as follows (following Bresnan [83]):6 <out cat> = <in cat> <out form> = pasaprt <out subj> = <in obj> <out obj> = <in subj> The rule states in effect that the output DAG (the one associated with the passive verb form) marks the lexical item as being a passive verb whose object is the input DAG's subject and whose subject is the input's object.",Results/Conclusion
"Such lexical rules have been used for encoding the active/passive dichotomy, &quot;there&quot; insertion, extraposition, and other socalled relation-changing rules.",Results/Conclusion
"The PATR-II formalism is a completely declarative formalism, as evidenced by its denotational semantics and the order-independence of its definition.",Results/Conclusion
"Modularity is achieved through the ability to define primitive templates and lexical rules that are shared among lexical items, as well as by the declarative nature of the grammar formalism itself, removing problems of interaction of rules.",Results/Conclusion
"Rules are guaranteed to always mean the same thing, regardless of the environment of other rules in which they are placed.",Results/Conclusion
"Implementability is an empirical matter, given credence by the fact that we now have three implementations of the formalism.",Results/Conclusion
"One desirable aspect of the simplicity and declarative nature of the formalism is that even though the three implementations differ substantially from one another, using different parsing algorithms (with both top down and bottom up properties), different implementations of unification, different methods of compiling the rules, all are able to run on exactly the same grammars yielding the identical results.",Results/Conclusion
"The three implementations of the PATR-II system currently in operation at SRI are as follows: a testbed for experimentation with efficient structuresharing DAG unification algorithms, and incorporating an Earley-style parsing algorithm.",Results/Conclusion
"In addition, Lauri Karttunen and his students at the University of Texas have implemented a system based on.",Results/Conclusion
"PATR-II but with several interesting extensions, including disjunction and negation in the graph structures [Karttunen, 84].",Results/Conclusion
These extensions will undoubtedly be integrated into the SRI systems and formal semantics for them are being pursued.,Results/Conclusion
The PATR-II formalism was designed as a computer language for encoding linguistic information.,Results/Conclusion
"The design was influenced by current theory and practice in computer science, and especially in the areas of programming language design and semantics.",Results/Conclusion
"The formalism is simple (consisting of just one primitive operation, unification), powerful (although it can be constrained to be decidable), mathematically well-founded (with a complete denotational semantics), flexible (as demonstrated by its ability to model analyses in GPSG, LFG, DCG and other formalisms), modular (because of its higher-level notational devices such as templates and lexical rules), declarative (yielding orderindependence of operations), and implementable (as demonstrated by three quite dissimilar implemented systems and one highly developed programming environment).",Results/Conclusion
"As we have emphasized herein, PATR-II seems to represent a convergence of techniques from several domains— computer science, programming language design, natural language processing and linguistics.",Results/Conclusion
"Its positioning at the center of these trends arises, however, not from the admixture of many discrete techniques, but rather from the application of a single simple yet powerful concept to the encoding of linguistic information.",Results/Conclusion
