col1,col2
"The paper defines weighted head transducers, finite-state machines that perform middle-out string transduction.",{}
These transducers are strictly more expressive than the special case of standard leftto-right finite-state transducers.,{}
Dependency transduction models are then defined as collections of weighted head transducers that are applied hierarchically.,{}
A dynamic programming search algorithm is described for finding the optimal transduction of an input string with respect to a dependency transduction model.,{}
A method for automatically training a dependency transduction model from a set of input-output example strings is presented.,{}
"The method first searches for hierarchical alignments of the training examples guided by correlation statistics, and then constructs the transitions of head transducers that are consistent with these alignments.",{}
Experimental results are given for applying the training method to translation from English to Spanish and Japanese.,{}
"The paper defines weighted head transducers, finite-state machines that perform middle-out string transduction.","{'title': '', 'number': '1'}"
These transducers are strictly more expressive than the special case of standard leftto-right finite-state transducers.,"{'title': '', 'number': '1'}"
Dependency transduction models are then defined as collections of weighted head transducers that are applied hierarchically.,"{'title': '', 'number': '1'}"
A dynamic programming search algorithm is described for finding the optimal transduction of an input string with respect to a dependency transduction model.,"{'title': '', 'number': '1'}"
A method for automatically training a dependency transduction model from a set of input-output example strings is presented.,"{'title': '', 'number': '1'}"
"The method first searches for hierarchical alignments of the training examples guided by correlation statistics, and then constructs the transitions of head transducers that are consistent with these alignments.","{'title': '', 'number': '1'}"
Experimental results are given for applying the training method to translation from English to Spanish and Japanese.,"{'title': '', 'number': '1'}"
We will define a dependency transduction model in terms of a collection of weighted head transducers.,"{'title': '1.', 'number': '2'}"
"Each head transducer is a finite-state machine that differs from &quot;standard&quot; finite-state transducers in that, instead of consuming the input string left to right, it consumes it &quot;middle out&quot; from a symbol in the string.","{'title': '1.', 'number': '2'}"
"Similarly, the output of a head transducer is built up middle out at positions relative to a symbol in the output string.","{'title': '1.', 'number': '2'}"
The resulting finite-state machines are more expressive than standard left-to-right transducers.,"{'title': '1.', 'number': '2'}"
"In particular, they allow long-distance movement with fewer states than a traditional finite-state transducer, a useful property for the translation task to which we apply them in this paper.","{'title': '1.', 'number': '2'}"
"(In fact, finite-state head transducers are capable of unbounded movement with a finite number of states.)","{'title': '1.', 'number': '2'}"
"In Section 2, we introduce head transducers and explain how input-output positions on state transitions result in middle-out transduction.","{'title': '1.', 'number': '2'}"
"When applied to the problem of translation, the head transducers forming the dependency transduction model operate on input and output strings that are sequences of dependents of corresponding headwords in the source and target languages.","{'title': '1.', 'number': '2'}"
The dependency transduction model produces synchronized dependency trees in which each local tree is produced by a head transducer.,"{'title': '1.', 'number': '2'}"
"In other words, the dependency model applies the head transducers recursively, imposing a recursive decomposition of the source and target strings.","{'title': '1.', 'number': '2'}"
A dynamic programming search algorithm finds optimal (lowest total weight) derivations of target strings from input strings or word lattices produced by a speech recognizer.,"{'title': '1.', 'number': '2'}"
Section 3 defines dependency transduction models and describes the search algorithm.,"{'title': '1.', 'number': '2'}"
"We construct the dependency transduction models for translation automatically from a set of unannotated examples, each example comprising a source string and a corresponding target string.","{'title': '1.', 'number': '2'}"
"The recursive decomposition of the training examples results from an algorithm for computing hierarchical alignments of the examples, described in Section 4.2.","{'title': '1.', 'number': '2'}"
This alignment algorithm uses dynamic programming search guided by source-target word correlation statistics as described in Section 4.1.,"{'title': '1.', 'number': '2'}"
"Having constructed a hierarchical alignment for the training examples, a set of head transducer transitions are constructed from each example as described in Section 4.3.","{'title': '1.', 'number': '2'}"
"Finally, the dependency transduction model is constructed by aggregating the resulting head transducers and assigning transition weights, which are log probabilities computed from the training counts by simple maximum likelihood estimation.","{'title': '1.', 'number': '2'}"
We have applied this method of training statistical dependency transduction models in experiments on English-to-Spanish and English-to-Japanese translations of transcribed spoken utterances.,"{'title': '1.', 'number': '2'}"
The results of these experiments are described in Section 5; our concluding remarks are in Section 6.,"{'title': '1.', 'number': '2'}"
In this section we describe the basic structure and operation of a weighted head transducer.,"{'title': '2.', 'number': '3'}"
"In some respects, this description is simpler than earlier presentations (e.g., Alshawi 1996); for example, here final states are simply a subset of the transducer states whereas in other work we have described the more general case in which final states are specified by a probability distribution.","{'title': '2.', 'number': '3'}"
The simplified description is adequate for the purposes of this paper.,"{'title': '2.', 'number': '3'}"
"Formally, a weighted head transducer is a 5-tuple: an alphabet W of input symbols; an alphabet V of output symbols; a finite set Q of states go, • • • , qs; a set of final states F C Q; and a finite set T of state transitions.","{'title': '2.', 'number': '3'}"
"A transition from state q to state q' has the form (q, q' ,w, v, a, 0, c) where w is a member of W or is the empty string e; v is a member of V or 6; the integer a is the input position; the integer 0 is the output position; and the real number c is the weight or cost of the transition.","{'title': '2.', 'number': '3'}"
A transition in which a = 0 and f3 = 0 is called a head transition.,"{'title': '2.', 'number': '3'}"
"The interpretation of q, q', w, and v in transitions is similar to left-to-right transducers, i.e., in transitioning from state q to state q', the transducer &quot;reads&quot; input symbol w and &quot;writes&quot; output symbol v, and as usual if w (or v) is € then no read (respectively write) takes place for the transition.","{'title': '2.', 'number': '3'}"
The difference lies in the interpretation of the read position a and the write position 0.,"{'title': '2.', 'number': '3'}"
"To interpret the transition positions as transducer actions, we consider notional input and output tapes divided into squares.","{'title': '2.', 'number': '3'}"
"On such a tape, one square is numbered 0, and the other squares are numbered 1, 2, ... rightwards from square 0, and —1, —2, leftwards from square 0 (Figure 1).","{'title': '2.', 'number': '3'}"
"A transition with input position a and output position 0 is interpreted as reading w from square a on the input tape and writing v to square 0 of the output tape; if square 0 is already occupied, then v is written to the next empty square to the left of 0 if < 0, or to the right of 3 if )3 > 0, and similarly, if input was already read from position a, w is taken from the next unread square to the left of a if a < 0 or to the right of a if a > 0.","{'title': '2.', 'number': '3'}"
The operation of a head transducer is nondeterministic.,"{'title': '2.', 'number': '3'}"
"It starts by taking a head transition Kg, 9', wo, vo, 0, 0, c) where wo is one of the symbols (not necessarily the leftmost) in the input string.","{'title': '2.', 'number': '3'}"
(The valid initial states are therefore implicitly defined as those with an outgoing head transition.) wo is considered to be at square 0 of the input tape and vo is output at square 0 of the output tape.,"{'title': '2.', 'number': '3'}"
Further state transitions may then be taken until a final state in F is reached.,"{'title': '2.', 'number': '3'}"
"For a derivation to be valid, it must read each symbol in the input string exactly once.","{'title': '2.', 'number': '3'}"
"At the end of a derivation, the output string is formed by taking the sequence of symbols on the target tape, ignoring any empty squares on this tape.","{'title': '2.', 'number': '3'}"
The cost of a derivation of an input string to an output string by a weighted head transducer is the sum of the costs of transitions taken in the derivation.,"{'title': '2.', 'number': '3'}"
We can now define the string-to-string transduction function for a head transducer to be the function that maps an input string to the output string produced by the lowest-cost valid derivation taken over all initial states and initial symbols.,"{'title': '2.', 'number': '3'}"
"(Formally, the function is partial in that it is not defined on an input when there are no derivations or when there are multiple outputs with the same minimal cost.)","{'title': '2.', 'number': '3'}"
"In the transducers produced by the training method described in this paper, the source and target positions are in the set {-1, 0,1}, though we have also used handcoded transducers (Alshawi and Xia 1997) and automatically trained transducers (Alshawi and Douglas 2000) with a larger range of positions.","{'title': '2.', 'number': '3'}"
"The operation of a traditional left-to-right transducer can be simulated by a head transducer by starting at the leftmost input symbol and setting the positions of the first transition taken to a = 0 and /3 = 0, and the positions for subsequent transitions to a = 1 and )3 = 1.","{'title': '2.', 'number': '3'}"
"However, we can illustrate the fact that head transducers are more Head transducer to reverse an input string of arbitrary length in the alphabet {a, b}. expressive than left-to-right transducers by the case of a finite-state head transducer that reverses a string of arbitrary length.","{'title': '2.', 'number': '3'}"
(This cannot be performed by a traditional transducer with a finite number of states.),"{'title': '2.', 'number': '3'}"
"For example, the head transducer described below (and shown in Figure 2) with input alphabet {a, b} will reverse an input string of arbitrary length in that alphabet.","{'title': '2.', 'number': '3'}"
"The states of the example transducer are Q = {qi, q2} and F .--- {q2}, and it has the following transitions (costs are ignored here): The only possible complete derivations of the transducer read the input string right to left, but write it left to right, thus reversing the string.","{'title': '2.', 'number': '3'}"
Another similar example is using a finite-state head transducer to convert a palindrome of arbitrary length into one of its component halves.,"{'title': '2.', 'number': '3'}"
This clearly requires the use of an empty string on some of the output transitions.,"{'title': '2.', 'number': '3'}"
"In this section we describe dependency transduction models, which can be used for machine translation and other transduction tasks.","{'title': '3.', 'number': '4'}"
These models consist of a collection of head transducers that are applied hierarchically.,"{'title': '3.', 'number': '4'}"
"Applying the machines hierarchically means that a nonhead transition is interpreted not simply as reading an inputoutput pair (w, v), but instead as reading and writing a pair of strings headed by (w, v) according to the derivation of a subnetwork.","{'title': '3.', 'number': '4'}"
"For example, the head transducer shown in Figure 3 can be applied recursively in order to convert an arithmetic expression from infix to prefix (Polish) notation (as noted by Lewis and Stearns [1968], this transduction cannot be performed by a pushdown transducer).","{'title': '3.', 'number': '4'}"
"In the case of machine translation, the transducers derive pairs of dependency trees, a source language dependency tree and a target dependency tree.","{'title': '3.', 'number': '4'}"
"A dependency tree for a sentence, in the sense of dependency grammar (for example Hays [1964] and Hudson [1984]), is a tree in which the words of the sentence appear as nodes (we do not have terminal symbols of the kind used in phrase structure grammar).","{'title': '3.', 'number': '4'}"
"In such a tree, the parent of a node is its head and the child of a node is the node's dependent.","{'title': '3.', 'number': '4'}"
"The source and target dependency trees derived by a dependency transduction model are ordered, i.e., there is an ordering on the nodes of each local tree.","{'title': '3.', 'number': '4'}"
"This Synchronized dependency trees derived for transducing I want to make a collect call into quiero hacer una llamada de cobrar. means, in particular, that the target sentence can be constructed directly by a simple recursive traversal of the target dependency tree.","{'title': '3.', 'number': '4'}"
Each pair of source and target trees generated is synchronized in the sense to be formalized in Section 4.2.,"{'title': '3.', 'number': '4'}"
An example is given in Figure 4.,"{'title': '3.', 'number': '4'}"
Head transducers and dependency transduction models are thus related as follows: Each pair of local trees produced by a dependency transduction derivation is the result of a head transducer derivation.,"{'title': '3.', 'number': '4'}"
"Specifically, the input to such a head transducer is the string corresponding to the flattened local source dependency tree.","{'title': '3.', 'number': '4'}"
"Similarly, the output of the head transducer derivation is the string corresponding to the flattened local target dependency tree.","{'title': '3.', 'number': '4'}"
"In other words, the head transducer is used to convert a sequence consisting of a headword w and its left and right dependent words to a sequence consisting of a target word v and its left and right dependent words (Figure 5).","{'title': '3.', 'number': '4'}"
"Since the empty string may appear in a transition in place of a source or target symbol, the number of source and target dependents can be different.","{'title': '3.', 'number': '4'}"
The cost of a derivation produced by a dependency transduction model is the sum of all the weights of the head transducer derivations involved.,"{'title': '3.', 'number': '4'}"
"When applying a dependency transduction model to language translation, we choose the target string obtained by flattening the target tree of the lowest-cost dependency derivation that also generates the source string.","{'title': '3.', 'number': '4'}"
We have not yet indicated what weights to use for head transducer transitions.,"{'title': '3.', 'number': '4'}"
The definition of head transducers as such does not constrain these.,"{'title': '3.', 'number': '4'}"
"However, for a dependency transduction model to be a statistical model for generating pairs of strings, we assign transition weights that are derived from conditional probabilities.","{'title': '3.', 'number': '4'}"
"Several Head transducer converts the sequences of left and right dependents (wi wk_1) and (wk+i w,i) of w into left and right dependents (vi vj_i) and (v,±1 vp) of V. probabilistic parameterizations can be used for this purpose including the following for a transition with headwords w and v and dependent words w' and v': P(qcw' , , a, 131w,v,q).","{'title': '3.', 'number': '4'}"
"Here q and q' are the from-state and to-state for the transition and a and 13 are the source and target positions, as before.","{'title': '3.', 'number': '4'}"
"We also need parameters P(q0, 911w v) for the probability of choosing a head transition given this pair of headwords.","{'title': '3.', 'number': '4'}"
"To start the derivation, we need parameters P(roots(wo, vo)) for the probability of choosing wo,vo as the root nodes of the two trees.","{'title': '3.', 'number': '4'}"
These model parameters can be used to generate pairs of synchronized dependency trees starting with the topmost nodes of the two trees and proceeding recursively to the leaves.,"{'title': '3.', 'number': '4'}"
The probability of such a derivation can be expressed as: for a derivation in which the dependents of w and v are generated by n transitions.,"{'title': '3.', 'number': '4'}"
"To carry out translation with a dependency transduction model, we apply a dynamic programming search to find the optimal derivation.","{'title': '3.', 'number': '4'}"
"This algorithm can take as input either word strings, or word lattices produced by a speech recognizer.","{'title': '3.', 'number': '4'}"
The algorithm is similar to those for context-free parsing such as chart parsing (Earley 1970) and the CKY algorithm (Younger 1967).,"{'title': '3.', 'number': '4'}"
"Since word string input is a special case of word lattice input, we need only describe the case of lattices.","{'title': '3.', 'number': '4'}"
We now present a sketch of the transduction algorithm.,"{'title': '3.', 'number': '4'}"
"The algorithm works bottom-up, maintaining a set of configurations.","{'title': '3.', 'number': '4'}"
"A configuration has the form [fli, n2, w, v, q, c, t] corresponding to a bottom-up partial derivation currently in state q covering an input sequence between nodes n1 and n2 of the input lattice. w and v are the topmost Alshawi, Bangalore, and Douglas Learning Dependency Translation Models nodes in the source and target derivation trees.","{'title': '3.', 'number': '4'}"
Only the target tree t is stored in the configuration.,"{'title': '3.', 'number': '4'}"
"The algorithm first initializes configurations for the input words, and then performs transitions and optimizations to develop the set of configurations bottom-up: Such an initial configuration has the form: [n,n' , wo, vo, q',c,vo] (q, 17', w1, vi, —1,1, c') It is applicable when there are the following head and dependent configurations: where the dependent configuration is in a final state qf.","{'title': '3.', 'number': '4'}"
.,"{'title': '3.', 'number': '4'}"
"The result of applying the transition is to add the following to the set of configurations: [ni , n3, w, v, q', c + ci + c', g] where t' is the target dependency tree formed by adding t1 as the rightmost dependent of t. [n,n',w,v,q,ci, ti] [n,n' , w, v, q,c2,t2] and c2 > cl, the second configuration is removed from the set of configurations.","{'title': '3.', 'number': '4'}"
"If, after all applicable transitions have been taken, there are configurations spanning the entire input lattice, then the one with the lowest cost is the optimal derivation.","{'title': '3.', 'number': '4'}"
"When there are no such configurations, we take a pragmatic approach in the translation application and simply concatenate the lowest costing of the minimal length sequences of partial derivations that span the entire lattice.","{'title': '3.', 'number': '4'}"
A Viterbi-like search of the graph formed by configurations is used to find the optimal sequence of derivations.,"{'title': '3.', 'number': '4'}"
One of the advantages of middle-out transduction is that robustness is improved through such use of partial derivations when no complete derivations are available.,"{'title': '3.', 'number': '4'}"
Our training method for head transducer models only requires a set of training examples.,"{'title': '4.', 'number': '5'}"
"Each example, or bitext, consists of a source language string paired with a target language string.","{'title': '4.', 'number': '5'}"
"In our experiments, the bitexts are transcriptions of spoken English utterances paired with their translations into Spanish or Japanese.","{'title': '4.', 'number': '5'}"
It is worth emphasizing that we do not necessarily expect the dependency representations produced by the training method to be traditional dependency structures for the two languages.,"{'title': '4.', 'number': '5'}"
"Instead, the aim is to produce bilingual (i.e., synchronized, see below) dependency representations that are appropriate to performing the translation task for a specific language pair or specific bilingual corpus.","{'title': '4.', 'number': '5'}"
"For example, headwords in both languages are chosen to force a synchronized alignment (for better or worse) in order to simplify cases involving so-called head-switching.","{'title': '4.', 'number': '5'}"
"This contrasts with one of the traditional approaches (e.g., Dorr 1994; Watanabe 1995) to posing the translation problem, i.e., the approach in which translation problems are seen in terms of bridging the gap between the most natural monolingual representations underlying the sentences of each language.","{'title': '4.', 'number': '5'}"
The training method has four stages: (i) Compute co-occurrence statistics from the training data.,"{'title': '4.', 'number': '5'}"
(ii) Search for an optimal synchronized hierarchical alignment for each bitext.,"{'title': '4.', 'number': '5'}"
(iii) Construct a set of head transducers that can generate these alignments with transition weights derived from maximum likelihood estimation.,"{'title': '4.', 'number': '5'}"
"For each source word w in the data set, assign a cost, the translation pairing cost c(w, v) for all possible translations v into the target language.","{'title': '4.', 'number': '5'}"
"These translations of the source word may be zero, one, or several target language words (see Section 4.4 for discussion of the multiword case).","{'title': '4.', 'number': '5'}"
The assignment of translation pairing costs (effectively a statistical bilingual dictionary) may be done using various statistical measures.,"{'title': '4.', 'number': '5'}"
"For this purpose, a suitable statistical function needs to indicate the strength of cooccurrence correlation between source and target words, which we assume is indicative of carrying the same semantic content.","{'title': '4.', 'number': '5'}"
Our preferred choice of statistical measure for assigning the costs is the 0 correlation measure (Gale and Church 1991).,"{'title': '4.', 'number': '5'}"
We apply this statistic to co-occurrence of the source word with all its possible translations in the data set examples.,"{'title': '4.', 'number': '5'}"
"We have found that, at least for our data, this measure leads to better performance than the use of the log probabilities of target words given source words (cf.","{'title': '4.', 'number': '5'}"
Brown et al. 1993).,"{'title': '4.', 'number': '5'}"
"In addition to the correlation measure, the cost for a pairing includes a distance measure component that penalizes pairings proportionately to the difference between the (normalized) positions of the source and target words in their respective sentences.","{'title': '4.', 'number': '5'}"
"As noted earlier, dependency transduction models are generative probabilistic models; each derivation generates a pair of dependency trees.","{'title': '4.', 'number': '5'}"
Such a pair can be represented as a synchronized hierarchical alignment of two strings.,"{'title': '4.', 'number': '5'}"
A hierarchical alignment consists of four functions.,"{'title': '4.', 'number': '5'}"
"The first two functions are an alignment mapping f from source words w to target words f(w) (which may be the empty string €), and an inverse alignment mapping from target words v to source words f' (v).","{'title': '4.', 'number': '5'}"
The inverse mapping is needed to handle mapping of target words to c; it coincides with f for pairs without source €.,"{'title': '4.', 'number': '5'}"
"The other two functions are a source head-map g mapping source dependent words w to their heads g(w) in the source string, and a target head-map h mapping target dependent words v to their headwords h(v) in the target string.","{'title': '4.', 'number': '5'}"
"An A hierarchical alignment: alignment mappings f and f', and head-maps g and h. example hierarchical alignment is shown in Figure 6 (f and f' are shown separately for clarity).","{'title': '4.', 'number': '5'}"
"A hierarchical alignment is synchronized (i.e., it corresponds to synchronized dependency trees) if these conditions hold: Nonoverlap: If w1 w2, then f (wi) f(w2), and similarly, if 01 0 02, then/ (vi) f' (02).","{'title': '4.', 'number': '5'}"
"Synchronization: if f(w) =- v and v €, then f(g(w)) = h(o), and f' (v) = w. Similarly, if f' (v) w and w e, then f'(h(v)) = g(w), and f(w) = v. Phrase contiguity: The image under f of the maximal substring dominated by a headword w is a contiguous segment of the target string.","{'title': '4.', 'number': '5'}"
(Here w and v refer to word tokens not symbols (types).,"{'title': '4.', 'number': '5'}"
We hope that the context of discussion will make the type-token distinction clear in the rest of this article.),"{'title': '4.', 'number': '5'}"
The hierarchical alignment in Figure 6 is synchronized.,"{'title': '4.', 'number': '5'}"
"Of course, translations of phrases are not always transparently related by a hierarchical alignment.","{'title': '4.', 'number': '5'}"
"In cases where the mapping between a source and target phrase is unclear (for example, one of the phrases might be an idiom), then the most reasonable choice of hierarchical alignment may be for f and f to link the heads of the phrases only, all the other words being mapped to e, with no constraints on the monolingual head mappings h and g. (This is the approach we take to compound lexical pairings, discussed in Section 4.4.)","{'title': '4.', 'number': '5'}"
"In the hierarchical alignments produced by the training method described here, the source and target strings of a bitext are decomposed into three aligned regions, as shown in Figure 7: a head region consisting of headword w in the source and its corresponding target f(w) in the target string, a left substring region consisting of the source substring to the left of w and its projection under f on the target string, and a right substring region consisting of the source substring to the right of w and its projection under f on the target string.","{'title': '4.', 'number': '5'}"
"The decomposition is recursive in that the left substring region is decomposed around a left headword w1, and the right substring region is decomposed around a right headword w„ This process of decomposition continues for each left and right substring until it only contains a single word.","{'title': '4.', 'number': '5'}"
"For each bitext there are, in general, multiple such recursive decompositions that satisfy the synchronization constraints for hierarchical alignments.","{'title': '4.', 'number': '5'}"
We wish to find such an alignment that respects the co-occurrence statistics of bitexts as well as the phrasal structure implicit in the source and target strings.,"{'title': '4.', 'number': '5'}"
For this purpose we define a cost function on hierarchical alignments.,"{'title': '4.', 'number': '5'}"
The cost function is the sum of three terms.,"{'title': '4.', 'number': '5'}"
"The first term is the total of all the translation pairing costs c(w,f (w)) of each source word w and its translation f (w) in the alignment; the second term is proportional to the distance in the source string between dependents wd and their heads g(wd); and the third term is proportional to the distance in the target string between target dependent words vd and their heads h(vd).","{'title': '4.', 'number': '5'}"
The hierarchical alignment that minimizes this cost function is computed using a dynamic programming procedure.,"{'title': '4.', 'number': '5'}"
"In this procedure, the pairing costs are first retrieved for each possible source-target pair allowed by the example.","{'title': '4.', 'number': '5'}"
Adjacent source substrings are then combined to determine the lowest-cost subalignments for successively larger substrings of the bitext satisfying the constraints stated above.,"{'title': '4.', 'number': '5'}"
"The successively larger substrings eventually span the entire source string, yielding the optimal hierarchical alignment for the bitext.","{'title': '4.', 'number': '5'}"
This procedure has 0(n6) complexity in the number of words in the source (or target) sentence.,"{'title': '4.', 'number': '5'}"
"In Alshawi and Douglas (2000) we describe a version of the alignment algorithm in which heads may have an arbitrary number of dependents, and in which the hierarchical alignments for the training corpus are refined by iterative reestimation.","{'title': '4.', 'number': '5'}"
Building a head transducer involves creating appropriate head transducer states and tracing hypothesized head transducer transitions between them that are consistent with the hierarchical alignment of a bitext.,"{'title': '4.', 'number': '5'}"
"The main transitions that are traced in our construction are those that map heads, w1 and w„ of the right and left dependent phrases of w to their translations as indicated by the alignment function f in the hierarchical alignment.","{'title': '4.', 'number': '5'}"
The positions of the dependents in the target string are computed by comparing the positions of f (wi) and f (wr) to the position of v = f (w).,"{'title': '4.', 'number': '5'}"
"In order to generalize from instances in the training data, some model states arising from different training instances are shared.","{'title': '4.', 'number': '5'}"
"In particular, in the construction described here, for a given pair (w, v) there is only one final state.","{'title': '4.', 'number': '5'}"
"(We have also tried using automatic word-clustering techniques to merge states further, but for the limited domain corpora we have used so far, the results are inconclusive.)","{'title': '4.', 'number': '5'}"
To specify States and transitions constructed for the &quot;swapping&quot; decomposition shown in Figure 7. the sharing of states we make use of a one-to-one state-naming function a- from sequences of strings to transducer states.,"{'title': '4.', 'number': '5'}"
"The same state-naming function is used for all examples in the data set, ensuring that the transducer fragments recorded for the entire data set will form a complete collection of head transducer transition networks.","{'title': '4.', 'number': '5'}"
"Figure 7 shows a decomposition in which w has a dependent to either side, v has both dependents to the right, and the alignment is &quot;swapping&quot; (f(wi) is to the right of f (wr)).","{'title': '4.', 'number': '5'}"
"The construction for this decomposition case is illustrated in Figure 8 as part of a finite-state transition diagram, and described in more detail below.","{'title': '4.', 'number': '5'}"
"(The other transition arrows shown in the diagram will arise from other bitext alignments containing (w, f (w)) pairings.)","{'title': '4.', 'number': '5'}"
"Other cases covered by our algorithm (e.g., a single left source dependent but no right source dependent, or target dependents on either side of the target head) are simple variants.","{'title': '4.', 'number': '5'}"
"The detailed construction is as follows: If instead the alignment had been as in Figure 9, in which the source dependents are mapped to target dependents in a parallel rather than swapping configuration (the configuration of sin escalas and Boston around flights:los vuelos in Figure 6), the construction is the same, except for the following differences: Other states are the same as for the first case.","{'title': '4.', 'number': '5'}"
The resulting states and transitions are shown in Figure 10.,"{'title': '4.', 'number': '5'}"
"After the construction described above is applied to the entire set of aligned hitexts in the training set, the counts for transitions are treated as event observation counts of a statistical dependency transduction model with the parameters described in Section 3.1.","{'title': '4.', 'number': '5'}"
"More specifically, the negated logs of these parameters are used as the weights for transducer transitions.","{'title': '4.', 'number': '5'}"
"In the translation application, source word w and target word v are generalized so they can be short substrings (compounds) of the source and target strings.","{'title': '4.', 'number': '5'}"
Examples of such multiword pairs are show me:muestreme and nonstop:sin escalas in Figure 6.,"{'title': '4.', 'number': '5'}"
"The cost for such pairings still uses the same 0 statistic, now taking the observations to be the co-occurrences of the substrings in the training bitexts.","{'title': '4.', 'number': '5'}"
"However, in order that these costs can be comparable to the costs for simple pairings, they are multiplied by the number of words in the source substring of the pairing.","{'title': '4.', 'number': '5'}"
"The use of compounds in pairings does not require any fundamental changes to the hierarchical alignment dynamic programming algorithm, which simply produces dependency trees with nodes that may be compounds.","{'title': '4.', 'number': '5'}"
"In the transducer construction phase of the training method, one of the words of a compound is taken to be the primary or &quot;real&quot; headword.","{'title': '4.', 'number': '5'}"
"(In fact, we take the least common word of a compound to be its head.)","{'title': '4.', 'number': '5'}"
"An extra chain of transitions is constructed to transduce the other words of compounds, if necessary using transitions with epsilon strings.","{'title': '4.', 'number': '5'}"
"This compilation means that the transduction algorithm is unaffected by the use of compounds when aligning training data, and there is no need for a separate compound identification phase when the transduction algorithm is applied to test data.","{'title': '4.', 'number': '5'}"
"Some results for different choices of substring lengths can be found in Alshawi, Bangalore, and Douglas (1998).","{'title': '4.', 'number': '5'}"
"In order to reduce the time required to carry out training evaluation experiments, we have chosen two simple, string-based evaluation metrics that can be calculated automatically.","{'title': '5.', 'number': '6'}"
"These metrics, simple accuracy and translation accuracy, are used to compare the target string produced by the system against a reference human translation from held-out data.","{'title': '5.', 'number': '6'}"
"Simple accuracy is computed by first finding a transformation of one string into another that minimizes the total weight of insertions, deletions, and substitutions.","{'title': '5.', 'number': '6'}"
(We use the same weights for these operations as in the NIST ASR evaluation software [National Institute of Standards and Technology 1997].),"{'title': '5.', 'number': '6'}"
"Translation accuracy includes transpositions (i.e., movement) of words as well as insertions, deletions, and substitutions.","{'title': '5.', 'number': '6'}"
We regard the latter metric as more appropriate for evaluation of translation systems because the simple metric would count a transposition as two errors: an insertion plus a deletion.,"{'title': '5.', 'number': '6'}"
(This issue does not arise for speech recognizers because these systems do not normally make transposition errors.),"{'title': '5.', 'number': '6'}"
"For the lowest edit-distance transformation between the reference translation and system output, if we write I for the number of insertions, D for deletions, S for substitutions, and R for number of words in the reference translation string, we can express simple accuracy as simple accuracy = 1 — (/ + D + S)/R.","{'title': '5.', 'number': '6'}"
"Similarly, if T is the number of transpositions in the lowest weight transformation including transpositions, we can express translation accuracy as translation accuracy = 1 — (/' + D' + S + T)/R.","{'title': '5.', 'number': '6'}"
"Since a transposition corresponds to an insertion and a deletion, the values of I' and D' for translation accuracy will, in general, be different from I and D in the computation of simple accuracy.","{'title': '5.', 'number': '6'}"
"For Spanish, the units for string operations in the evaluation metrics are words, whereas for Japanese they are Japanese characters.","{'title': '5.', 'number': '6'}"
The training and test data for the English-to-Spanish experiments were taken from a set of transcribed utterances from the Air Travel Information System (ATIS) corpus together with a translation of each utterance to Spanish.,"{'title': '5.', 'number': '6'}"
An utterance is typically a single sentence but is sometimes more than one sentence spoken in sequence.,"{'title': '5.', 'number': '6'}"
"Alignment search and transduction training was carried out only on bitexts with sentences up to length 20, a total of 13,966 training bitexts.","{'title': '5.', 'number': '6'}"
"The test set consisted of 1,185 held-out bitexts at all lengths.","{'title': '5.', 'number': '6'}"
"Table 1 shows the word accuracy percentages (see Section 5.1) for the trained model, e2s, against the original held-out translations at various source sentence lengths.","{'title': '5.', 'number': '6'}"
"Scores are also given for a &quot;word-for-word&quot; baseline, sww, in which each English word is translated by the most highly correlated Spanish word.","{'title': '5.', 'number': '6'}"
The training and test data for the English-to-Japanese experiments was a set of transcribed utterances of telephone service customers talking to AT&T operators.,"{'title': '5.', 'number': '6'}"
"These utterances, collected from real customer-operator interactions, tend to include fragmented language, restarts, etc.","{'title': '5.', 'number': '6'}"
"Both training and test partitions were restricted to bitexts with at most 20 English words, giving 12,226 training bitexts and 3,253 held-out test bitexts.","{'title': '5.', 'number': '6'}"
"In the Japanese text, we introduce &quot;word&quot; boundaries that are convenient Length < 5 < 10 < 15 < 20 All jww 75.8/78.0 45.2/50.4 40.0/45.4 37.2/42.8 37.2/42.8 e2j 89.2/89.7 74.0/76.6 68.6/72.2 66.4/70.1 66.4/70.1 for the training process.","{'title': '5.', 'number': '6'}"
These word boundaries are parasitic on the word boundaries in the English transcriptions: the translators are asked to insert such a word boundary between any two Japanese characters that are taken to have arisen from the translation of distinct English words.,"{'title': '5.', 'number': '6'}"
This results in bitexts in which the number of multicharacter Japanese &quot;words&quot; is at most the number of English words.,"{'title': '5.', 'number': '6'}"
"However, as noted above, evaluation of the Japanese output is done with Japanese characters, i.e., with the Japanese text in its natural format.","{'title': '5.', 'number': '6'}"
"Table 2 shows the Japanese character accuracy percentages for the trained English-to-Japanese model, e2j, and a baseline model, jww, which gives each English word its most highly correlated translation.","{'title': '5.', 'number': '6'}"
The vocabularies in these English-Spanish and English-Japanese experiments are only a few thousand words; the utterances are fairly short (an average of 7.3 words per utterance) and often contain errors typical of spoken language.,"{'title': '5.', 'number': '6'}"
"So while the domains may be representative of task-oriented dialogue settings, further experimentation would be needed to assess the effectiveness of our method in situations such as translating newspaper articles.","{'title': '5.', 'number': '6'}"
"In terms of the training data required, Tsukada et al. (1999) provide indirect empirical evidence suggesting accuracy can be further improved by increasing the size of our training sets, though also suggesting that the learning curve is relatively shallow beyond the current size of corpus.","{'title': '5.', 'number': '6'}"
"Formalisms for finite-state and context-free transduction have a long history (e.g., Lewis and Stearns 1968; Aho and Ullman 1972), and such formalisms have been applied to the machine translation problem, both in the finite-state case (e.g., Vilar et al. 1996) and the context-free case (e.g., Wu 1997).","{'title': '6.', 'number': '7'}"
In this paper we have added to this line of research by providing a method for automatically constructing fully lexicalized statistical dependency transduction models from training examples.,"{'title': '6.', 'number': '7'}"
"Automatically training a translation system brings important benefits in terms of maintainability, robustness, and reducing expert coding effort as compared with traditional rule-based translation systems (a number of which are described in Hutchins and Somers [1992]).","{'title': '6.', 'number': '7'}"
"The reduction of effort results, in large part, from being able to do without artificial intermediate representations of meaning; we do not require the development of semantic mapping rules (or indeed any rules) or the creation of a corpus including semantic annotations.","{'title': '6.', 'number': '7'}"
"Compared with left-to-right transduction, middle-out transduction also aids robustness because, when complete derivations are not available, partial derivations tend to have meaningful headwords.","{'title': '6.', 'number': '7'}"
"At the same time, we believe our method has advantages over the approach developed initially at IBM (Brown et al. 1990; Brown et al.","{'title': '6.', 'number': '7'}"
1993) for training translation systems automatically.,"{'title': '6.', 'number': '7'}"
One advantage is that our method attempts to model the natural decomposition of sentences into phrases.,"{'title': '6.', 'number': '7'}"
Another is that the compilation of this decomposition into lexically anchored finite-state head transducers produces implementations that are much more efficient than those for the IBM model.,"{'title': '6.', 'number': '7'}"
"In particular, our search algorithm finds optimal transductions of test sentences in less than &quot;real time&quot; on a 300MHz processor, that is, the time to translate an utterance is less than the time taken to speak it, an important consideration for our speech translation application.","{'title': '6.', 'number': '7'}"
