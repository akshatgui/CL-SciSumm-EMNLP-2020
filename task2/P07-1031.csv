col1,col2
The Penn Treebank does not annotate base noun phrases committing only to flat structures that ignore the of English This means that tools trained on Treebank data cannot the correct internal structure of This paper details the process of adding gold-standard bracketing within each noun phrase in the Penn Treebank.,Introduction
We then examine the consistency and reliability of our annotations.,Introduction
"Finally, we use resource to determine using several statistical approaches, thus demonstrating the utility of the corpus.",Introduction
This adds detail to the Penn Treebank that necessary for many,Introduction
"The Penn Treebank (Marcus et al., 1993) is perhaps the most influential resource in Natural Language Processing (NLP).",Experiment/Discussion
"It is used as a standard training and evaluation corpus in many syntactic analysis tasks, ranging from part of speech (POS) tagging and chunking, to full parsing.",Experiment/Discussion
"Unfortunately, the Penn Treebank does not annotate the internal structure of base noun phrases, instead leaving them flat.",Experiment/Discussion
This significantly simplified and sped up the manual annotation process.,Experiment/Discussion
"Therefore, any system trained on Penn Treebank data will be unable to model the syntactic and semantic structure inside base-NPs.",Experiment/Discussion
The following NP is an example of the flat structure of base-NPs within the Penn Treebank:,Experiment/Discussion
"Air Force is a specific entity and should form a separate constituent underneath the NP, as in our new annotation scheme: We use NML to specify that Air Force together is a nominal modifier of contract.",Experiment/Discussion
"Adding this annotation better represents the true syntactic and semantic structure, which will improve the performance of downstream NLP systems.",Experiment/Discussion
Our main contribution is a gold-standard labelled bracketing for every ambiguous noun phrase in the Penn Treebank.,Experiment/Discussion
"We describe the annotation guidelines and process, including the use of named entity data to improve annotation quality.",Experiment/Discussion
"We check the correctness of the corpus by measuring interannotator agreement, by reannotating the first section, and by comparing against the sub-NP structure in DepBank (King et al., 2003).",Experiment/Discussion
"We also give an analysis of our extended Treebank, quantifying how much structure we have added, and how it is distributed across NPs.",Experiment/Discussion
"Finally, we test the utility of the extended Treebank for training statistical models on two tasks: NP bracketing (Lauer, 1995; Nakov and Hearst, 2005) and full parsing (Collins, 1999).",Experiment/Discussion
"This new resource will allow any system or annotated corpus developed from the Penn Treebank, to represent noun phrase structure more accurately.",Experiment/Discussion
"Many approaches to identifying base noun phrases have been explored as part of chunking (Ramshaw and Marcus, 1995), but determining sub-NP structure is rarely addressed.",Experiment/Discussion
We could use multi-word expressions (MWEs) to identify some structure.,Experiment/Discussion
"For example, knowing stock market is a MWE may help bracket stock market prices correctly, and Named Entities (NEs) can be used the same way.",Experiment/Discussion
"However, this only resolves NPs dominating MWEs or NEs.",Experiment/Discussion
"Understanding base-NP structure is important, since otherwise parsers will propose nonsensical noun phrases like Force contract by default and pass them onto downstream components.",Experiment/Discussion
"For example, Question Answering (QA) systems need to supply an NP as the answer to a factoid question, often using a parser to identify candidate NPs to return to the user.",Experiment/Discussion
"If the parser never generates the correct sub-NP structure, then the system may return a nonsensical answer even though the correct dominating noun phrase has been found.",Experiment/Discussion
Base-NP structure is also important for annotated data derived from the Penn Treebank.,Experiment/Discussion
"For instance, CCGbank (Hockenmaier, 2003) was created by semi-automatically converting the Treebank phrase structure to Combinatory Categorial Grammar (CCG) (Steedman, 2000) derivations.",Experiment/Discussion
"Since CCG derivations are binary branching, they cannot directly represent the flat structure of the Penn Treebank base-NPs.",Experiment/Discussion
"Without the correct bracketing in the Treebank, strictly right-branching trees were created for all base-NPs.",Experiment/Discussion
This has an unwelcome effect when conjunctions occur within an NP (Figure 1).,Experiment/Discussion
"An additional grammar rule is needed just to get a parse, but it is still not correct (Hockenmaier, 2003, p. 64).",Experiment/Discussion
The awkward conversion results in bracketing (a) which should be (b): We have previously experimented with using NEs to improve parsing performance on CCGbank.,Experiment/Discussion
"Due to the mis-alignment of NEs and right-branching NPs, the increase in performance was negligible.",Experiment/Discussion
"The NP bracketing task has often been posed in terms of choosing between the left or right branching structure of three word noun compounds: Most approaches to the problem use unsupervised methods, based on competing association strength between two of the words in the compound (Marcus, 1980, p. 253).",Experiment/Discussion
There are two possible models to choose from: dependency or adjacency.,Experiment/Discussion
"The dependency model compares the association between words 1-2 to words 1-3, while the adjacency model compares words 1-2 to words 2-3.",Experiment/Discussion
Lauer (1995) has demonstrated superior performance of the dependency model using a test set of 244 (216 unique) noun compounds drawn from Grolier’s encyclopedia.,Experiment/Discussion
This data has been used to evaluate most research since.,Experiment/Discussion
"He uses Roget’s thesaurus to smooth words into semantic classes, and then calculates association between classes based on their counts in a “training set” also drawn from Grolier’s.",Experiment/Discussion
He achieves 80.7% accuracy using POS tags to indentify bigrams in the training set.,Experiment/Discussion
"Lapata and Keller (2004) derive estimates from web counts, and only compare at a lexical level, achieving 78.7% accuracy.",Experiment/Discussion
"Nakov and Hearst (2005) also use web counts, but incorporate additional counts from several variations on simple bigram queries, including queries for the pairs of words concatenated or joined by a hyphen.",Experiment/Discussion
This results in an impressive 89.3% accuracy.,Experiment/Discussion
"There have also been attempts to solve this task using supervised methods, even though the lack of gold-standard data makes this difficult.",Experiment/Discussion
Girju et al. (2005) draw a training set from raw WSJ text and use it to train a decision tree classifier achieving 73.1% accuracy.,Experiment/Discussion
"When they shuffled their data with Lauer’s to create a new test and training split, their accuracy increased to 83.1% which may be a result of the 10% duplication in Lauer’s test set.",Experiment/Discussion
We have created a new NP bracketing data set from our extended Treebank by extracting all rightmost three noun sequences from base-NPs.,Experiment/Discussion
Our initial experiments are presented in Section 6.1.,Experiment/Discussion
"According to Marcus et al. (1993), asking annotators to markup base-NP structure significantly reduced annotation speed, and for this reason baseNPs were left flat.",Experiment/Discussion
"The bracketing guidelines (Bies et al., 1995) also mention the considerable difficulty of identifying the correct scope for nominal modifiers.",Experiment/Discussion
"We found however, that while there are certainly difficult cases, the vast majority are quite simple and can be annotated reliably.",Experiment/Discussion
Our annotation philosophy can be summarised as: During this process we identified numerous cases that require a more sophisticated annotation scheme.,Experiment/Discussion
"There are genuine flat cases, primarily names like John A. Smith, that we would like to distinguish from implicitly right-branching NPs in the next version of the corpus.",Experiment/Discussion
"Although our scheme is still developing, we believe that the current annotation is already useful for statistical modelling, and we demonstrate this empirically in Section 6.",Experiment/Discussion
"Our annotation guidelines) are based on those developed for annotating full sub-NP structure in the biomedical domain (Kulick et al., 2004).",Experiment/Discussion
The annotation guidelines for this biomedical corpus (an addendum to the Penn Treebank guidelines) introduce the use of NML nodes to mark internal NP structure.,Experiment/Discussion
"In summary, our guidelines leave right-branching structures untouched, and insert labelled brackets around left-branching structures.",Experiment/Discussion
"The label of the newly created constituent is NML or JJP, depending on whether its head is a noun or an adjective.",Experiment/Discussion
"We also chose not to alter the existing Penn Treebank annotation, even though the annotators found many errors during the annotation process.",Experiment/Discussion
"We wanted to keep our extended Treebank as similar to the original as possible, so that they remain comparable.",Experiment/Discussion
"We developed a bracketing tool, which identifies ambiguous NPs and presents them to the user for disambiguation.",Experiment/Discussion
An ambiguous NP is any (possibly non-base) NP with three or more contiguous children that are either single words or another NP.,Experiment/Discussion
"Certain common patterns, such as three words beginning with a determiner, are unambiguous, and were filtered out.",Experiment/Discussion
The annotator is also shown the entire sentence surrounding the ambiguous NP.,Experiment/Discussion
"The bracketing tool often suggests a bracketing using rules based mostly on named entity tags, which are drawn from the BBN corpus (Weischedel and Brunstein, 2005).",Experiment/Discussion
"For example, since Air Force is given ORG tags, the tool suggests that they be bracketed together first.",Experiment/Discussion
"Other suggestions come from previous bracketings of the same words, which helps to keep the annotator consistent.",Experiment/Discussion
Two post processes were carried out to increase annotation consistency and correctness.,Experiment/Discussion
915 difficult NPs were marked by the annotator and were then discussed with two other experts.,Experiment/Discussion
"Secondly, certain phrases that occurred numerous times and were non-trivial to bracket, e.g.",Experiment/Discussion
"London Interbank Offered Rate, were identified.",Experiment/Discussion
"An extra pass was made through the corpus, ensuring that every instance of these phrases was bracketed consistently.",Experiment/Discussion
Annotation initially took over 9 hours per section of the Treebank.,Experiment/Discussion
"However, with practice this was reduced to about 3 hours per section.",Experiment/Discussion
"Each section contains around 2500 ambiguous NPs, i.e. annotating took approximately 5 seconds per NP.",Experiment/Discussion
"Most NPs require no bracketing, or fit into a standard pattern which the annotator soon becomes accustomed to, hence the task can be performed quite quickly.",Experiment/Discussion
"For the original bracketing of the Treebank, annotators performed at 375–475 words per hour after a few weeks, and increased to about 1000 words per hour after gaining more experience (Marcus et al., 1993).",Experiment/Discussion
"For our annotation process, counting each word in every NP shown, our speed was around 800 words per hour.",Experiment/Discussion
"This figure is not unexpected, as the task was not large enough to get more than a month’s experience, and there is less structure to annotate.",Experiment/Discussion
The annotation was performed by the first author.,Results/Conclusion
"A second Computational Linguistics PhD student also annotated Section 23, allowing inter-annotator agreement, and the reliability of the annotations, to be measured.",Results/Conclusion
This also maximised the quality of the section used for parser testing.,Results/Conclusion
"We measured the proportion of matching brackets and dependencies between annotators, shown in Table 1, both before and after they discussed cases of disagreement and revised their annotations.",Results/Conclusion
"The number of dependencies is fixed by the length of the NP, so the dependency precision and recall are the same.",Results/Conclusion
"Counting matched brackets is a harsher evaluation, as there are many NPs that both annotators agree should have no additional bracketing, which are not taken into account by the metric.",Results/Conclusion
"The disagreements occurred for a small number of repeated instances, such as this case: The first annotator felt that Goldman , Sachs should form their own NML constituent, while the second annotator did not.",Results/Conclusion
"We can also look at exact matching on NPs, where the annotators originally agreed in 2667 of 2908 cases (91.71%), and after revision, in 2864 of 2907 cases (98.52%).",Results/Conclusion
These results demonstrate that high agreement rates are achievable for these annotations.,Results/Conclusion
Another approach to measuring annotator reliability is to compare with an independently annotated corpus on the same text.,Results/Conclusion
"We used the PARC700 Dependency Bank (King et al., 2003) which consists of 700 Section 23 sentences annotated with labelled dependencies.",Results/Conclusion
"We use the Briscoe and Carroll (2006) version of DepBank, a 560 sentence subset used to evaluate the RASP parser.",Results/Conclusion
Some translation is required to compare our brackets to DepBank dependencies.,Results/Conclusion
"We map the brackets to dependencies by finding the head of the NP, using the Collins (1999) head finding rules, and then creating a dependency between each other child’s head and this head.",Results/Conclusion
"This does not work perfectly, and mismatches occur because of which dependencies DepBank marks explicitly, and how it chooses heads.",Results/Conclusion
The errors are investigated manually to determine their cause.,Results/Conclusion
"The results are shown in Table 2, with the number of agreements before manual checking shown in parentheses.",Results/Conclusion
Once again the dependency numbers are higher than those at the NP level.,Results/Conclusion
"Similarly, when we only look at cases where we have inserted some annotations, we are looking at more difficult cases and the score is not as high.",Results/Conclusion
The results of this analysis are quite positive.,Results/Conclusion
Over half of the disagreements that occur (in either measure) are caused by how company names are bracketed.,Results/Conclusion
"While we have always separated the company name from post-modifiers such as Corp and Inc, DepBank does not in most cases.",Results/Conclusion
"These results show that consistently and correctly bracketing noun phrase structure is possible, and that interannotator agreement is at an acceptable level.",Results/Conclusion
"Looking at the entire Penn Treebank corpus, the annotation tool finds 60959 ambiguous NPs out of the 432639 NPs in the corpus (14.09%).",Results/Conclusion
22851 of these (37.49%) had brackets inserted by the annotator.,Results/Conclusion
"This is as we expect, as the majority of NPs are right-branching.",Results/Conclusion
"Of the brackets added, 22368 were NML nodes, while 863 were JJP.",Results/Conclusion
"To compare, we can count the number of existing NP and ADJP nodes found in the NPs that the bracketing tool presents.",Results/Conclusion
"We find there are 32772 NP children, and 579 ADJP, which are quite similar numbers to the amount of nodes we have added.",Results/Conclusion
"From this, we can say that our annotation process has introduced almost as much structural information into NPs as there was in the original Penn Treebank.",Results/Conclusion
"Table 3 shows the most common POS tag sequences for NP, NML and JJP nodes.",Results/Conclusion
An example is given showing typical words that match the POS tags.,Results/Conclusion
"For NML and JJP, we also show the words bracketed, as they would appear under an NP node.",Results/Conclusion
We checked the consistency of the annotations by identifying NPs with the same word sequence and checking whether they were always bracketed identically.,Results/Conclusion
"After the first pass through, there were 360 word sequences with multiple bracketings, which occurred in 1923 NP instances.",Results/Conclusion
"489 of these instances differed from the majority case for that sequence, and were probably errors.",Results/Conclusion
The annotator had marked certain difficult and commonly repeating NPs.,Results/Conclusion
"From this we generated a list of phrases, and then made another pass through the corpus, synchronising all instances that contained one of these phrases.",Results/Conclusion
"After this, only 150 instances differed from the majority case.",Results/Conclusion
Inspecting these remaining inconsistencies showed cases like: where we were inconsistent in inserting the NML node because the Penn Treebank sometimes already has the structure annotated under an NP node.,Results/Conclusion
"Since we do not make changes to existing brackets, we cannot fix these cases.",Results/Conclusion
"Other inconsistencies are rare, but will be examined and corrected in a future release.",Results/Conclusion
The annotator made a second pass over Section 00 to correct changes made after the beginning of the annotation process.,Results/Conclusion
Comparing the two passes can give us some idea of how the annotator changed as he grew more practiced at the task.,Results/Conclusion
"We find that the old and new versions are identical in 88.65% of NPs, with labelled precision, recall and F-score being 97.17%, 76.69% and 85.72% respectively.",Results/Conclusion
This tells us that there were many brackets originally missed that were added in the second pass.,Results/Conclusion
This is not surprising since the main problem with how Section 00 was annotated originally was that company names were not separated from their post-modifier (such as Corp).,Results/Conclusion
"Besides this, it suggests that there is not a great deal of difference between an annotator just learning the task, and one who has had a great deal of experience with it.",Results/Conclusion
We have also evaluated how well the suggestion feature of the annotation tool performs.,Results/Conclusion
"In particular, we want to determine how useful named entities are in determining the correct bracketing.",Results/Conclusion
"We ran the tool over the original corpus, following NE-based suggestions where possible.",Results/Conclusion
"We find that when evaluated against our annotations, the Fscore is 50.71%.",Results/Conclusion
"We need to look closer at the precision and recall though, as they are quite different.",Results/Conclusion
The precision of 93.84% is quite high.,Results/Conclusion
"However, there are many brackets where the entities do not help at all, and so the recall of this method was only 34.74%.",Results/Conclusion
This suggests that a NE feature may help to identify the correct bracketing in one third of cases.,Results/Conclusion
"Having bracketed NPs in the Penn Treebank, we now describe our initial experiments on how this additional level of annotation can be exploited.",Results/Conclusion
The obvious first task to consider is noun phrase bracketing itself.,Results/Conclusion
"We implement a similar system to Lauer (1995), described in Section 3, and report on results from our own data and Lauer’s original set.",Results/Conclusion
"First, we extracted three word noun sequences from all the ambiguous NPs.",Results/Conclusion
"If the last three children are nouns, then they became an example in our data set.",Results/Conclusion
"If there is a NML node containing the first two nouns then it is left-branching, otherwise it is right-branching.",Results/Conclusion
"Because we are only looking at the right-most part of the NP, we know that we are not extracting any nonsensical items.",Results/Conclusion
We also remove all items where the nouns are all part of a named entity to eliminate flat structure cases.,Results/Conclusion
Statistics about the new data set and Lauer’s data set are given in Table 4.,Results/Conclusion
"As can be seen, the Penn Treebank based corpus is significantly larger, and has a more even mix of left and right-branching noun phrases.",Results/Conclusion
"We also measured the amount of lexical overlap between the two corpora, shown in Table 5.",Results/Conclusion
This displays the percentage of n-grams in Lauer’s corpus that are also in our corpus.,Results/Conclusion
"We can clearly see that the two corpora are quite dissimilar, as even on unigrams barely half are shared.",Results/Conclusion
"With our new data set, we began running experiments similar to those carried out in the literature (Nakov and Hearst, 2005).",Results/Conclusion
"We implemented both an adjacency and dependency model, and three different association measures: raw counts, bigram probability, and .",Results/Conclusion
"We draw our counts from a corpus of n-gram counts calculated over 1 trillion words from the web (Brants and Franz, 2006).",Results/Conclusion
"The results from the experiments, on both our and Lauer’s data set, are shown in Table 6.",Results/Conclusion
"Our results on Lauer’s corpus are similar to those reported previously, with the dependency model outperforming the adjacency model on all measures.",Results/Conclusion
"The bigram probability scores highest out of all the measures, while the score performed the worst.",Results/Conclusion
"The results on the new corpus are even more surprising, with the adjacency model outperforming the dependency model by a wide margin.",Results/Conclusion
"The measure gives the highest accuracy, but still only just outperforms the raw counts.",Results/Conclusion
Our analysis shows that the good performance of the adjacency model comes from the large number of named entities in the corpus.,Results/Conclusion
"When we remove all items that have any word as an entity, the results change, and the dependency model is superior.",Results/Conclusion
We also suspect that another cause of the unusual results is the different proportions of left and right-branching NPs.,Results/Conclusion
"With a large annotated corpus, we can now run supervised NP bracketing experiments.",Results/Conclusion
We present two configurations in Table 7: training on our corpus and testing on Lauer’s set; and performing 10-fold cross validation using our corpus alone.,Results/Conclusion
The feature set we explore encodes the information we used in the unsupervised experiments.,Results/Conclusion
"Table 7 shows the performance with: all features, followed by the individual features, and finally, after removing individual features.",Results/Conclusion
"The feature set includes: lexical features for each n-gram in the noun compound; n-gram counts for unigrams, bigrams and trigrams; raw probability and association scores for all three bigrams in the compound; and the adjacency and dependency results for all three association measures.",Results/Conclusion
"We discretised the non-binary features using an implementation of Fayyad and Irani’s (1993) algorithm, and classify using MegaM2.",Results/Conclusion
The results on Lauer’s set demonstrate that the dependency model performs well by itself but not with the other features.,Results/Conclusion
"In fact, a better result comes from using every feature except those from the dependency and adjacency models.",Results/Conclusion
"It is also impressive how good the performance is, considering the large differences between our data set and Lauer’s.",Results/Conclusion
These differences also account for the disparate cross-validation figures.,Results/Conclusion
"On this data, the lexical features perform the best, which is to be expected given the nature of the corpus.",Results/Conclusion
The best model in this case comes from using all the features.,Results/Conclusion
We can also look at the impact of our new annotations upon full statistical parsing.,Results/Conclusion
"We use Bikel’s implementation (Bikel, 2004) of Collins’ parser (Collins, 1999) in order to carry out these experiments, using the non-deficient Collins settings.",Results/Conclusion
"The numbers we give are labelled bracket precision, recall and F-scores for all sentences.",Results/Conclusion
"Bikel mentions that base-NPs are treated very differently in Collins’ parser, and so it will be interesting to observe the results using our new annotations.",Results/Conclusion
"Firstly, we compare the parser’s performance on the original Penn Treebank and the new NML and JJP bracketed version.",Results/Conclusion
Table 8 shows that the new brackets make parsing marginally more difficult overall (by about 0.5% in F-score).,Results/Conclusion
The performance on only the new NML and JJP brackets is not very high.,Results/Conclusion
This shows the difficulty of correctly bracketing NPs.,Results/Conclusion
"Conversely, the figures for all brackets except NML and JJP are only a tiny amount less in our extended corpus.",Results/Conclusion
This means that performance for other phrases is hardly changed by the new NP brackets.,Results/Conclusion
We also ran an experiment where the new NML and JJP labels were relabelled as NP and AnJP.,Results/Conclusion
These are the labels that would be given if NPs were originally bracketed with the rest of the Penn Treebank.,Results/Conclusion
This meant the model would not have to discriminate between two different types of noun and adjective structure.,Results/Conclusion
"The performance, as shown in Table 8, was even lower with this approach, suggesting that the distinction is larger than we anticipated.",Results/Conclusion
"On the other hand, the precision on NML and JJP constituents was quite high, so the parser is able to identify at least some of the structure very well.",Results/Conclusion
