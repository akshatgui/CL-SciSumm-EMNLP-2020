col1,col2
The paper discusses the linguistic aspects of a new general purpose facility for computing with features.,{}
The program was developed in connection with the course I taught at the University of Texas in the fall of 1983.,{}
It is a generalized and expanded version of a system that Stuart Shieber originally designed for the PATR-II project at SRI in the spring of 1983 with later modifications by Fernando Pereira and me.,{}
"Like its predecessors, the new Texas version of the &quot;DG (directed graph)&quot; package is primarily intended for representing morphological and syntactic information but it may turn out to be very useful for semantic representa",{}
"Most schools of linguistics use some type of feature notation in their phonological, morphological, syntactic, and semantic descriptions.","{'title': '1.', 'number': '1'}"
"Although the objects that appear in rules and conditions may have atomic names, such as &quot;k,&quot; &quot;NP,&quot; &quot;Subject,&quot; and the like, such high-level terms typically stand for collections of features.","{'title': '1.', 'number': '1'}"
"Features, in this sense of the word, are usually thought of as attribute-value pairs: [person: 1st], [number: sg], although singleton features are also admitted in some theories.","{'title': '1.', 'number': '1'}"
The values of phonological and morphological features are traditionally atomic; e.g.,"{'title': '1.', 'number': '1'}"
"1st, 2nd, 3rd; they are often binary: +, Most current theories also allow features that have complex values.","{'title': '1.', 'number': '1'}"
"A complex value is a collection of features, for example:","{'title': '1.', 'number': '1'}"
"number person 3rd In graphs of this sort, values are reached by traversing paths of attribute names.","{'title': '1 . agreement', 'number': '2'}"
We use angle brackets to mark expressions that designate paths.,"{'title': '1 . agreement', 'number': '2'}"
"With that convention, the above graph can also be represented as a set of equations: <agreement number> = sg <agreement person> = 3rd Such equations also provide a convenient way to express conditions on features.","{'title': '1 . agreement', 'number': '2'}"
"This idea lies at the heart of UG, LFG, and the PATR-II grammar for English [Shieber, et al., 831 constructed at SRI.","{'title': '1 . agreement', 'number': '2'}"
"For example, the equation <subject agreement> = <predicate agreement> states that subject and predicate have the same value for agreement.","{'title': '1 . agreement', 'number': '2'}"
"In graph terms, this corresponds to a lattice where two vectors point to the same node: [agreement: [ subj ect 1 predicate person: 3rdn number: sg Lexical Functional Grammar (LFG) [Kaplan and Bres- agreement agreement nan, 831, Unification Grammar (UG) [Kay, 79], General- number person ized Phrase Structure Grammar (GPSG) [Gazdar and Pul- sg 3rd lum, 821, among others, use complex features.","{'title': '1 . agreement', 'number': '2'}"
"Another way to represent feature matrices is to think of them as directed graphs where values correspond to nodes and attributes to vectors: In a case like this, the values of the two paths have been &quot;unified.&quot; To represent unification in terms of feature matrices we need to introduce some new convention to distinguish between identity and mere likeness.","{'title': '1 . agreement', 'number': '2'}"
Even that would not quite suffice because the graph formalism also allows unification of values that have not -yet been assigned.,"{'title': '1 . agreement', 'number': '2'}"
"A third way to .view these structures is to think of them as partial functions that assign values to attributes [Sag et.al., Si].","{'title': '1 . agreement', 'number': '2'}"
"Several related grammar formalisms (UG, LFG, PATHII, and GPS() now exist that are based on a very similar conception of features and use unification as their basic operation.","{'title': '2.', 'number': '3'}"
"Because feature matrices (lattice nodes) are sets of attribute-value pairs, unification is closely related to the operation of forming a union of two sets.","{'title': '2.', 'number': '3'}"
"However, while the latter always yields somethingâ€”at least the null set, unification is an operation that may fail or succeed.","{'title': '2.', 'number': '3'}"
"When it fails, no result. is produced and the operands remain unchanged; when it succeeds, the operands are permanently altered in the process.","{'title': '2.', 'number': '3'}"
They become the same object.,"{'title': '2.', 'number': '3'}"
This is an important characteristic.,"{'title': '2.', 'number': '3'}"
The result of unifying three or more graphs in pairs with one another does not depend on the order in which the operations are performed.,"{'title': '2.', 'number': '3'}"
They all become the same graph at the end.,"{'title': '2.', 'number': '3'}"
"If graphs A and B contain the same attribute but have incompatible values for it, they cannot be unified.","{'title': '2.', 'number': '3'}"
"If A and B are compatible, then (Unify A B) contains every attribute that appears only in A or only in B with the value it has there.","{'title': '2.', 'number': '3'}"
"If some attribute appears both in A and B, then the value of that attribute in (Unify A B) is the unification of the two values.","{'title': '2.', 'number': '3'}"
"For example, = [agreement: [number: pa] Simple cases of grammatical concord, such as number, case and gender agreement between determiners and nouns in many languages, can be expressed straight-forwardly by stating that the values of these features must unify.","{'title': '2.', 'number': '3'}"
Another useful operation on feature matrices is generalization.,"{'title': '2.', 'number': '3'}"
It is closely related to set intersection.,"{'title': '2.', 'number': '3'}"
The generalization of two simple matrices A and B consists of the attribute-value pairs that A and B have in common.,"{'title': '2.', 'number': '3'}"
"If the values themselves are complex, we take the generalization of those values.","{'title': '2.', 'number': '3'}"
"For example, Generalization seems to be a very useful notion for expressing how number and gender agreement works in coordinate noun phrases.","{'title': '2.', 'number': '3'}"
One curious fact about coordination is that conjunction of &quot;I&quot; with &quot;you&quot; or &quot;he&quot; in the subject position typically produces first person verb agreement.,"{'title': '2.', 'number': '3'}"
In sentences like &quot;he and I agree&quot; the verb has the same form as in &quot;we agree.,"{'title': '2.', 'number': '3'}"
"&quot; The morphological equivalence of &quot;he and I,&quot; &quot;you and I,&quot; and &quot;we&quot; is partially obscured in English but very clear in many other languages.","{'title': '2.', 'number': '3'}"
The problem is discussed in Section V below.,"{'title': '2.', 'number': '3'}"
Most current grammar formalisms for features have certain built-in limitations.,"{'title': '3.', 'number': '4'}"
"Three are relevant here: The prohibition against cyclicity rules out structures that contain circular paths, as in the following example.","{'title': '3.', 'number': '4'}"
"Here the path <a b c> folds back onto itself, that is, <a> = <a b c>.","{'title': '3.', 'number': '4'}"
It is not clear whether such descriptions should be ruled out on theoretical grounds.,"{'title': '3.', 'number': '4'}"
"Whatever the case might be, current implementations of LFG, UG, or GPSG with which I am familiar do not support them.","{'title': '3.', 'number': '4'}"
The prohibition against negation makes it impossible to characterize a feature by saying that it does NOT have such and such a value.,"{'title': '3.', 'number': '4'}"
None of the above theories allows specifications such as the following.,"{'title': '3.', 'number': '4'}"
"We use the symbol &quot;-&quot; to mean 'not.' riperson: 3rol number: sg The first statement says that case is &quot;not dative,&quot; the second says that the value of agreement is &quot;anything but 3rd person singular.&quot; Not allowing disjunctive specifications rules out matrices of the following sort.","{'title': '3.', 'number': '4'}"
We indicate disjunction by enclosing the alternative values in {}.,"{'title': '3.', 'number': '4'}"
"The first line describes the value of case as being &quot;either nominative or accusative.&quot; The value for agreement is given as &quot;either feminine singular or plural.&quot; Among the theories mentioned above, only Kay's UG allows disjunctive feature specifications in its formalism.","{'title': '3.', 'number': '4'}"
"(In LFG, disjunctions are allowed in control equations but not in the specification of values.)","{'title': '3.', 'number': '4'}"
"Of the three limitations, the first one may be theoretically justified since it has not been shown that there are phenomena in natural languages that involve circular structures (cf.","{'title': '3.', 'number': '4'}"
"[Kaplan and Bresnan, 831, p. 281).","{'title': '3.', 'number': '4'}"
"PATR-II at SRI and its expanded version at the University of Texas allow such structures for practical reasons because they tend to arise, mostly inadvertently, in the course of grammar construction and testing.","{'title': '3.', 'number': '4'}"
An implementation that does not handle unification correctly in such cases is too fragile to use.,"{'title': '3.', 'number': '4'}"
The other two restrictions are linguistically unmotivated.,"{'title': '3.', 'number': '4'}"
"There are many cases, especially in morphology, in which the most natural feature specifications are negative or disjunctive.","{'title': '3.', 'number': '4'}"
"In fact, the examples given above all represent such cases.","{'title': '3.', 'number': '4'}"
"The first example, [case: -dat], arises in the plural paradigm of words like &quot;Kind&quot; child in German.","{'title': '3.', 'number': '4'}"
"Such words have two forms in the plural: &quot;Kinder&quot; and &quot;Kindern.&quot; The latter is used only in the plural dative, the former in the other three cases (nominative, genitive, accusative).","{'title': '3.', 'number': '4'}"
"If we accept the view that there should be just one rather than three entries for the plural suffix &quot;-er&quot;, we have the choice between [ [ number; pi case: [-oat] The second alternative seems preferrable given the fact that there is, in this particular declension, a clear twoway contrast.","{'title': '3.', 'number': '4'}"
The marked dative is in opposition with an unmarked form representing all the other cases.,"{'title': '3.', 'number': '4'}"
The Aecond example is from English.,"{'title': '3.', 'number': '4'}"
"Although the features &quot;number&quot; and &quot;person&quot; are both clearly needed in English verb morphology, most verbs are very incompletely specified for them.","{'title': '3.', 'number': '4'}"
"In fact, the present tense paradigm of all regular verbs just has two forms of which one represents the 3rd person singular (&quot;walks&quot;) and the other (&quot;walk&quot;) is used for all other persons.","{'title': '3.', 'number': '4'}"
Thus the most natural characterization for &quot;walk&quot; is that it is not 3rd person singular.,"{'title': '3.', 'number': '4'}"
"The alternative is to say, in effect, that &quot;walk&quot; in the present tense has five different interpretations.","{'title': '3.', 'number': '4'}"
The system of articles in German provides many examples that call for disjunctive feature specifications.,"{'title': '3.', 'number': '4'}"
"The article &quot;die,&quot; for example, is used in the nominative and accusative cases of singular feminine nouns and all plural nouns.","{'title': '3.', 'number': '4'}"
The entry given above succinctly encodes exactly this fact.,"{'title': '3.', 'number': '4'}"
There are many cases where disjunctive specifications seem necessary for reasons other than just descriptive elegance.,"{'title': '3.', 'number': '4'}"
"Agreement conditions on conjunctions, for example, typically fail to exclude pairs where differences in case and number are not overtly marked.","{'title': '3.', 'number': '4'}"
"For example, in German [Eisenberg, 73] noun phrases like: des Dozenten (gen sg) the docent's der Dozenten (gen pl) the docents'. can blend as in der Antrag des oder der Dozenten the petition of the docent or docents.","{'title': '3.', 'number': '4'}"
"This is not possible when the noun is overtly marked for number, as in the case of &quot;des Professors&quot; (gen sg) and &quot;der Professoren&quot; (gen pl): *der Antrag des oder der Professors *der Antrag des oder der Professoren the petition of the professor or professors In the light of such cases, it seems reasonable to assume that there is a single form, &quot;Dozenten,&quot; which has a disjunctive feature specification, instead of postulating several fully specified, homonymous lexical entries.","{'title': '3.', 'number': '4'}"
It is obvious that the grammaticality of the example crucially depends on the fact that &quot;Dozenten&quot; is not definitely singular or definitely plural but can be either.,"{'title': '3.', 'number': '4'}"
I sketch here briefly how the basic unification procedure can be modified to admit negative and disjunctive values.,"{'title': '4.', 'number': '5'}"
These ideas have been implemented in the new Texas version of the PATR-II system for features.,"{'title': '4.', 'number': '5'}"
(I am much indebted to Fernando Pereira for his advice on this topic.),"{'title': '4.', 'number': '5'}"
Negative values are created by the following operation.,"{'title': '4.', 'number': '5'}"
"If A and B are distinct, i.e. contain a different value for some feature, then (Negate A B) does nothing to them.","{'title': '4.', 'number': '5'}"
"Otherwise both nodes acquire a &quot;negative constraint.&quot; In effect, A is marked with -B and B with -A.","{'title': '4.', 'number': '5'}"
These constraints prevent the two nodes from ever becoming alike.,"{'title': '4.', 'number': '5'}"
"When A is unified with C, unification succeeds only if the result is distinct from B.","{'title': '4.', 'number': '5'}"
The result of (Unify A C) has to satisfy all the negative constraints of both A and C and it inherits all that could fail in some later unification.,"{'title': '4.', 'number': '5'}"
Disjunction is more complicated.,"{'title': '4.', 'number': '5'}"
"Suppose A, B and C are all simple atomic values.","{'title': '4.', 'number': '5'}"
In this situation C unifies with {A B) just in case it is identical to one or the other of the disjuncts.,"{'title': '4.', 'number': '5'}"
"The result is C. Now suppose that A, B, and C are all complex.","{'title': '4.', 'number': '5'}"
"Furthermore, let us suppose that A and B are distinct but C is compatible with both of them as in the following: What should be the result of (Unify {A B) C)?","{'title': '4.', 'number': '5'}"
"Because A and B are incompatible, we cannot actually unify C with both of them.","{'title': '4.', 'number': '5'}"
That operation would fail.,"{'title': '4.', 'number': '5'}"
"Because there is no basis for choosing one, both alternatives have to be left open.","{'title': '4.', 'number': '5'}"
Nevertheless. we need to take note of the fact that either A or B is to be unified with C. We can do this by making the result a complex disjunction.,"{'title': '4.', 'number': '5'}"
= {(AC) c) .,"{'title': '4.', 'number': '5'}"
"The new value of C, C', is a disjunction of tuples which can be, but. have not yet been unified.","{'title': '4.', 'number': '5'}"
Thus (A C) and (B C) are sets that consist of compatible structures.,"{'title': '4.', 'number': '5'}"
"Furthermore, at least one of the tuples in the complex disjunction must remain consistent regardless of what happens to A and B.","{'title': '4.', 'number': '5'}"
"After the first unification we can still unify A with any structure that it. is compatible with, such as: If this happens, then the tuple (A C) is no longer consistent.","{'title': '4.', 'number': '5'}"
A side effect of A becoming A' = render: tem] number: sg case: nom is that C' simultaniously reduces to {(B C)).,"{'title': '4.', 'number': '5'}"
"Since there is now only one viable alternative left, B and C can at this point be unified.","{'title': '4.', 'number': '5'}"
The original result from (Unify {A Ill C) now reduces to the same as (Unify B C).,"{'title': '4.', 'number': '5'}"
"C&quot; = {(B C)} = [number: Lease: aco As the example shows, once C is unified with (A B), A and B acquire a &quot;positive constraint.&quot; All later unifications involving them must keep at least one of the two pairs (A C), (B C) unifieable.","{'title': '4.', 'number': '5'}"
"If at some later point one of the two tuples becomes inconsistent, the members of the sole remaining tuple finally can and should be unified.","{'title': '4.', 'number': '5'}"
"When that has happened, the positive constraint on A and B can also be discarded.","{'title': '4.', 'number': '5'}"
A more elaborate example of this sort is given in the Appendix.,"{'title': '4.', 'number': '5'}"
Essentially the same procedure also works for more complicated cases.,"{'title': '4.', 'number': '5'}"
"For example, unification of {A B} with {C DI yields {(A C) (A D) (B C) (B D)) assuming that the two values in each tuple are compatible.","{'title': '4.', 'number': '5'}"
Any pairs that could not be unified are left out.,"{'title': '4.', 'number': '5'}"
The complex disjunction is added as a positive constraint to all of the values that appear in it.,"{'title': '4.', 'number': '5'}"
"The result of unifying {(A C) (B C)) with {(D F) (E F)} is {(A CD F) (A C E F) (B CD F) (B C E F)), again assuming that no alternative can initially be ruled out.","{'title': '4.', 'number': '5'}"
"As for generalization, things are considerably simpler.","{'title': '4.', 'number': '5'}"
The result of (Generalize A B) inherits both negative and positive constraints of A and B.,"{'title': '4.', 'number': '5'}"
This follows from the fact that the generalization of A and B is the maximal subgraph of A and B that will unify with either one them.,"{'title': '4.', 'number': '5'}"
"Consequently, it is subject to any constraint that affects A or B.","{'title': '4.', 'number': '5'}"
"This is analogous to the fact that, in set theory, In our current implementation, negative constraints are dropped as soon as they become redundant as far as unification is concerned.","{'title': '4.', 'number': '5'}"
"For example, when [case: ace] is unified with with [case: -dal], the resulting matrix is simply [case: accl.","{'title': '4.', 'number': '5'}"
The negative constraint is eliminated since there is no possibility that it could ever be violated later.,"{'title': '4.', 'number': '5'}"
This may be a wrong policy.,"{'title': '4.', 'number': '5'}"
It has to be modified to make generalization work as proposed in Section V for structures with negative constraints.,"{'title': '4.', 'number': '5'}"
"If generalization is defined as we have suggested above, negative constraints must always be kept because they never become redundant for generalization.","{'title': '4.', 'number': '5'}"
"When negative or positive constraints are involved, unification obviously takes more time.","{'title': '4.', 'number': '5'}"
"Nevertheless, the basic algorithm remains pretty much the same.","{'title': '4.', 'number': '5'}"
Allowing for constraints does not significantly reduce the speed at which values that do not have any get unified in the Texas implementation.,"{'title': '4.', 'number': '5'}"
"In the course of working on the project, I gained one insight that perhaps should have been obvious from the very beginning: the problems that arise in this connection are very similar to those that come up in logic programming.","{'title': '4.', 'number': '5'}"
One can actually use the feature system for certain kind of inferencing.,"{'title': '4.', 'number': '5'}"
"For example, let Mary, Jane, and John have the following values:","{'title': '4.', 'number': '5'}"
straints rather than additional features for establishing a markedness hierarchy.,"{'title': 'Mary = [hair: blond]', 'number': '6'}"
"For example, the following feature specifications have the effect that we seek.","{'title': 'Mary = [hair: blond]', 'number': '6'}"
If we now unify John with [sister: [eyes: blue]] both Jane and Mary get marked with the positive constraint that at least one of them has blue eyes.,"{'title': 'Mary = [hair: blond]', 'number': '6'}"
Suppose that we now learn that Mary has green eyes.,"{'title': 'Mary = [hair: blond]', 'number': '6'}"
This immediately gives us more information about John and Jane as well.,"{'title': 'Mary = [hair: blond]', 'number': '6'}"
Now we know that Jane's eyes are blue and that she definitely is John's sister.,"{'title': 'Mary = [hair: blond]', 'number': '6'}"
The role of positive constraints is to keep track of partial information in such a way that no inconsistencies are allowed and proper updating is done when more things become known.,"{'title': 'Mary = [hair: blond]', 'number': '6'}"
One problem of long standing for which the present system may provide a simple solution is person agreement in coordinate noun phrases.,"{'title': '5.', 'number': '7'}"
The conjunction of a 1st person pronoun with either 2nd or 3rd person pronoun invariably yields 1st person agreement.,"{'title': '5.', 'number': '7'}"
"&quot;I and you&quot; is equivalent to &quot;we,&quot; as far as agreement is concerned.","{'title': '5.', 'number': '7'}"
"When a second person pronoun is conjoined with a third person NP, the resulting conjunction has the agreement properties of a second person pronoun.","{'title': '5.', 'number': '7'}"
"Schematically: Assuming that generalization with negative constraints works as indicated above, i.e. negative constraints are always inherited, it immediately follows that the generalization of 1st person with any other person is compatible with only 1st person and that 2nd person wins over 3rd when they are combined.","{'title': '5.', 'number': '7'}"
The results are as follows.,"{'title': '5.', 'number': '7'}"
"Sag, Gazdar, Wasow, and Weisler [84] propose a solution which is based on the idea of deriving the person feature for a coordinate noun phrase by generalization (intersection) from the person features of its heads.","{'title': '5.', 'number': '7'}"
"It is obvious that the desired effect can be obtained in any feature system that uses the fewest features to mark 1st person, some additional feature for 2nd person, and yet another for 3rd person.","{'title': '5.', 'number': '7'}"
"Because generalization of 1st and 2nd, for example, yields only the features that two have in common, the one with fewest features wins.","{'title': '5.', 'number': '7'}"
Any such solution can probably be implemented easily in the framework outlined above.,"{'title': '5.', 'number': '7'}"
"However, this proposal has one very counterintuitive aspect: markedness hierarchy is the reverse of what traditionally has been assumed.","{'title': '5.', 'number': '7'}"
Designating something as 3rd person requires the greatest number of feature specifications.,"{'title': '5.', 'number': '7'}"
"In the Sag et al. system, 3rd person is the most highly marked member and 1st person the least marked member of the trio.","{'title': '5.', 'number': '7'}"
"Traditionally, 3rd person has been regarded as the unmarked case.","{'title': '5.', 'number': '7'}"
"In our system, there is a rather simple solution under which the value of person feature in coordinate NPs is derived by generalization, just as Sag it et al. propose, which nevertheless preserves the traditional view of markedness.","{'title': '5.', 'number': '7'}"
The desired result can be obtained by using negative con,"{'title': '5.', 'number': '7'}"
let + 3rd - - conversant:,"{'title': '[', 'number': '8'}"
Note that the proper part of lst+2nd excludes 3rd person.,"{'title': 'speaker:', 'number': '9'}"
It is compatible with both 1st and 2nd person but the negative constraint rules out the latter one.,"{'title': 'speaker:', 'number': '9'}"
"In tile case of lst+3rd, the negative constraint is compatible with 1st person but incompatible with 2nd and 3rd.","{'title': 'speaker:', 'number': '9'}"
"In the last case, the specification [speaker: -] rules out 1st person and the negative constraint -[conversant: -1 eliminates 3rd person.","{'title': 'speaker:', 'number': '9'}"
"When negative constraints are counted in, 1st person is the most and 3rd person the least marked member of the three.","{'title': 'speaker:', 'number': '9'}"
"In that respect, the proposed analysis is in line with traditional views on markedness.","{'title': 'speaker:', 'number': '9'}"
Another relevant observation is that the negative constraints on which the result crucially depends are themselves not too unnatural.,"{'title': 'speaker:', 'number': '9'}"
"In effect, they say of 1st person that it is &quot;neither 2nd nor 3rd&quot; and that 2nd person is &quot;not 3rd.&quot; It will be interesting to see whether other cases of markedness can be analyzed in the same way. speaker: -[-conversant:","{'title': 'speaker:', 'number': '9'}"
"I am indebted to Martin Kay for introducing me to unification and to Fernando Pereira, Stuart Shieber, Remo Pareschi, and Annie Zaenen for many insightful suggestions on the project.","{'title': '6.', 'number': '10'}"
