col1,col2
"Until quite recently, extending Phrase-based Statistical Machine Translation (PBSMT) with syntactic structure caused system performance to deteriorate.",{}
In this work we show that incorporating lexical syntactic descriptions in the form of supertags can yield significantly better PBSMT systems.,{}
We describe a novel PBSMT model that integrates supertags into the target language model and the target side of the translation model.,{}
Two kinds of supertags are employed: those from Lexicalized Tree-Adjoining Grammar and Combinatory Categorial Grammar.,{}
"Despite the differences between these two approaches, the supertaggers give similar improvements.",{}
"In addition to supertagging, we also explore the utility of a surface global grammaticality measure based on combinatory operators.",{}
"We perform various experiments on the Arabic to English NIST 2005 test set addressing issues such as sparseness, scalability and the utility of system subcomponents.",{}
"Our best result (0.4688 BLEU) improves by 6.1% relative to a state-of-theart PBSMT model, which compares very favourably with the leading systems on the NIST 2005 task.",{}
"Within the field of Machine Translation, by far the most dominant paradigm is Phrase-based Statistical Machine Translation (PBSMT) (Koehn et al., 2003; Tillmann & Xia, 2003).","{'title': '1 Introduction', 'number': '1'}"
"However, unlike in rule- and example-based MT, it has proven difficult to date to incorporate linguistic, syntactic knowledge in order to improve translation quality.","{'title': '1 Introduction', 'number': '1'}"
"Only quite recently have (Chiang, 2005) and (Marcu et al., 2006) shown that incorporating some form of syntactic structure could show improvements over a baseline PBSMT system.","{'title': '1 Introduction', 'number': '1'}"
"While (Chiang, 2005) avails of structure which is not linguistically motivated, (Marcu et al., 2006) employ syntactic structure to enrich the entries in the phrase table.","{'title': '1 Introduction', 'number': '1'}"
In this paper we explore a novel approach towards extending a standard PBSMT system with syntactic descriptions: we inject lexical descriptions into both the target side of the phrase translation table and the target language model.,"{'title': '1 Introduction', 'number': '1'}"
"Crucially, the kind of lexical descriptions that we employ are those that are commonly devised within lexicon-driven approaches to linguistic syntax, e.g.","{'title': '1 Introduction', 'number': '1'}"
"Lexicalized Tree-Adjoining Grammar (Joshi & Schabes, 1992; Bangalore & Joshi, 1999) and Combinary Categorial Grammar (Steedman, 2000).","{'title': '1 Introduction', 'number': '1'}"
"In these linguistic approaches, it is assumed that the grammar consists of a very rich lexicon and a tiny, impoverished1 set of combinatory operators that assemble lexical entries together into parse-trees.","{'title': '1 Introduction', 'number': '1'}"
"The lexical entries consist of syntactic constructs (‘supertags’) that describe information such as the POS tag of the word, its subcategorization information and the hierarchy of phrase categories that the word projects upwards.","{'title': '1 Introduction', 'number': '1'}"
In this work we employ the lexical entries but exchange the algebraic combinatory operators with the more robust and efficient supertagging approach: like standard English.,"{'title': '1 Introduction', 'number': '1'}"
"They employ a stochastic, top-down transtaggers, supertaggers employ probabilities based on duction process that assigns a joint probability to local context and can be implemented using finite a source sentence and each of its alternative transstate technology, e.g.","{'title': '1 Introduction', 'number': '1'}"
"Hidden Markov Models (Ban- lations when rewriting the target parse-tree into a galore & Joshi, 1999). source sentence.","{'title': '1 Introduction', 'number': '1'}"
"The rewriting/transduction process There are currently two supertagging approaches is driven by “xRS rules”, each consisting of a pair available: LTAG-based (Bangalore & Joshi, 1999) of a source phrase and a (possibly only partially) and CCG-based (Clark & Curran, 2004).","{'title': '1 Introduction', 'number': '1'}"
Both the lexicalized syntactified target phrase.,"{'title': '1 Introduction', 'number': '1'}"
"In order to LTAG (Chen et al., 2006) and the CCG supertag extract xRS rules, the word-to-word alignment insets (Hockenmaier, 2003) were acquired from the duced from the parallel training corpus is used to WSJ section of the Penn-II Treebank using hand- guide heuristic tree ‘cutting’ criteria. built extraction rules.","{'title': '1 Introduction', 'number': '1'}"
"Here we test both the LTAG While the research of (Marcu et al., 2006) has and CCG supertaggers.","{'title': '1 Introduction', 'number': '1'}"
"We interpolate (log-linearly) much in common with the approach proposed here the supertagged components (language model and (such as the syntactified target phrases), there rephrase table) with the components of a standard main a number of significant differences.","{'title': '1 Introduction', 'number': '1'}"
"Firstly, PBSMT system.","{'title': '1 Introduction', 'number': '1'}"
"Our experiments on the Arabic– rather than induce millions of xRS rules from parEnglish NIST 2005 test suite show that each of the allel data, we extract phrase pairs in the standard supertagged systems significantly improves over the way (Och & Ney, 2003) and associate with each baseline PBSMT system.","{'title': '1 Introduction', 'number': '1'}"
"Interestingly, combining phrase-pair a set of target language syntactic structhe two taggers together diminishes the benefits of tures based on supertag sequences.","{'title': '1 Introduction', 'number': '1'}"
"Relative to using supertagging seen with the individual LTAG and arbitrary parse-chunks, the power of supertags lies CCG systems.","{'title': '1 Introduction', 'number': '1'}"
"In this paper we discuss these and in the fact that they are, syntactically speaking, rich other empirical issues. lexical descriptions.","{'title': '1 Introduction', 'number': '1'}"
A supertag can be assigned to The remainder of the paper is organised as fol- every word in a phrase.,"{'title': '1 Introduction', 'number': '1'}"
"On the one hand, the corlows: in section 2 we discuss the related work on en- rect sequence of supertags could be assembled toriching PBSMT with syntactic structure.","{'title': '1 Introduction', 'number': '1'}"
"In section gether, using only impoverished combinatory opera3, we describe the baseline PBSMT system which tors, into a small set of constituents/parses (‘almost’ our work extends.","{'title': '1 Introduction', 'number': '1'}"
"In section 4, we detail our ap- a parse).","{'title': '1 Introduction', 'number': '1'}"
"On the other hand, because supertags are proach.","{'title': '1 Introduction', 'number': '1'}"
"Section 5 describes the experiments carried lexical entries, they facilitate robust syntactic proout, together with the results obtained.","{'title': '1 Introduction', 'number': '1'}"
"Section 6 cessing (using Markov models, for instance) which concludes, and provides avenues for further work. does not necessarily aim at building a fully con2 Related Work nected graph.","{'title': '1 Introduction', 'number': '1'}"
"Until very recently, the experience with adding syn- A second major difference with xRS rules is that tax to PBSMT systems was negative.","{'title': '1 Introduction', 'number': '1'}"
"For example, our supertag-enriched target phrases need not be (Koehn et al., 2003) demonstrated that adding syn- generalized into (xRS or any other) rules that work tax actually harmed the quality of their SMT system. with abstract categories.","{'title': '1 Introduction', 'number': '1'}"
"Finally, like POS tagging, Among the first to demonstrate improvement when supertagging is more efficient than actual parsing or adding recursive structure was (Chiang, 2005), who tree transduction. allows for hierarchical phrase probabilities that han- 3 Baseline Phrase-Based SMT System dle a range of reordering phenomena in the correct We present the baseline PBSMT model which we fashion.","{'title': '1 Introduction', 'number': '1'}"
Chiang’s derived grammar does not rely on extend with supertags in the next section.,"{'title': '1 Introduction', 'number': '1'}"
"Our any linguistic annotations or assumptions, so that the baseline PBSMT model uses GIZA++2 to obtain ‘syntax’ induced is not linguistically motivated. word-level alignments in both language directions.","{'title': '1 Introduction', 'number': '1'}"
"Coming right up to date, (Marcu et al., 2006) The bidirectional word alignment is used to obtain demonstrate that ‘syntactified’ target language phrase translation pairs using heuristics presented in phrases can improve translation quality for Chinese– 289 2http://www.fjoch.com/GIZA++.html (Och & Ney, 2003) and (Koehn et al., 2003), and the Moses decoder was used for phrase extraction and decoding.3 Let t and s be the target and source language sentences respectively.","{'title': '1 Introduction', 'number': '1'}"
Any (target or source) sentence x will consist of two parts: a bag of elements (words/phrases etc.) and an order over that bag.,"{'title': '1 Introduction', 'number': '1'}"
"In other words, x = (0x� Ox), where 0x stands for the bag of phrases that constitute x, and Ox for the order of the phrases as given in x (Ox can be implemented as a function from a bag of tokens 0x to a set with a finite number of positions).","{'title': '1 Introduction', 'number': '1'}"
"Hence, we may separate order from content:","{'title': '1 Introduction', 'number': '1'}"
We extend the baseline model with lexical linguistic representations (supertags) both in the language model as well as in the phrase translation model.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Before we describe how our model extends the baseline, we shortly review the supertagging approaches in Lexicalized Tree-Adjoining Grammar and Combinatory Categorial Grammar.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Here, Pw(t) is the target language model, P(Os|Ot) represents the conditional (order) linear distortion probability, and P(0s|0t) stands for a probabilistic translation model from target language bags of phrases to source language bags of phrases using a phrase translation table.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"As commonly done in PBSMT, we interpolate these models log-linearly (using different A weights) together with a word penalty weight which allows for control over the length of the target sentence t: For convenience of notation, the interpolation factor for the bag of phrases translation model is shown in formula (3) at the phrase level (but that does not entail any difference).","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"For a bag of phrases 0t consisting of phrases ti, and bag 0s consisting of phrases si, the phrase translation model is given by: where Pph and Pr are the phrase-translation probability and its reverse probability, and Pw is the lexical translation probability. tence The purchase price includes taxes.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
The subcategorization information is most clearly available in the verb includes which takes a subject NP to its left and an object NP to its right.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Modern linguistic theory proposes that a syntactic parser has access to an extensive lexicon of wordstructure pairs and a small, impoverished set of operations to manipulate and combine the lexical entries into parses.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
Examples of formal instantiations of this idea include CCG and LTAG.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"The lexical entries are syntactic constructs (graphs) that specify information such as POS tag, subcategorization/dependency information and other syntactic constraints at the level of agreement features.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"One important way of portraying such lexical descriptions is via the supertags devised in the LTAG and CCG frameworks (Bangalore & Joshi, 1999; Clark & Curran, 2004).","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"A supertag (see Figure 1) represents a complex, linguistic word category that encodes a syntactic structure expressing a specific local behaviour of a word, in terms of the arguments it takes (e.g. subject, object) and the syntactic environment in which it appears.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"In fact, in LTAG a supertag is an elementary tree and in CCG it is a CCG lexical category.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
Both descriptions can be viewed as closely related functional descriptions.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"The term “supertagging” (Bangalore & Joshi, 1999) refers to tagging the words of a sentence, each with a supertag.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"When well-formed, an ordered sequence of supertags can be viewed as a compact representation of a small set of constituents/parses that can be obtained by assembling the supertags together using the appropriate combinatory operators (such as substitution and adjunction in LTAG or function application and combination in CCG).","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Akin to POS tagging, the process of supertagging an input utterance proceeds with statistics that are based on the probability of a word-supertag pair given their Markovian or local context (Bangalore & Joshi, 1999; Clark & Curran, 2004).","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
This is the main difference with full parsing: supertagging the input utterance need not result in a fully connected graph.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"The LTAG-based supertagger of (Bangalore & Joshi, 1999) is a standard HMM tagger and consists of a (second-order) Markov language model over supertags and a lexical model conditioning the probability of every word on its own supertag (just like standard HMM-based POS taggers).","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"The CCG supertagger (Clark & Curran, 2004) is based on log-linear probabilities that condition a supertag on features representing its context.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
The CCG supertagger does not constitute a language model nor are the Maximum Entropy estimates directly interpretable as such.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
In our model we employ the CCG supertagger to obtain the best sequences of supertags for a corpus of sentences from which we obtain language model statistics.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Besides the difference in probabilities and statistical estimates, these two supertaggers differ in the way the supertags are extracted from the Penn Treebank, cf.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"(Hockenmaier, 2003; Chen et al., 2006).","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
Both supertaggers achieve a supertagging accuracy of 90–92%.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
Three aspects make supertags attractive in the context of SMT.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Firstly, supertags are rich syntactic constructs that exist for individual words and so they are easy to integrate into SMT models that can be based on any level of granularity, be it wordor phrase-based.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Secondly, supertags specify the local syntactic constraints for a word, which resonates well with sequential (finite state) statistical (e.g.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
Markov) models.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Finally, because supertags are rich lexical descriptions that represent underspecification in parsing, it is possible to have some of the benefits of full parsing without imposing the strict connectedness requirements that it demands.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
We employ the aforementioned supertaggers to enrich the English side of the parallel training corpus with a single supertag sequence per sentence.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
Then we extract phrase-pairs together with the cooccuring English supertag sequence from this corpus via the same phrase extraction method used in the baseline model.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
This way we directly extend the baseline model described in section 3 with supertags both in the phrase translation table and in the language model.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
Next we define the probabilistic model that accompanies this syntactic enrichment of the baseline model.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
Let 5T represent a supertag sequence of the same length as a target sentence t. Equation (2) changes as follows: The approximations made in this formula are of two kinds: the standard split into components and the search for the most likely joint probability of a target hypothesis and a supertag sequence cooccuring with the source sentence (a kind of Viterbi approach to avoid the complex optimization involving the sum over supertag sequences).,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
The distortion and word penalty models are the same as those used in the baseline PBSMT model.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Supertagged Language Model The ‘language model’ PST (t, 5T) is a supertagger assigning probabilities to sequences of word–supertag pairs.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
The language model is further smoothed by log-linear interpolation with the baseline language model over word sequences.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Supertags in Phrase Tables The supertagged phrase translation probability consists of a combination of supertagged components analogous to their counterparts in the baseline model (equation (3)), i.e. it consists of P(s  |t, 5T), its reverse and a word-level probability.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"We smooth this probability by log-linear interpolation with the factored backoff version P(s  |t)P(s  |ST), where we import the baseline phrase table probability and exploit the probability of a source phrase given the target supertag sequence.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
A model in which we omit P(s  |ST) turns out to be slightly less optimal than this one.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"As in most state-of-the-art PBSMT systems, we use GIZA++ to obtain word-level alignments in both language directions.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"The bidirectional word alignment is used to obtain lexical phrase translation pairs using heuristics presented in (Och & Ney, 2003) and (Koehn et al., 2003).","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Given the collected phrase pairs, we estimate the phrase translation probability distribution by relative frequency as follows: For each extracted lexical phrase pair, we extract the corresponding supertagged phrase pairs from the supertagged target sequence in the training corpus (cf. section 5).","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"For each lexical phrase pair, there is at least one corresponding supertagged phrase pair.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
The probability of the supertagged phrase pair is estimated by relative frequency as follows: The supertags usually encode dependency information that could be used to construct an ‘almost parse’ with the help of the CCG/LTAG composition operators.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
The n-gram language model over supertags applies a kind of statistical ‘compositionality check’ but due to smoothing effects this could mask crucial violations of the compositionality operators of the grammar formalism (CCG in this case).,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
It is interesting to observe the effect of integrating into the language model a penalty imposed when formal compostion operators are violated.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
We combine the n-gram language model with a penalty factor that measures the number of encountered combinatory operator violations in a sequence of supertags (cf.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
Figure 2).,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"For a supertag sequence of length (L) which has (V ) operator violations (as measured by the CCG system), the language model P will be adjusted as P* = P x (1 − �i ).","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
This is of course no longer a simple smoothed maximum-likelihood estimate nor is it a true probability.,"{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Nevertheless, this mechanism provides a simple, efficient integration of a global compositionality (grammaticality) measure into the n-gram language model over supertags.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
"Decoder The decoder used in this work is Moses, a log-linear decoder similar to Pharaoh (Koehn, 2004), modified to accommodate supertag phrase probabilities and supertag language models.","{'title': '4 Our Approach: Supertagged PBSMT', 'number': '2'}"
In this section we present a number of experiments that demonstrate the effect of lexical syntax on translation quality.,"{'title': '5 Experiments', 'number': '3'}"
We carried out experiments on the NIST open domain news translation task from Arabic into English.,"{'title': '5 Experiments', 'number': '3'}"
We performed a number of experiments to examine the effect of supertagging approaches (CCG or LTAG) with varying data sizes.,"{'title': '5 Experiments', 'number': '3'}"
Data and Settings The experiments were conducted for Arabic to English translation and tested on the NIST 2005 evaluation set.,"{'title': '5 Experiments', 'number': '3'}"
"The systems were trained on the LDC Arabic–English parallel corpus; we use the news part (130K sentences, about 5 million words) to train systems with what we call the small data set, and the news and a large part of the UN data (2 million sentences, about 50 million words) for experiments with large data sets.","{'title': '5 Experiments', 'number': '3'}"
"The n-gram target language model was built using 250M words from the English GigaWord Corpus using the SRILM toolkit.4 Taking 10% of the English GigaWord Corpus used for building our target language model, the supertag-based target language models were built from 25M words that were supertagged.","{'title': '5 Experiments', 'number': '3'}"
"For the LTAG supertags experiments, we used the LTAG English supertagger5 (Bangalore & Joshi, 1999) to tag the English part of the parallel data and the supertag language model data.","{'title': '5 Experiments', 'number': '3'}"
"For the CCG supertag experiments, we used the CCG supertagger of (Clark & Curran, 2004) and the Edinburgh CCG tools6 to tag the English part of the parallel corpus as well as the CCG supertag language model data.","{'title': '5 Experiments', 'number': '3'}"
"The NIST MT03 test set is used for development, particularly for optimizing the interpolation weights using Minimum Error Rate training (Och, 2003).","{'title': '5 Experiments', 'number': '3'}"
Baseline System The baseline system is a stateof-the-art PBSMT system as described in section 3.,"{'title': '5 Experiments', 'number': '3'}"
We built two baseline systems with two different-sized training sets: ‘Base-SMALL’ (5 million words) and ‘Base-LARGE’ (50 million words) as described above.,"{'title': '5 Experiments', 'number': '3'}"
Both systems use a trigram language model built using 250 million words from the English GigaWord Corpus.,"{'title': '5 Experiments', 'number': '3'}"
"Table 1 presents the BLEU scores (Papineni et al., 2002) of both systems on the NIST 2005 MT Evaluation test set.","{'title': '5 Experiments', 'number': '3'}"
We compared the translation quality of the baseline systems with the LTAG and CCG supertags systems (LTAG-SMALL and CCG-SMALL).,"{'title': '5 Experiments', 'number': '3'}"
The results are given in Table 2.,"{'title': '5 Experiments', 'number': '3'}"
All systems were trained on the same parallel data.,"{'title': '5 Experiments', 'number': '3'}"
"The LTAG supertag-based system outperforms the baseline by 1.97 BLEU points absolute (or 4.9% relative), while the CCG supertagbased system scores 1.66 BLEU points over the baseline (4.1% relative).","{'title': '5 Experiments', 'number': '3'}"
These significant improvements indicate that the rich information in supertags helps select better translation candidates.,"{'title': '5 Experiments', 'number': '3'}"
"POS Tags vs. Supertags A supertag is a complex tag that localizes the dependency and the syntax information from the context, whereas a normal POS tag just describes the general syntactic category of the word without further constraints.","{'title': '5 Experiments', 'number': '3'}"
In this experiment we compared the effect of using supertags and POS tags on translation quality.,"{'title': '5 Experiments', 'number': '3'}"
"As can be seen in Table 3, while the POS tags help (0.65 BLEU points, or 1.7% relative increase over the baseline), they clearly underperform compared to the supertag model (by 3.2%).","{'title': '5 Experiments', 'number': '3'}"
The Usefulness of a Supertagged LM In these experiments we study the effect of the two added feature (cost) functions: supertagged translation and language models.,"{'title': '5 Experiments', 'number': '3'}"
We compare the baseline system to the supertags system with the supertag phrasetable probability but without the supertag LM.,"{'title': '5 Experiments', 'number': '3'}"
"Table 4 lists the baseline system (Base-SMALL), the LTAG system without supertagged language model (LTAG-TM-ONLY) and the LTAG-SMALL system with both supertagged translation and language models.","{'title': '5 Experiments', 'number': '3'}"
"The results presented in Table 4 indicate that the improvement is a shared contribution between the supertagged translation and language models: adding the LTAG TM improves BLEU score by 1.38 points (3.4% relative) over the baseline, with the LTAG LM improving BLEU score by a further 0.59 points (a further 1.4% increase).","{'title': '5 Experiments', 'number': '3'}"
Outperforming a PBSMT system on small amounts of training data is less impressive than doing so on really large sets.,"{'title': '5 Experiments', 'number': '3'}"
The issue here is scalability as well as whether the PBSMT system is able to bridge the performance gap with the supertagged system when reasonably large sizes of training data are used.,"{'title': '5 Experiments', 'number': '3'}"
"To this end, we trained the systems on 2 million sentences of parallel data, deploying LTAG supertags and CCG supertags.","{'title': '5 Experiments', 'number': '3'}"
Table 5 presents the comparison between these systems and the baseline trained on the same data.,"{'title': '5 Experiments', 'number': '3'}"
"The LTAG system improves by 1.17 BLEU points (2.6% relative), but the CCG system gives an even larger increase: 1.91 BLEU points (4.3% relative).","{'title': '5 Experiments', 'number': '3'}"
"While this is slightly lower than the 4.9% relative improvement with the smaller data sets, the sustained increase is probably due to observing more data with different supertag contexts, which enables the model to select better target language phrases.","{'title': '5 Experiments', 'number': '3'}"
"Adding a grammaticality factor As described in section 4.3, we integrate an impoverished grammaticality factor based on two standard CCG combination operations, namely Forward and Backward Application.","{'title': '5 Experiments', 'number': '3'}"
"Table 6 compares the results of the baseline, the CCG with an n-gram LM-only system (CCG-LARGE) and CCG-LARGE with this ‘grammaticalized’ LM system (CCG-LARGE-GRAM).","{'title': '5 Experiments', 'number': '3'}"
"We see that bringing the grammaticality tests to bear onto the supertagged system gives a further improvement of 0.79 BLEU points, a 1.7% relative increase, culminating in an overall increase of 2.7 BLEU points, or a 6.1% relative improvement over the baseline system.","{'title': '5 Experiments', 'number': '3'}"
"A natural question to ask is whether LTAG and CCG supertags are playing similar (overlapping, or conflicting) roles in practice.","{'title': '5 Experiments', 'number': '3'}"
"Using an oracle to choose the best output of the two systems gives a BLEU score of 0.441, indicating that the combination provides significant room for improvement (cf.","{'title': '5 Experiments', 'number': '3'}"
Table 2).,"{'title': '5 Experiments', 'number': '3'}"
"However, our efforts to build a system that benefits from the combination using a simple loglinear combination of the two models did not give any significant performance change relative to the baseline CCG system.","{'title': '5 Experiments', 'number': '3'}"
"Obviously, more informed ways of combining the two could result in better performance than a simple log-linear interpolation of the components.","{'title': '5 Experiments', 'number': '3'}"
Figure 3 shows some example system output.,"{'title': '5 Experiments', 'number': '3'}"
"While the baseline system omits the verb giving “the authorities that it had...”, both the LTAG and CCG found a formulation “authorities reported that” with a closer meaning to the reference translation “The authorities said that”.","{'title': '5 Experiments', 'number': '3'}"
Omitting verbs turns out to be a problem for the baseline system when translating the notorious verbless Arabic sentences (see Figure 4).,"{'title': '5 Experiments', 'number': '3'}"
"The supertagged systems have a more grammatically strict language model than a standard word-level Markov model, thereby exhibiting a preference (in the CCG system especially) for the insertion of a verb with a similar meaning to that contained in the reference sentence.","{'title': '5 Experiments', 'number': '3'}"
SMT practitioners have on the whole found it difficult to integrate syntax into their systems.,"{'title': '6 Conclusions', 'number': '4'}"
"In this work, we have presented a novel model of PBSMT which integrates supertags into the target language model and the target side of the translation model.","{'title': '6 Conclusions', 'number': '4'}"
"Using LTAG supertags gives the best improvement over a state-of-the-art PBSMT system for a smaller data set, while CCG supertags work best on a large 2 million-sentence pair training set.","{'title': '6 Conclusions', 'number': '4'}"
"Adding grammaticality factors based on algebraic compositional operators gives the best result, namely 0.4688 BLEU, or a 6.1% relative increase over the baseline.","{'title': '6 Conclusions', 'number': '4'}"
This result compares favourably with the best systems on the NIST 2005 Arabic–English task.,"{'title': '6 Conclusions', 'number': '4'}"
"We expect more work on system integration to improve results still further, and anticipate that similar increases are to be seen for other language pairs.","{'title': '6 Conclusions', 'number': '4'}"
We would like to thank Srinivas Bangalore and the anonymous reviewers for useful comments on earlier versions of this paper.,"{'title': 'Acknowledgements', 'number': '5'}"
"This work is partially funded by Science Foundation Ireland Principal Investigator Award 05/IN/1732, and Netherlands Organization for Scientific Research (NWO) VIDI Award.","{'title': 'Acknowledgements', 'number': '5'}"
