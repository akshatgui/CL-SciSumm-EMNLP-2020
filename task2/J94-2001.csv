col1,col2
"In this paper we present some experiments on the use of a probabilistic model to tag English text, i.e. to assign to each word the correct tag (part of speech) in the context of the sentence.",{}
The main novelty of these experiments is the use of untagged text in the training of the model.,{}
"We have used a simple triclass Markov model and are looking for the best way to estimate the parameters of this model, depending on the kind and amount of training data provided.",{}
"Two approaches in particular are compared and combined: • using text that has been tagged by hand and computing relative frequency counts, • using text without tags and training the model as a hidden Markov process, according to a Maximum Likelihood principle.",{}
Experiments show that the best training is obtained by using as much tagged text as possible.,{}
"They also show that Maximum Likelihood training, the procedure that is routinely used to estimate hidden Markov models parameters from training data, will not necessarily improve the tagging accuracy.",{}
"In fact, it will generally degrade this accuracy, except when only a limited amount of hand-tagged text is available.",{}
"Institut EURECOM In this paper we present some experiments on the use of a probabilistic model to tag English text, i.e. to assign to each word the correct tag (part of speech) in the context of the sentence.","{'title': '', 'number': '1'}"
The main novelty of these experiments is the use of untagged text in the training of the model.,"{'title': '', 'number': '1'}"
"We have used a simple triclass Markov model and are looking for the best way to estimate the parameters of this model, depending on the kind and amount of training data provided.","{'title': '', 'number': '1'}"
Two approaches in particular are compared and combined: Experiments show that the best training is obtained by using as much tagged text as possible.,"{'title': '', 'number': '1'}"
"They also show that Maximum Likelihood training, the procedure that is routinely used to estimate hidden Markov models parameters from training data, will not necessarily improve the tagging accuracy.","{'title': '', 'number': '1'}"
"In fact, it will generally degrade this accuracy, except when only a limited amount of hand-tagged text is available.","{'title': '', 'number': '1'}"
"A lot of effort has been devoted in the past to the problem of tagging text, i.e. assigning to each word the correct tag (part of speech) in the context of the sentence.","{'title': '1.', 'number': '2'}"
Two main approaches have generally been considered: Derouault and Merialdo 1986; DeRose 1988; Church 1989; Beale 1988; Marcken 1990; Merialdo 1991; Cutting et al. 1992).,"{'title': '1.', 'number': '2'}"
"More recently, some work has been proposed using neural networks (Benello, Mackie, and Anderson 1989; Nakamura and Shikano 1989).","{'title': '1.', 'number': '2'}"
"Through these different approaches, some common points have emerged: These kinds of considerations fit nicely inside a probabilistic formulation of the problem (Beale 1985; Garside and Leech 1985), which offers the following advantages: In this paper we present a particular probabilistic model, the triclass model, and results from experiments involving different ways to estimate its parameters, with the intention of maximizing the ability of the model to tag text accurately.","{'title': '1.', 'number': '2'}"
"In particular, we are interested in a way to make the best use of untagged text in the training of the model.","{'title': '1.', 'number': '2'}"
We suppose that the user has defined a set of tags (attached to words).,"{'title': '2.', 'number': '3'}"
"Consider a sentence W = w1w2 wn, and a sequence of tags T =-- tit2 tn, of the same length.","{'title': '2.', 'number': '3'}"
"We call the pair (W, T) an alignment.","{'title': '2.', 'number': '3'}"
"We say that word w, has been assigned the tag t, in this alignment.","{'title': '2.', 'number': '3'}"
"We assume that the tags have some linguistic meaning for the user, so that among all possible alignments for a sentence there is a single one that is correct from a grammatical point of view.","{'title': '2.', 'number': '3'}"
A tagging procedure is a procedure 0 that selects a sequence of tags (and so defines an alignment) for each sentence.,"{'title': '2.', 'number': '3'}"
"0:W--+T=0(W) There are (at least) two measures for the quality of a tagging procedure: In practice, performance at sentence level is generally lower than performance at word level, since all the words have to be tagged correctly for the sentence to be tagged correctly.","{'title': '2.', 'number': '3'}"
"The standard measure used in the literature is performance at word level, and this is the one considered here.","{'title': '2.', 'number': '3'}"
"In the probabilistic formulation of the tagging problem we assume that the alignments are generated by a probabilistic model according to a probability distribution: p(W, T) In this case, depending on the criterion that we choose for evaluation, the optimal tagging procedure is as follows: We call this procedure Viterbi tagging.","{'title': '3.', 'number': '4'}"
"It is achieved using a dynamic programming scheme. where 0(W), is the tag assigned to word w, by the tagging procedure in the context of the sentence W. We call this procedure Maximum It is interesting to note that the most commonly used method is Viterbi tagging (see DeRose 1988; Church 1989) although it is not the optimal method for evaluation at word level.","{'title': '3.', 'number': '4'}"
"The reasons for this preference are presumably that: However, in our experiments, we will show that Viterbi and ML tagging result in very similar performance.","{'title': '3.', 'number': '4'}"
"Of course, the real tags have not been generated by a probabilistic model and, even if they had been, we would not be able to determine this model exactly because of practical limitations.","{'title': '3.', 'number': '4'}"
Therefore the models that we construct will only be approximations of an ideal model that does not exist.,"{'title': '3.', 'number': '4'}"
"It so happens that despite these assumptions and approximations, these models are still able to perform reasonably well.","{'title': '3.', 'number': '4'}"
"We have the mathematical expression: The triclass (or tri-POS Perouault 19861, or tri-Ggram Kodogno et al. 19871, or HK) model is based on the following approximations: (the name HK model comes from the notation chosen for these probabilities).","{'title': '4.', 'number': '5'}"
In order to define the model completely we have to specify the values of all h and k probabilities.,"{'title': '4.', 'number': '5'}"
"If Nw is the size of the vocabulary and NT the number of different tags, then there are: The total number of free parameters is then: Note that this number grows only linearly with respect to the size of the vocabulary, which makes this model attractive for vocabularies of a very large size.","{'title': '4.', 'number': '5'}"
The triclass model by itself allows any word to have any tag.,"{'title': '4.', 'number': '5'}"
"However, if we have a dictionary that specifies the list of possible tags for each word, we can use this information to constrain the model: if t is not a valid tag for the word w, then we are sure that There are thus at most as many nonzero values for the k probabilities as there are possible pairs (word, tag) allowed in the dictionary.","{'title': '4.', 'number': '5'}"
"If we have some tagged text available we can compute the number of times N(w,t) a given word w appears with the tag t, and the number of times N(ti, t2, t3) the sequence (t1, t2, t3) appears in this text.","{'title': '4.', 'number': '5'}"
We can then estimate the probabilities h and k by computing the relative frequencies of the corresponding events on this data: These estimates assign a probability of zero to any sequence of tags that did not occur in the training data.,"{'title': '4.', 'number': '5'}"
But such sequences may occur if we consider other texts.,"{'title': '4.', 'number': '5'}"
A probability of zero for a sequence creates problems because any alignment that contains this sequence will get a probability of zero.,"{'title': '4.', 'number': '5'}"
"Therefore, it may happen that, for some sequences of words, all alignments get a probability of zero and the model becomes useless for such sentences.","{'title': '4.', 'number': '5'}"
"To avoid this, we interpolate these distributions with uniform distributions, i.e.","{'title': '4.', 'number': '5'}"
":onsider the interpolated model defined by: where number of words that have the tag t The interpolation coefficient A is computed using the deleted interpolation algorithm (Jelinek and Mercer 1980) (it would also be possible to use two coefficients, one for the interpolation on h, one for the interpolation on k).","{'title': '4.', 'number': '5'}"
"The value of this coefficient is expected to increase if we increase the size of the training text, since the relative frequencies should be more reliable.","{'title': '4.', 'number': '5'}"
This interpolation procedure is also called &quot;smoothing.&quot; Smoothing is performed as follows: It can be noted that more complicated interpolation schemes are possible.,"{'title': '4.', 'number': '5'}"
"For example, different coefficients can be used depending on the count of (t1, t2), with the intuition that relative frequencies can be trusted more when this count is high.","{'title': '4.', 'number': '5'}"
"Another possibilitity is to interpolate also with models of different orders, such as hrf (t3/t2) or hrf (t3).","{'title': '4.', 'number': '5'}"
Smoothing can also be achieved with procedures other than interpolation.,"{'title': '4.', 'number': '5'}"
One example is the &quot;backing-off&quot; strategy proposed by Katz (1987).,"{'title': '4.', 'number': '5'}"
Using a triclass model M it is possible to compute the probability of any sequence of words W according to this model: where the sum is taken over all possible alignments.,"{'title': '4.', 'number': '5'}"
The Maximum Likelihood (ML) training finds the model M that maximizes the probability of the training text: where the product is taken over all the sentences W in the training text.,"{'title': '4.', 'number': '5'}"
This is the problem of training a hidden Markov model (it is hidden because the sequence of tags is hidden).,"{'title': '4.', 'number': '5'}"
"A well-known solution to this problem is the Forward-Backward (FB) or Baum—Welch algorithm (Baum and Eagon 1967; Jelinek 1976; Bahl, Jelinek, and Mercer 1983), which iteratively constructs a sequence of models that improve the probability of the training data.","{'title': '4.', 'number': '5'}"
"The advantage of this approach is that it does not require any tagging of the text, but makes the assumption that the correct model is the one in which tags are used to best predict the word sequence.","{'title': '4.', 'number': '5'}"
The Viterbi algorithm is easily implemented using a dynamic programming scheme (Bellman 1957).,"{'title': '6.', 'number': '6'}"
"The Maximum Likelihood algorithm appears more complex at first glance, because it involves computing the sum of the probabilities of a large number of alignments.","{'title': '6.', 'number': '6'}"
"However, in the case of a hidden Markov model, these computations can be arranged in a way similar to the one used during the FB algorithm, so that the overall amount of computation needed becomes linear in the length of the sentence (Baum and Eagon 1967).","{'title': '6.', 'number': '6'}"
The main objective of this paper is to compare RF and ML training.,"{'title': '7.', 'number': '7'}"
This is done in Section 7.2.,"{'title': '7.', 'number': '7'}"
"We also take advantage of the environment that we have set up to perform other experiments, described in Section 7.3, that have some theoretical interest, but did not bring any improvement in practice.","{'title': '7.', 'number': '7'}"
"One concerns the difference between Viterbi and ML tagging, and the other concerns the use of constraints during training.","{'title': '7.', 'number': '7'}"
"We shall begin by describing the textual data that we are using, before presenting the different tagging experiments using these various training and tagging methods.","{'title': '7.', 'number': '7'}"
We use the &quot;treebank&quot; data described in Beale (1988).,"{'title': '7.', 'number': '7'}"
"It contains 42,186 sentences (about one million words) from the Associated Press.","{'title': '7.', 'number': '7'}"
"These sentences have been tagged manually at the Unit for Computer Research on the English Language (University of Lancaster, U.K.), in collaboration with IBM U.K. (Winchester) and the IBM Speech Recognition group in Yorktown Heights (USA).","{'title': '7.', 'number': '7'}"
"In fact, these sentences are not only tagged but also parsed.","{'title': '7.', 'number': '7'}"
"However, we do not use the information contained in the parse.","{'title': '7.', 'number': '7'}"
In the treebank 159 different tags are used.,"{'title': '7.', 'number': '7'}"
These tags were projected on a smaller system of 76 tags designed by Evelyne Tzoukermann and Peter Brown (see Appendix).,"{'title': '7.', 'number': '7'}"
The results quoted in this paper all refer to this smaller system.,"{'title': '7.', 'number': '7'}"
"We built a dictionary that indicates the list of possible tags for each word, by taking all the words that occur in this text and, for each word, all the tags that are assigned to it somewhere in the text.","{'title': '7.', 'number': '7'}"
"In some sense, this is an optimal dictionary for this data, since a word will not have all its possible tags (in the language), but only the tags that it actually had within the text.","{'title': '7.', 'number': '7'}"
"We separated this data into two parts: In this experiment, we extracted N tagged sentences from the training data.","{'title': '7.', 'number': '7'}"
We then computed the relative frequencies on these sentences and built a &quot;smoothed&quot; model using the procedure previously described.,"{'title': '7.', 'number': '7'}"
"This model was then used to tag the 2,000 test sentences.","{'title': '7.', 'number': '7'}"
"We experimented with different values of N, for each of which we indicate the value of the interpolation coefficient and the number and percentage of correctly tagged words.","{'title': '7.', 'number': '7'}"
Results are indicated in Table 1.,"{'title': '7.', 'number': '7'}"
"As expected, as the size of the training increases, the interpolation coefficient increases and the quality of the tagging improves.","{'title': '7.', 'number': '7'}"
"When N = 0, the model is made up of uniform distributions.","{'title': '7.', 'number': '7'}"
"In this case, all alignments for a sentence are equally probable, so that the choice of the correct tag is just a choice at random.","{'title': '7.', 'number': '7'}"
"However, the percentage of correct tags is relatively high (more than three out of four) because: Note that this behavior is obviously very dependent on the system of tags that is used.","{'title': '7.', 'number': '7'}"
It can be noted that reasonable results are obtained quite rapidly.,"{'title': '7.', 'number': '7'}"
"Using 2,000 tagged sentences (less than 50,000 words), the tagging error rate is already less than 5%.","{'title': '7.', 'number': '7'}"
"Using 10 times as much data (20,000 tagged sentences) provides an improvement of only 1.5%.","{'title': '7.', 'number': '7'}"
"ML training, Viterbi tagging In ML training we take all the training data available (40,186 sentences) but we only use the word sequences, not the associated tags (except to compute the initial model, as will be described later).","{'title': '7.', 'number': '7'}"
This is possible since the FB algorithm is able to train the model using the word sequence only.,"{'title': '7.', 'number': '7'}"
In the first experiment we took the model made up of uniform distributions as the initial one.,"{'title': '7.', 'number': '7'}"
The only constraints in this model came from the values k(w It) that were set to zero when the tag t was not possible for the word w (as found in the dictionary).,"{'title': '7.', 'number': '7'}"
We then ran the FB algorithm and evaluated the quality of the tagging.,"{'title': '7.', 'number': '7'}"
The results are shown in Figure 1.,"{'title': '7.', 'number': '7'}"
(Perplexity is a measure of the average branching factor for probabilistic models.),"{'title': '7.', 'number': '7'}"
This figure shows that ML training both improves the perplexity of the model and reduces the tagging error rate.,"{'title': '7.', 'number': '7'}"
"However, this error rate remains at a relatively high level—higher than that obtained with a RF training on 100 tagged sentences.","{'title': '7.', 'number': '7'}"
"Having shown that ML training is able to improve the uniform model, we then wanted to know if it was also able to improve more accurate models.","{'title': '7.', 'number': '7'}"
"We therefore took as the initial model each of the models obtained previously by RF training and, for each one, performed ML training using all of the training word sequences.","{'title': '7.', 'number': '7'}"
The results are shown graphically in Figure 2 and numerically in Table 2.,"{'title': '7.', 'number': '7'}"
"These results show that, when we use few tagged data, the model obtained by relative frequency is not very good and Maximum Likelihood training is able to improve it.","{'title': '7.', 'number': '7'}"
"However, as the amount of tagged data increases, the models obtained by Relative Frequency are more accurate and Maximum Likelihood training improves on the initial iterations only, but after deteriorates.","{'title': '7.', 'number': '7'}"
"If we use more than 5,000 tagged sentences, even the first iteration of ML training degrades the tagging.","{'title': '7.', 'number': '7'}"
(This number is of course dependent on both the particular system of tags and the kind of text used in this experiment).,"{'title': '7.', 'number': '7'}"
These results call for some comments.,"{'title': '7.', 'number': '7'}"
"ML training is a theoretically sound procedure, and one that is routinely and successfully used in speech recognition to estimate the parameters of hidden Markov models that describe the relations between sequences of phonemes and the speech signal.","{'title': '7.', 'number': '7'}"
"Although ML training is guaranteed to improve perplexity, perplexity is not necessarily related to tagging accuracy, and it is possible to improve one while degrading the other.","{'title': '7.', 'number': '7'}"
"Also, in the case of tagging, ML training from various initial points (top line corresponds to N=100, bottom line to N=a11). the relations between words and tags are much more precise than the relations between phonemes and speech signals (where the correct correspondence is harder to define precisely).","{'title': '7.', 'number': '7'}"
"Some characteristics of ML training, such as the effect of smoothing probabilities, are probably more suited to speech than to tagging.","{'title': '7.', 'number': '7'}"
For this experiment we considered the initial model built by RF training over the whole training data and all the successive models created by the iterations of ML training.,"{'title': '7.', 'number': '7'}"
"For each of these models we performed Viterbi tagging and ML tagging on the same test data, then evaluated and compared the number of tagging errors produced by these two methods.","{'title': '7.', 'number': '7'}"
The results are shown in Table 3.,"{'title': '7.', 'number': '7'}"
"The models obtained at different iterations are related, so one should not draw strong conclusions about the definite superiority of one tagging procedure.","{'title': '7.', 'number': '7'}"
"However, the difference in error rate is very small, and shows that the choice of the tagging procedure is not as critical as the kind of training material.","{'title': '7.', 'number': '7'}"
"Following a suggestion made by F. Jelinek, we investigated the effect of constraining the ML training by imposing constraints on the probabilities.","{'title': '7.', 'number': '7'}"
This idea comes from the observation that the amount of training data needed to properly estimate the model increases with the number of free parameters of the model.,"{'title': '7.', 'number': '7'}"
"In the case of little training data, adding reasonable constraints on the shape of the models that are looked for reduces the number of free parameters and should improve the quality of the estimates.","{'title': '7.', 'number': '7'}"
"We tried two different constraints: The tw-constrained ML training is similar to the standard ML training, except that the probabilities p(t/w) are not changed at the end of an iteration.","{'title': '7.', 'number': '7'}"
The results in Table 4 show the number of tagging errors when the model is trained with the standard or tw-constrained ML training.,"{'title': '7.', 'number': '7'}"
"They show that the tw-constrained ML training still degrades the RF training, but not as quickly as the standard ML.","{'title': '7.', 'number': '7'}"
"We have not tested what happens when smaller training data is used to build the initial model. t-constraint This constraint is more difficult to implement than the previous one because the probabilities p(t) are not the parameters of the model, but a combination of these parameters.","{'title': '7.', 'number': '7'}"
With the help of R. Polyak we have designed an iterative procedure that allows the likelihood to be improved while preserving the values of p(t).,"{'title': '7.', 'number': '7'}"
We do not have sufficient space to describe this procedure here.,"{'title': '7.', 'number': '7'}"
"Because of its greater computational complexity, we have only applied it to a biclass model, i.e. a model where The initial model is estimated by relative frequency on the whole training data and Viterbi tagging is used.","{'title': '7.', 'number': '7'}"
"As in the previous experiment, the results in Table 5 show the number of tagging errors when the model is trained with the standard or t-constrained ML training.","{'title': '7.', 'number': '7'}"
"They show that the t-constrained ML training still degrades the RF training, but not as quickly as the standard ML.","{'title': '7.', 'number': '7'}"
"Again, we have not tested what happens when smaller training data is used to build the initial model.","{'title': '7.', 'number': '7'}"
8.,"{'title': '7.', 'number': '7'}"
Conclusion The results presented in this paper show that estimating the parameters of the model by counting relative frequencies over a very large amount of hand-tagged text lead to the best tagging accuracy.,"{'title': '7.', 'number': '7'}"
"Maximum Likelihood training is guaranteed to improve perplexity, but will not necessarily improve tagging accuracy.","{'title': '7.', 'number': '7'}"
"In our experiments, ML training degrades the performance unless the initial model is already very bad.","{'title': '7.', 'number': '7'}"
The preceding results suggest that the optimal strategy to build the best possible model for tagging is the following: whichever occurs first.,"{'title': '7.', 'number': '7'}"
"I would like to thank Peter Brown, Fred Jelinek, John Lafferty, Robert Mercer, Salim Roukos, and other members of the Continuous Speech Recognition group for the fruitful discussions I had with them throughout this work.","{'title': 'Acknowledgments', 'number': '8'}"
I also want to thank one of the referees for his judicious comments.,"{'title': 'Acknowledgments', 'number': '8'}"
