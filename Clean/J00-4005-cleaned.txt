With such a concept hierarchy as well as semantic relations with a precisely defined signature, we can for example overcome annotation problems of intensionality and predication as discussed in (van Deemter and Kibble, 2000). $$$$$ Problems posed to coreference annotation by intensionality (Hirschman et al. 1997) have motivated considerable complications in the TD.
With such a concept hierarchy as well as semantic relations with a precisely defined signature, we can for example overcome annotation problems of intensionality and predication as discussed in (van Deemter and Kibble, 2000). $$$$$ Criterion 4 has been discussed above.

In line with (Krahmer and Piwek, 2000) and (van Deemter and Kibble, 2000) this is in our view a too strict definition of anaphora so that we propose a more relation-based classification of anaphoric and bridging relations. $$$$$ Anaphoric and coreferential relations can coincide, of course, but not all coreferential relations are anaphoric, nor are all anaphoric relations coreferential.
In line with (Krahmer and Piwek, 2000) and (van Deemter and Kibble, 2000) this is in our view a too strict definition of anaphora so that we propose a more relation-based classification of anaphoric and bridging relations. $$$$$ Nonreferring NPs can enter anaphoric relations.

The core scheme is in principle identical with the MUC coreference scheme and is restricted to the annotation of coreference in the sense of (van Deemter and Kibble, 2000). $$$$$ On Coreferring

Also, despite a critical discussion in the MUC task definition (van Deemter and Kibble, 2000), the ACE scheme continues to treat nominal predicates and appositive phrases as coreferential. $$$$$ Because the MUC project is the bestknown example of coreference annotation, on which much subsequent work is based, and because of the public availability of the MUC Task Definition (TD, Hirschman and Chinchor 11997D, we will focus on MUC.
Also, despite a critical discussion in the MUC task definition (van Deemter and Kibble, 2000), the ACE scheme continues to treat nominal predicates and appositive phrases as coreferential. $$$$$ Even so, the MUC TD asks annotators to treat them as if it was applicable.

In contrast, they do not fall under the identity relation in OntoNotes, which follows the linguistic understanding of coreference according to which nominal predicates and appositives express properties of an entity rather than refer to a second (coreferent) entity (van Deemter and Kibble, 2000). $$$$$ The relation of coreference has been defined as holding between two noun phrases if they &quot;refer to the same entity&quot; (Hirschman et al. 1997).
In contrast, they do not fall under the identity relation in OntoNotes, which follows the linguistic understanding of coreference according to which nominal predicates and appositives express properties of an entity rather than refer to a second (coreferent) entity (van Deemter and Kibble, 2000). $$$$$ It follows that anaphora and coreference are different things.

In order to be linguistically accurate (van Deemter and Kibble, 2000), we distinguish between referring and attributive NPs $$$$$ In this squib, we intend to point at some fundamental problems with many of these annotation exercises, which are caused by a failure to distinguish properly between coreference, anaphora, and other, related phenomena.
In order to be linguistically accurate (van Deemter and Kibble, 2000), we distinguish between referring and attributive NPs $$$$$ Secondly, we suggest a further division of labor whereby those phenomena that are no longer accounted for in the new TD are covered by other tasks (Kibble and van Deemter 2000).

Proposals for annotating coreference such as (Hirschman, 1998) have been motivated by work on Information Extraction, hence the notion of coreference used is very difficult to relate to traditional ideas about anaphora (van Deemter and Kibble, 2000). $$$$$ Problems posed to coreference annotation by intensionality (Hirschman et al. 1997) have motivated considerable complications in the TD.
Proposals for annotating coreference such as (Hirschman, 1998) have been motivated by work on Information Extraction, hence the notion of coreference used is very difficult to relate to traditional ideas about anaphora (van Deemter and Kibble, 2000). $$$$$ Concerning Criterion 1, finally, it has been observed that the figures for recall in the MUC information extraction algorithm are rather discouraging (Appelt 1998).

Although often treated together, anaphoric pronoun resolution differs from coreference resolution (van Deemter and Kibble, 2000). $$$$$ Anaphoric and coreferential relations can coincide, of course, but not all coreferential relations are anaphoric, nor are all anaphoric relations coreferential.
Although often treated together, anaphoric pronoun resolution differs from coreference resolution (van Deemter and Kibble, 2000). $$$$$ Secondly, we suggest a further division of labor whereby those phenomena that are no longer accounted for in the new TD are covered by other tasks (Kibble and van Deemter 2000).

As van Deemter and Kibble (2000) point out, however, the result is rather ad hoc; the IDENT relation as defined by the instructions doesn't capture any coherent definition of coreference. $$$$$ As a result, the relation actually annotated in MUC—henceforth called the IDENT relation, following Hirschman and Chinchor (1997)—must be distinguished from the coreference relation.
As van Deemter and Kibble (2000) point out, however, the result is rather ad hoc; the IDENT relation as defined by the instructions doesn't capture any coherent definition of coreference. $$$$$ The TD admits that certain instructions may be incompatible with the definition of coreference but no reason is given for these incompatibilities and no intuitive motivation for the relation IDENT is offered.

see (van Deemter and Kibble, 2000) for some problems with the choices made in MUCCS. $$$$$ (Similar strategies seem to be van Deemter and Kibble On Coreferring adopted by most practitioners of coreference annotation, e.g., Cristea et al. [1999]).
see (van Deemter and Kibble, 2000) for some problems with the choices made in MUCCS. $$$$$ Secondly, we suggest a further division of labor whereby those phenomena that are no longer accounted for in the new TD are covered by other tasks (Kibble and van Deemter 2000).

Coreference has been defined by (van Deemter and Kibble, 2000) as the relation holding between linguistic expressions that refer to the same extra linguistic entity. $$$$$ The relation of coreference has been defined as holding between two noun phrases if they &quot;refer to the same entity&quot; (Hirschman et al. 1997).
Coreference has been defined by (van Deemter and Kibble, 2000) as the relation holding between linguistic expressions that refer to the same extra linguistic entity. $$$$$ But if they do not refer, the coreference relation as defined in Section 1 (which presupposes that Referent(cli) and Referent(a2) are defined) is not applicable to them.

It suffers however from a number of problems (van Deemter and Kibble, 2000), chief among which is the fact that the one semantic relation expressed by the scheme, ident, conflates a number of relations that semanticists view as distinct $$$$$ In particular, it suggests a division of labor whereby annotation of the coreference relation proper is separated from other tasks such as annotation of bound anaphora and of the relation between a subject and a predicative NP.
It suffers however from a number of problems (van Deemter and Kibble, 2000), chief among which is the fact that the one semantic relation expressed by the scheme, ident, conflates a number of relations that semanticists view as distinct $$$$$ (An example of the latter is bound anaphora, see Section 2.1.)

Following van Deemter and Kibble (2000), we define a coreference relation to hold between two NPs just in case they refer to the same extra-linguistic referent in the real world. $$$$$ But if they do not refer, the coreference relation as defined in Section 1 (which presupposes that Referent(cli) and Referent(a2) are defined) is not applicable to them.
Following van Deemter and Kibble (2000), we define a coreference relation to hold between two NPs just in case they refer to the same extra-linguistic referent in the real world. $$$$$ A corpus, for example, can easily contain NPs A, B, C, and D for which Referent(A) U Referent(B) = Referent(C) U Referent(D).

These arguments give support to van Deemter and Kibble (2000), who argue that it is problematic that the annotation strategy assumed in MUC-6 and MUC-7 goes beyond a mark-up of coreference. $$$$$ On Coreferring

NP coreference is related to the task of anaphora resolution, whose goal is to identify an antecedent for an anaphoric NP (i.e., an NP that depends on another NP, specifically its antecedent, for its interpretation) [see van Deemter and Kibble (2000) for a detailed discussion of the difference between the two tasks]. $$$$$ Loosely speaking—and glossing over some difficulties regarding the precise delimitation of anaphora (Sidner 1979; Partee 1989; van Deemter 1992)—an NP al is said to take an NP a2 as its anaphoric antecedent if and only if al depends on az for its interpretation (e.g., Kamp and Reyle 1993).
NP coreference is related to the task of anaphora resolution, whose goal is to identify an antecedent for an anaphoric NP (i.e., an NP that depends on another NP, specifically its antecedent, for its interpretation) [see van Deemter and Kibble (2000) for a detailed discussion of the difference between the two tasks]. $$$$$ (For example, the NP a solution is the (bound) anaphoric antecedent to it in (1b).)
