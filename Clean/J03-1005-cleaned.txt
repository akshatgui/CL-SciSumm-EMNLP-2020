We use a DP-based beam search procedure similar to the one presented in (Tillmann and Ney, 2003). $$$$$ A data-driven beam search approach is presented on the basis of this DP-based algorithm.
We use a DP-based beam search procedure similar to the one presented in (Tillmann and Ney, 2003). $$$$$ We have presented a DP-based beam search algorithm for the IBM-4 translation model.

The same beam-search pruning as described in (Tillmann and Ney, 2003) is used. $$$$$ The implementation described here is similar to that used in beam search speech recognition systems, as presented in Ney et al. (1992).
The same beam-search pruning as described in (Tillmann and Ney, 2003) is used. $$$$$ It is based on the pruning thresholds described in Section 3.8.)

Related works either deal with reordering in general as (Kanthak et al, 2005) or deal with local reordering as (Tillmann and Ney, 2003). $$$$$ Additionally, a set of four states is introduced to deal with grammatical reordering restrictions (e.g., for the translation direction German to English, the word order difference between the two languages is mainly due to the German verb group.
Related works either deal with reordering in general as (Kanthak et al, 2005) or deal with local reordering as (Tillmann and Ney, 2003). $$$$$ In order to deal with the IBM-4 fertility parameters within the DP-based concept, we adopt the distinction between open and closed hypotheses given in Berger et al. (1996).

Wand and Waibel (1997) and Tillmann and Ney (2003) proposed breadth-first search methods, i.e. beam search. $$$$$ In combination with the reordering restrictions, a data-driven beam search organization for the search procedure is proposed.
Wand and Waibel (1997) and Tillmann and Ney (2003) proposed breadth-first search methods, i.e. beam search. $$$$$ Wang and Waibel (1997) presents a search algorithm for the IBM-2 translation model based on the A∗ concept and multiple stacks.

A monotone decoder similar to (Tillmann and Ney, 2003) with a trigram language model is set up for translations. $$$$$ Here, we will use a trigram language model and the translation model presented in Brown et al. (1993).
A monotone decoder similar to (Tillmann and Ney, 2003) with a trigram language model is set up for translations. $$$$$ The language model probability is computed using a trigram language model.

However, their decoder is outperformed by phrase-based decoders such as (Koehn, 2004), (Och et al, 1999), and (Tillmann and Ney, 2003). $$$$$ The actual implementation used during the experiments is described in AlOnaizan et al. (1999) and in Och and Ney (2000).
However, their decoder is outperformed by phrase-based decoders such as (Koehn, 2004), (Och et al, 1999), and (Tillmann and Ney, 2003). $$$$$ Word joining: Target language words are joined using a method similar to the one described in Och, Tillmann, and Ney (1999).

The phrase-based decoder we use is inspired by the decoder described in (Tillmann and Ney, 2003) and similar to that described in (Koehn, 2004). $$$$$ The first is a reimplementation of the stack-based decoder described in Berger et al. (1996).
The phrase-based decoder we use is inspired by the decoder described in (Tillmann and Ney, 2003) and similar to that described in (Koehn, 2004). $$$$$ It is based on the pruning thresholds described in Section 3.8.)

The beam search algorithm attempts to find the translation (i.e., hypothesis that covers all source words) with the minimum cost as in (Tillmann and Ney, 2003) and (Koehn, 2004). The distortion cost is added to the log-linear mixture. $$$$$ Finally, the cost for the optimal tour is obtained in the second-to-last line of the algorithm.
The beam search algorithm attempts to find the translation (i.e., hypothesis that covers all source words) with the minimum cost as in (Tillmann and Ney, 2003) and (Koehn, 2004). The distortion cost is added to the log-linear mixture. $$$$$ We have presented a DP-based beam search algorithm for the IBM-4 translation model.

The word reorderings that are explored by the search algorithm are controlled by two parameters s and w as described in (Tillmann and Ney, 2003). $$$$$ By imposing constraints on the possible word reorderings similar to that described in Berger et al. (1996), the DP-based approach becomes more effective: when the constraints are applied, the number of word reorderings is greatly reduced.
The word reorderings that are explored by the search algorithm are controlled by two parameters s and w as described in (Tillmann and Ney, 2003). $$$$$ A restriction on the possible word reorderings, which is described in Section 3.6, is applied.

Machine Translation Performance using the NIST 2005 Bleu scorer scribed in (Tillmann and Ney, 2003). $$$$$ Word Reordering And A Dynamic Programming Beam Search Algorithm For Statistical Machine Translation
Machine Translation Performance using the NIST 2005 Bleu scorer scribed in (Tillmann and Ney, 2003). $$$$$ This article is about a search procedure for statistical machine translation (MT).

A beam search decoder similar to phrase-based systems (Tillmann and Ney, 2003) is used to translate the Arabic sentence into English. $$$$$ This article will present a DP-based beam search decoder for the IBM-4 translation model.
A beam search decoder similar to phrase-based systems (Tillmann and Ney, 2003) is used to translate the Arabic sentence into English. $$$$$ The implementation described here is similar to that used in beam search speech recognition systems, as presented in Ney et al. (1992).

For details, see (Tillmann and Ney, 2003). $$$$$ 3.9.2 Details for IBM-4 Model.
For details, see (Tillmann and Ney, 2003). $$$$$ (More details can be found in Tillmann [2001] or in the cited papers.)

Our implementation of a monotone-at-punctuation reordering constraint (Tillmann and Ney,2003) requires that all input words before clause separating punctuation have be translated, be forewords afterwards are covered. $$$$$ The average length of the sentence fragments that are separated by punctuation marks is rather small: 4.5 words per fragment.
Our implementation of a monotone-at-punctuation reordering constraint (Tillmann and Ney,2003) requires that all input words before clause separating punctuation have be translated, be forewords afterwards are covered. $$$$$ As for the Germanto-English translation experiments, word reordering is restricted so that it may not cross punctuation boundaries.

In (Tillmann and Ney, 2003), a beam-search algorithm used for TSP is adapted to work with an IBM-4 word-based model and phrase-based model respectively. $$$$$ Here, the model used for the translation experiments is the IBM-4 model.
In (Tillmann and Ney, 2003), a beam-search algorithm used for TSP is adapted to work with an IBM-4 word-based model and phrase-based model respectively. $$$$$ We have presented a DP-based beam search algorithm for the IBM-4 translation model.

Dynamic-programming based beam search algorithms are discussed for both word-based and phrase-based models by Tillmann and Ney (2003) and Tillmann (2006). $$$$$ In this article, we describe an efficient beam search algorithm for statistical machine translation based on dynamic programming (DP).
Dynamic-programming based beam search algorithms are discussed for both word-based and phrase-based models by Tillmann and Ney (2003) and Tillmann (2006). $$$$$ Since the efficiency of the beam search approach is based on restrictions on the allowed coverage vectors C alone, the approach may be used for different types of translation models as well (e.g., for the multiword-based translation model proposed in Och, Tillmann, and Ney [1999]).

In (Tillmann and Ney, 2003) and (Tillmann, 2006), the authors modify a certain Dynamic Programming technique used for TSP for use with an IBM4 word-based model and a phrase-based model respectively. $$$$$ In this article, we describe an efficient beam search algorithm for statistical machine translation based on dynamic programming (DP).
In (Tillmann and Ney, 2003) and (Tillmann, 2006), the authors modify a certain Dynamic Programming technique used for TSP for use with an IBM4 word-based model and a phrase-based model respectively. $$$$$ Tillmann, Vogel, Ney, and Zubiaga (1997) proposes a dynamic programming (DP)–based search algorithm for statistical MT that monotonically translates the input sentence from left to right.

For further details see e.g. (Tillmann and Ney, 2003). $$$$$ 3.9.2 Details for IBM-4 Model.
For further details see e.g. (Tillmann and Ney, 2003). $$$$$ (More details can be found in Tillmann [2001] or in the cited papers.)

Investigations on the IBM constraints (Berger et al, 1996) for single-word based statistical machine translation can be found e.g. in (Tillmann and Ney, 2003). $$$$$ By imposing constraints on the possible word reorderings similar to that described in Berger et al. (1996), the DP-based approach becomes more effective: when the constraints are applied, the number of word reorderings is greatly reduced.
Investigations on the IBM constraints (Berger et al, 1996) for single-word based statistical machine translation can be found e.g. in (Tillmann and Ney, 2003). $$$$$ The first is a reimplementation of the stack-based decoder described in Berger et al. (1996).

The paper contains the following original contributions: 1) the DP-based decoding algorithm in (Tillmann and Ney, 2003) is extended in a formal way to handle phrases and a novel pruning strategy with increased translation speed is presented 2) a novel alignment algorithm is presented that computes a phrase alignment efficiently in the case that it is consistent with an underlying word alignment. $$$$$ To speed up the search, a beam search strategy is used.
The paper contains the following original contributions: 1) the DP-based decoding algorithm in (Tillmann and Ney, 2003) is extended in a formal way to handle phrases and a novel pruning strategy with increased translation speed is presented 2) a novel alignment algorithm is presented that computes a phrase alignment efficiently in the case that it is consistent with an underlying word alignment. $$$$$ We have presented a DP-based beam search algorithm for the IBM-4 translation model.

In these algorithms, a shortest-path search is carried out in one pass over some input along a specific 'direction': in speech recognition the search is time synchronous, the single-word based search algorithm in (Tillmann et al., 1997) is (source) position-synchronous or left-to-right, the search algorithm in (Niessen et al., 1998) is (target) position-synchronous or bottom-to-top, and the search algorithm in (Tillmann and Ney, 2003) is so-called cardinality-synchronous. $$$$$ For this purpose, we present a data-driven beam search algorithm similar to the one used in speech recognition search algorithms (Ney et al. 1992).
In these algorithms, a shortest-path search is carried out in one pass over some input along a specific 'direction': in speech recognition the search is time synchronous, the single-word based search algorithm in (Tillmann et al., 1997) is (source) position-synchronous or left-to-right, the search algorithm in (Niessen et al., 1998) is (target) position-synchronous or bottom-to-top, and the search algorithm in (Tillmann and Ney, 2003) is so-called cardinality-synchronous. $$$$$ For search purposes, we use the inverted alignment concept as introduced in Niessen et al. (1998) and Ney et al.
