In this paper we present an algorithm for generating sentences using unification categorial grammars (UCGs, Zeevat et al 1987) but which extends to any categorial grammar with unification (e.g. categorial unification grammars, Uszkoreit 1986, Karttunen 1987). $$$$$ Categorial Unification Grammars
In this paper we present an algorithm for generating sentences using unification categorial grammars (UCGs, Zeevat et al 1987) but which extends to any categorial grammar with unification (e.g. categorial unification grammars, Uszkoreit 1986, Karttunen 1987). $$$$$ Categorial unification grammars (CUGs) embody the essential properties of both unification and categorial grammar formalisms.

The lexical types are organised into an inheritance hierarchy, constrained by expressions of a simple feature based category description language, inspired by previous attempts to integrate categorial grammars and unification-based grammars, e.g. Uszkoreit (1986) and Zeevat et al (1987). $$$$$ Categorial Unification Grammars
The lexical types are organised into an inheritance hierarchy, constrained by expressions of a simple feature based category description language, inspired by previous attempts to integrate categorial grammars and unification-based grammars, e.g. Uszkoreit (1986) and Zeevat et al (1987). $$$$$ Grammars 1.2.

Unificationbased versions of Categorial Grammar, known as CUG or UCG, have attracted considerable attention recently (see, for instance, Uszkoreit, 1986, Karttunen, 1986, Bouma, 1988, Bouma et al, 1988, and Calder et al, 1988). $$$$$ One of them is the grammar development on the PATR system (Shieber et al, 1983; Shieber, 1984) at SRI.
Unificationbased versions of Categorial Grammar, known as CUG or UCG, have attracted considerable attention recently (see, for instance, Uszkoreit, 1986, Karttunen, 1986, Bouma, 1988, Bouma et al, 1988, and Calder et al, 1988). $$$$$ The @-notation permits this use of templates (Karttunen, 1986)3

Higher order versions of categorial grammars like the ones being produced in the CUG/UCG-frameworks. $$$$$ Categorial Unification Grammars
Higher order versions of categorial grammars like the ones being produced in the CUG/UCG-frameworks. $$$$$ Grammars 1.2.

The family of grammar models that are based on such formalisms include Generalized Phrase Structure Grammar (GPSG) [Gazdar et al 1985], Lexical Functional Grammar (LFG) [Bresnan 1982], Functional Unification Grammar (bUG) [Kay 1984], Head-Driven Phrase Structure Grammar (I-IPSG) [Pollard and Sag 1988], and Categorial Unification Grammar (CUG) [Karttunen 1986, Uszkoreit 1986, Zeevat et al 1987]. $$$$$ Both terms, unification grammar and categorial grammar are used for classes of grammar formalisms, for individual grammar formalisms, and finally for grammars that are written in these formalisms.
The family of grammar models that are based on such formalisms include Generalized Phrase Structure Grammar (GPSG) [Gazdar et al 1985], Lexical Functional Grammar (LFG) [Bresnan 1982], Functional Unification Grammar (bUG) [Kay 1984], Head-Driven Phrase Structure Grammar (I-IPSG) [Pollard and Sag 1988], and Categorial Unification Grammar (CUG) [Karttunen 1986, Uszkoreit 1986, Zeevat et al 1987]. $$$$$ As I indicated in the previous section, I consider CUG to stand for a family of grammar formalisms that might be described as the intersection of categorial and 192 unification grammar formalisms.

Use of unification (a core operation in HPSG) in CG dates at least as far back as Karttunen (1986, 1989), Uszkoreit (1986), and Zeevat (1988). $$$$$ What has been proposed so far is therefore not a new grammar formalism and even less a linguistic framework.
Use of unification (a core operation in HPSG) in CG dates at least as far back as Karttunen (1986, 1989), Uszkoreit (1986), and Zeevat (1988). $$$$$ The @-notation permits this use of templates (Karttunen, 1986)3
