Therefore, van Deemter (2002) has extended the set of descriptors to boolean combinations of attributes, including negations. $$$$$ A is the list of Attributes; L is the set of Attribute/Value combinations returned by the algorithm.
Therefore, van Deemter (2002) has extended the set of descriptors to boolean combinations of attributes, including negations. $$$$$ , Pn whose extension equals a given target set S (van Deemter 2000).

Recent extensions address some of its shortcomings, such as negated and disjoined properties (van Deemter, 2002) and an account of salience for generating contextually appropriate shorter REs (Krahmer and Theune, 2002). $$$$$ Generating Referring Expressions

The Context-Sensitive extension (Krahmer and Theune, 2002) is able to generate referring expressions for the most salient entity in a context; the Boolean Expressions algorithm (van Deemter, 2002) is able to derive expressions containing boolean operators, as in the cup that does not have a handle; and the Sets algorithm (van Deemter, 2002) extends the basic approach to references to sets, as in the red cups. $$$$$ Generating Referring Expressions

Recently, algorithms have been applied to the identification of sets of objects rather than individuals [Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001], and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations [van Deemter 2002]. $$$$$ Stone 2000).
Recently, algorithms have been applied to the identification of sets of objects rather than individuals [Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001], and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations [van Deemter 2002]. $$$$$ For example, they do not involve relational descriptions (Dale and Haddock 1991; Horacek 1997; Krahmer, van Erk, and Verleg 2001) or properties that are vague or context dependent (van Deemter 2000).

This is because these operators appear only in embedded boolean combinations [van Deemter 2002], which are the basis for building larger varieties of expressions [Horacek 2004]. $$$$$ Generating Referring Expressions

Subsequent work on referring expression generation has expanded the logical framework to allow reference by negation (the dog that is not black) and references to multiple entities (the brown or black dogs) (van Deemter, 2002), explored different search algorithms for finding the minimal description (e.g., Horacek (2003)) and offered different representation frameworks like graph theory (Krahmer et al, 2003) as alternatives to AVMs. $$$$$ Two of the three properties in DOG n POODLE n BLACK are redundant, however.
Subsequent work on referring expression generation has expanded the logical framework to allow reference by negation (the dog that is not black) and references to multiple entities (the brown or black dogs) (van Deemter, 2002), explored different search algorithms for finding the minimal description (e.g., Horacek (2003)) and offered different representation frameworks like graph theory (Krahmer et al, 2003) as alternatives to AVMs. $$$$$ If we modify the example by letting [[BLACK]] = {a, c} (rather than {a, b, c}) and S = {b, c, d, e} (rather than S = {a, b, d, e}), then the description L = {BLACK U POODLE} is found.

Transformation Rules $$$$$ , Pn whose extension equals a given target set S (van Deemter 2000).
Transformation Rules $$$$$ Lemma Let cp be a CNF formula whose longest union has a length of n (i.e., it conjoins n literals).

GRE has been dominated by Dale and Reiter's (1995) Incremental Algorithm (IA), one version of which, generalised to deal with non-disjunctive plural references, is shown in Algorithm 1 (van Deemter, 2002). $$$$$ The Incremental Algorithm of Dale and Reiter (1995) singles out a target object from among some larger domain of entities.
GRE has been dominated by Dale and Reiter's (1995) Incremental Algorithm (IA), one version of which, generalised to deal with non-disjunctive plural references, is shown in Algorithm 1 (van Deemter, 2002). $$$$$ In particular, we have shown Dale and Reiter’s (1995) Incremental Algorithm to be intersectively incomplete with respect to Attributes that have overlapping Values and (less surprisingly) in some situations where the class of properties is infinitely large.

Such a description would be returned by a generalised version of Algorithm 1 proposed by van Deemter (2002). $$$$$ A is the list of Attributes; L is the set of Attribute/Value combinations returned by the algorithm.
Such a description would be returned by a generalised version of Algorithm 1 proposed by van Deemter (2002). $$$$$ This version of the algorithm will be called D&RAtt.

Unlike van Deemter (2002), we only focus on disjunction, leaving negation aside. $$$$$ In the next two sections, we will investigate how negation and disjunction can be taken into account in GRE.
Unlike van Deemter (2002), we only focus on disjunction, leaving negation aside. $$$$$ The present paper will focus on another approach to Boolean descriptions, which takes the Incremental Algorithm as its point of departure (van Deemter 2001).

Evaluation results showed that these principles are on the right track, with significantly better performance over a previous model (van Deemter, 2002). $$$$$ It is a “hillclimbing” algorithm, which finds better and better approximations of the target set {r} by accumulating more and more properties—hence the term Incremental.
Evaluation results showed that these principles are on the right track, with significantly better performance over a previous model (van Deemter, 2002). $$$$$ Infinity of the set of distractors results in a different problem.

For instance, the classical Dale and Reiter algorithms compute purely conjunctive formulas; van Deemter (2002) extends this language by adding the other propositional connectives, whereas Dale and Haddock (1991) extends it by allowing existential quantification. $$$$$ Reiter and Dale 2000).
For instance, the classical Dale and Reiter algorithms compute purely conjunctive formulas; van Deemter (2002) extends this language by adding the other propositional connectives, whereas Dale and Haddock (1991) extends it by allowing existential quantification. $$$$$ For example, they do not involve relational descriptions (Dale and Haddock 1991; Horacek 1997; Krahmer, van Erk, and Verleg 2001) or properties that are vague or context dependent (van Deemter 2000).

Although we agree with van Deemter (2002) and others that the careful use of negation and disjunction can improve REs, these connectives must not be overused. $$$$$ None of this can be corrected, since the algorithm does not use backtracking.
Although we agree with van Deemter (2002) and others that the careful use of negation and disjunction can improve REs, these connectives must not be overused. $$$$$ In the next two sections, we will investigate how negation and disjunction can be taken into account in GRE.

Recently, algorithms have also been developed to the identification of sets of objects rather than individuals (Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001), and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations (van Deemter 2002). $$$$$ Stone 2000).
Recently, algorithms have also been developed to the identification of sets of objects rather than individuals (Bateman 1999, Stone 2000, Krahmer, v. Erk, and Verweg 2001), and the repertoire of descriptions has been extended to boolean combinations of attributes, including negations (van Deemter 2002). $$$$$ For example, they do not involve relational descriptions (Dale and Haddock 1991; Horacek 1997; Krahmer, van Erk, and Verleg 2001) or properties that are vague or context dependent (van Deemter 2000).

An exception to this method is the work by Paraboni and van Deemter (2002) who use hierarchical object representations to refer to parts of a book (figures, sections., etc.). $$$$$ Also, Values may derive from particular parts or aspects of an object; for example, if an object counts as METAL (PLASTIC) because it has some METAL (PLASTIC) parts, then it may be listed as both METAL and PLASTIC.
An exception to this method is the work by Paraboni and van Deemter (2002) who use hierarchical object representations to refer to parts of a book (figures, sections., etc.). $$$$$ Recent work also highlights an interesting mirror image of GRE complexity
