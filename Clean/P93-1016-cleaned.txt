This also distinguishes our approach from another major stream of object-oriented natural anguage parsing which is almost entirely concerned with implementational aspects of object-oriented programming, e.g., Habert (1991), Lin (1993) or Yonezawa& amp; Ohsawa (1994). $$$$$ Section 5 sketches an object-oriented implementation of the parser.
This also distinguishes our approach from another major stream of object-oriented natural anguage parsing which is almost entirely concerned with implementational aspects of object-oriented programming, e.g., Habert (1991), Lin (1993) or Yonezawa& amp; Ohsawa (1994). $$$$$ The parser has been implemented in C++, an object-oriented extension of C. The object-oriented paradigm makes the relationships between nodes and links in the grammar network and their software counterparts explicit and direct.

Throughout this paper we used syntactic features generated by the Minipar depend ency parser (Lin, 1993). $$$$$ This paper presents a principle-based parser that avoids the overgeneration problem by applying principles to descriptions of the structures, instead of the structures themselves.
Throughout this paper we used syntactic features generated by the Minipar depend ency parser (Lin, 1993). $$$$$ The movement attributes are generated at the parent node of the initial trace.

We obtain candidate properties by parsing a large textual corpus with the Minipar parser (Lin 1993). $$$$$ Principle-Based Parsing Without Overgeneration
We obtain candidate properties by parsing a large textual corpus with the Minipar parser (Lin 1993). $$$$$ Therefore, a large number of structures will be constructed and evaluated by the attribution rules, thus leading to a serious overgeneration problem.

We used the Minipar parser (Lin 1993) to analyze each sentence and we collected the frequency counts of the grammatical contexts output by Minipar and used them to compute the probability and point wise mutual information values from Sections 4.1 and 4.2. $$$$$ The attribute vectors used here are similar to those in unification based grammars/parsers.
We used the Minipar parser (Lin 1993) to analyze each sentence and we collected the frequency counts of the grammatical contexts output by Minipar and used them to compute the probability and point wise mutual information values from Sections 4.1 and 4.2. $$$$$ That is, nonatomic attribute values are vectors that consist only of atomic attribute values.

We use Minipar (Lin, 1993), which produces functional relations for the components in a sentence, including subject and object relations with respect to a verb. $$$$$ The sentence is successfully parsed if an item is found at IF or CP node whose surface string is the input sentence.
We use Minipar (Lin, 1993), which produces functional relations for the components in a sentence, including subject and object relations with respect to a verb. $$$$$ In our model, each syntactic category is represented by an object.

The dataset is identical to the one used by TDP and has been constructed in the same wayas the dataset used by E&P: it contains those gold standard instances of verbs that have according to the analyses produced by the MiniPar parser (Lin, 1993) an overtly realized subject and object. $$$$$ Section 5 sketches an object-oriented implementation of the parser.
The dataset is identical to the one used by TDP and has been constructed in the same wayas the dataset used by E&P: it contains those gold standard instances of verbs that have according to the analyses produced by the MiniPar parser (Lin, 1993) an overtly realized subject and object. $$$$$ Communication via message passing is reflected in the message passing metaphor used in object-oriented languages.

We build the space from a Minipar-parsed version of the British National Corpus with dependency parses obtained from Minipar (Lin, 1993). $$$$$ The attribute values of these items are obtained from the lexicon.
We build the space from a Minipar-parsed version of the British National Corpus with dependency parses obtained from Minipar (Lin, 1993). $$$$$ The sentence is successfully parsed if an item is found at IF or CP node whose surface string is the input sentence.

For the current paper, we constructed a new subset of LexSub we call LEXSUB-PARA by parsing LexSub with Minipar (Lin, 1993) and extracting all 177 sentences with transitive verbs that had overtly realized subjects and objects, regardless of voice. $$$$$ For example, V:NP is a node representing normal transitive verbs which take an NP as complement.
For the current paper, we constructed a new subset of LexSub we call LEXSUB-PARA by parsing LexSub with Minipar (Lin, 1993) and extracting all 177 sentences with transitive verbs that had overtly realized subjects and objects, regardless of voice. $$$$$ Nodes and links are implemented as objects.

English documents were parsed with the syntactic analyzer (Lin, 1993). $$$$$ The sentence is successfully parsed if an item is found at IF or CP node whose surface string is the input sentence.
English documents were parsed with the syntactic analyzer (Lin, 1993). $$$$$ In our model, each syntactic category is represented by an object.

This space was built from BNC dependency parses obtained from Minipar (Lin, 1993). $$$$$ The attribute values of these items are obtained from the lexicon.
This space was built from BNC dependency parses obtained from Minipar (Lin, 1993). $$$$$ The complete parse tree (Figure 2.b) is obtained by recursively tracing the origins of i4 and in from NP and Ibar respectively.

Verbs and possible senses in our corpus Both corpora were lemmatized and part-of-speech (POS) tagged using Minipar (Lin, 1993) and Mxpost (Ratnaparkhi, 1996) ,respectivelly. $$$$$ Many methods have been proposed to alleviate the overgeneration problem by detecting illicit structures as early as possible, such as optimal ordering of principles (Fong, 1991), coroutining (Dorr, 1991; Johnson, 1991).
Verbs and possible senses in our corpus Both corpora were lemmatized and part-of-speech (POS) tagged using Minipar (Lin, 1993) and Mxpost (Ratnaparkhi, 1996) ,respectivelly. $$$$$ For example, V:NP is a node representing normal transitive verbs which take an NP as complement.

We used Minipar (Lin, 1993), a dependency-based parser, in order to identify verbs, nouns, verb dependencies and noun dependencies. $$$$$ Similarly, V:IP denotes verbs taking a CP complement, N:CP represents nouns taking a CP complement. is illustrated in Figure 2.a.
We used Minipar (Lin, 1993), a dependency-based parser, in order to identify verbs, nouns, verb dependencies and noun dependencies. $$$$$ The attribute vectors used here are similar to those in unification based grammars/parsers.

We investigated four individual approaches for the syntax-features, a regular-expression-based quasi-parser, a system based on Dekang Lin's Mini Par (Lin, 1993), a system based on the Collins parser (Collins, 1999), and one based on the CMU Link Grammar Parser (Sleator and Temperley, 1993), as well as a family of voting-based combination schemes. $$$$$ Principle-Based Parsing Without Overgeneration
We investigated four individual approaches for the syntax-features, a regular-expression-based quasi-parser, a system based on Dekang Lin's Mini Par (Lin, 1993), a system based on the Collins parser (Collins, 1999), and one based on the CMU Link Grammar Parser (Sleator and Temperley, 1993), as well as a family of voting-based combination schemes. $$$$$ A key issue in building a principle-based parser is how to procedurally interpret the principles.

The syntactic relations are generated by the Minipar dependency parser (Lin, 1993). $$$$$ Since GB principles are constraints over syntactic structures, one way to implement the principles is to This implementation of GB theory is very inefficient, since there are a large number of structures being generated and then filtered out.
The syntactic relations are generated by the Minipar dependency parser (Lin, 1993). $$$$$ The movement attributes are generated at the parent node of the initial trace.

The experiment was conducted using an 18 million tokens subset of the Reuters RCV1corpus, parsed by Lin's Minipar dependency parser (Lin, 1993). $$$$$ The message passing algorithm presented here is an extension to a message passing algorithm for context-free grammars (Lin and Goebel, 1993).
The experiment was conducted using an 18 million tokens subset of the Reuters RCV1corpus, parsed by Lin's Minipar dependency parser (Lin, 1993). $$$$$ The implementation of the parser has been tested with example sentences from Chapters 410, 15-18 of (van Riemsdijk and Williams, 1986).

We used the dv package1 to compute type vectors from a Minipar (Lin, 1993) parse of the BNC. $$$$$ Otherwise, the movement is of type np.
We used the dv package1 to compute type vectors from a Minipar (Lin, 1993) parse of the BNC. $$$$$ The attribute vectors used here are similar to those in unification based grammars/parsers.

Specifically, we assume MINIPAR-style (Lin, 1993) dependency trees where nodes represent text expressions and edges represent the syntactic relations between them. $$$$$ The nodes in the networks represent syntactic categories.
Specifically, we assume MINIPAR-style (Lin, 1993) dependency trees where nodes represent text expressions and edges represent the syntactic relations between them. $$$$$ The combinations of items represent constructions of larger parse trees from smaller ones.

Three parsers fulfilled all the requirements: Link Grammar (Sleator and Temperley, 1993), Minipar (Lin, 1993) and (Carroll and Briscoe, 2001). $$$$$ A link only allows items that satisfy its constraints to pass through.
Three parsers fulfilled all the requirements: Link Grammar (Sleator and Temperley, 1993), Minipar (Lin, 1993) and (Carroll and Briscoe, 2001). $$$$$ The attribute vectors used here are similar to those in unification based grammars/parsers.

We used the Mini par parser (Lin 1993) to match DIRT patterns in the text. $$$$$ Unlike rule-based grammars that use a large number of rules to describe patterns in a language, Government-Binding (GB) Theory (Chomsky, 1981; Haegeman, 1991; van Riemsdijk and Williams, 1986) explains these patterns in terms of more foundmental and universal principles.
We used the Mini par parser (Lin 1993) to match DIRT patterns in the text. $$$$$ We encode the grammar, as well as the parser, in a network (Figure 1).

The syntactic relations were extracted using the Minipar parser (Lin, 1993). $$$$$ The nodes in the networks represent syntactic categories.
The syntactic relations were extracted using the Minipar parser (Lin, 1993). $$$$$ In our model, each syntactic category is represented by an object.
