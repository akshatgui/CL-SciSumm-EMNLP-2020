 $$$$$ More colloquially, (7) says that the output of rightward (leftward) composition may not compose or apply over anything to is right (left).
 $$$$$ Future work should continue by eliminating the spurious ambiguities that arise from grammatical or lexical type-raising.

Eisner (1996, p.81) in fact suggested that the labeling system can be implemented in the grammar by templates, or in the processor by labeling the chart entries. $$$$$ The 24 templates schematized in (10) replace the two templates of (4).
Eisner (1996, p.81) in fact suggested that the labeling system can be implemented in the grammar by templates, or in the processor by labeling the chart entries. $$$$$ In particular, the polynomial-time, polynomialspace CCG chart parser of (Vijay-Shanker & Weir, 1993) can be trivially adapted to respect the constraints by tagging chart entries.

But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. $$$$$ That is, whenever the lexicon contains an entry of a certain category X, with semantics x, it also contains one with (say) category T/ (T \X) and interpretation Ap.p(x).
But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. $$$$$ If type-raising is lexical, then the definitions of this paper do not recognize (19) as a spurious ambiguity, because the two parses are now, technically speaking, analyses of different sentences.

The C&C parser employs the normal-form constraints of Eisner (1996) to address spurious ambiguity in 1-best parsing. $$$$$ Efficient Normal-Form Parsing For Combinatory Categorial Grammar
The C&C parser employs the normal-form constraints of Eisner (1996) to address spurious ambiguity in 1-best parsing. $$$$$ All other parses are suppressed by simple normal-form constraints that are enforced throughout the parsing process.

The second strategy is to use Eisner's normal form constraints (Eisner, 1996). $$$$$ All other parses are suppressed by simple normal-form constraints that are enforced throughout the parsing process.
The second strategy is to use Eisner's normal form constraints (Eisner, 1996). $$$$$ Two parsing algorithms have been presented for practical use.

 $$$$$ More colloquially, (7) says that the output of rightward (leftward) composition may not compose or apply over anything to is right (left).
 $$$$$ Future work should continue by eliminating the spurious ambiguities that arise from grammatical or lexical type-raising.

The parser only used a subset of CCG, pureCCG (Eisner, 1996), consisting of the Application and Composition rules. $$$$$ The key to efficiency, we will (4) Forward generalized composition
The parser only used a subset of CCG, pureCCG (Eisner, 1996), consisting of the Application and Composition rules. $$$$$ Bn

We propose and implement a modification of the Eisner (1996) normal form to account for generalized composition of bounded degree, and an extension to deal with grammatical type-raising. $$$$$ In principle one could proceed without grammatical type-raising

Eisner (1996, section 5) also provides a safe and complete parsing algorithm which can return non-NF derivations when necessary to preseve an interpretation if composition is bounded or the grammar is restricted in other (arbitrary) ways. $$$$$ CCG then provides a derived interpretation in the model for the complete tree.
Eisner (1996, section 5) also provides a safe and complete parsing algorithm which can return non-NF derivations when necessary to preseve an interpretation if composition is bounded or the grammar is restricted in other (arbitrary) ways. $$$$$ Both algorithms are safe, complete, and efficient.

We have proposed a modification and extension of Eisner (1996)'s normal form that is more appropriate for commonly used variants of CCG with grammatical type-raising and generalized composition of bounded degree, as well as some non-combinatory extensions to CCG. $$$$$ Efficient Normal-Form Parsing For Combinatory Categorial Grammar
We have proposed a modification and extension of Eisner (1996)'s normal form that is more appropriate for commonly used variants of CCG with grammatical type-raising and generalized composition of bounded degree, as well as some non-combinatory extensions to CCG. $$$$$ In principle one could proceed without grammatical type-raising

Hockenmaier (2003a) uses a model which favours only one of the derivations leading to aderived structure, namely the normal-form derivation (Eisner, 1996). $$$$$ Efficient Normal-Form Parsing For Combinatory Categorial Grammar
Hockenmaier (2003a) uses a model which favours only one of the derivations leading to aderived structure, namely the normal-form derivation (Eisner, 1996). $$$$$ Indeed, one might implement (7) by modifying CCG's phrase-structure grammar.

For the normal-form model we were able to reduce the size of the charts considerably by applying two types of restriction to the parser $$$$$ Any sort of chart left-associative. parser or non-deterministic shift-reduce parser will The results herein apply to the TAG-equivalent do.
For the normal-form model we were able to reduce the size of the charts considerably by applying two types of restriction to the parser $$$$$ It is trivial to modify any sort of CCG parser to find only the normal-form parses.

Our transformation is also technically related to the normal form construction for CCG parsing presented by Eisner (1996). $$$$$ Efficient Normal-Form Parsing For Combinatory Categorial Grammar
Our transformation is also technically related to the normal form construction for CCG parsing presented by Eisner (1996). $$$$$ Two parsing algorithms have been presented for practical use.

Consider the derivations in Figures 1 and 2, which show a normal form derivation (Eisner, 1996) and fully incremental derivation, respectively. $$$$$ If x and y are tends to like,&quot; thus losing the ability to conjoin such categories, then x/y (respectively x\y) is the cat- constituents or subcategorize for them as a class. egory of an incomplete x that is missing a y at its (Pareschi & Steedman, 1987) do tackle the CCG right (respectively left).
Consider the derivations in Figures 1 and 2, which show a normal form derivation (Eisner, 1996) and fully incremental derivation, respectively. $$$$$ This is usually true

CCG parsers often limit the use of the combinatory rules (in particular $$$$$ Efficient Normal-Form Parsing For Combinatory Categorial Grammar
CCG parsers often limit the use of the combinatory rules (in particular $$$$$ It is not hard to see that (7a) eliminates all but right-branching parses of &quot;forward chains&quot; like A/B B/C C or A/B/C C/D D/E/F/G G/H, and that (7b) eliminates all but left-branching parses of &quot;backward chains.&quot; (Thus every functor will get its arguments, if possible, before it becomes an argument itself.)

Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. $$$$$ All other parses are suppressed by simple normal-form constraints that are enforced throughout the parsing process.
Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. $$$$$ PreferableTo may be defined at whim to Since the new parser must be able to generate a choose the parse discovered first, the more leftnon-NF parse when no equivalent NF parse is avail- branching parse, or the parse with fewer nonable, its method of controlling spurious ambiguity standard constituents.

In this section, we show that the D rules fit naturally within standard normal form constraints for CCG parsing (Eisner, 1996), by providing both combinatory and logical bases for D. $$$$$ Efficient Normal-Form Parsing For Combinatory Categorial Grammar
In this section, we show that the D rules fit naturally within standard normal form constraints for CCG parsing (Eisner, 1996), by providing both combinatory and logical bases for D. $$$$$ All other parses are suppressed by simple normal-form constraints that are enforced throughout the parsing process.

Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). $$$$$ This paper presents a simple and flexible CCG parsing technique that prevents any such explosion of redundant CCG derivations.
Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). $$$$$ These normal-form results for pure CCG lead directly to useful parsers for real, restricted CCG grammars.

One set are the normal form constraints, as described by Eisner (1996). $$$$$ Efficient Normal-Form Parsing For Combinatory Categorial Grammar
One set are the normal form constraints, as described by Eisner (1996). $$$$$ All other parses are suppressed by simple normal-form constraints that are enforced throughout the parsing process.

We applied the same normal-form restrictions used in Clark and Curran (2004b) $$$$$ Efficient Normal-Form Parsing For Combinatory Categorial Grammar
We applied the same normal-form restrictions used in Clark and Curran (2004b) $$$$$ All other parses are suppressed by simple normal-form constraints that are enforced throughout the parsing process.
