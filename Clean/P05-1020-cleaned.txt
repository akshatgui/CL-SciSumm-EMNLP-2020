(Ng, 2005) treats coreference resolution as a problem of ranking candidate partitions generated by a set of coreference systems. $$$$$ In this paper, we view coreference resolution as a problem of ranking candidate partitions generated by different coreference systems.
(Ng, 2005) treats coreference resolution as a problem of ranking candidate partitions generated by a set of coreference systems. $$$$$ Ranking candidate partitions.

The main difference between this approach and ours is that (Ng, 2005)'s approach takes coreference resolution one step further, by comparing the results of multiple systems, while our system is a single resolver; furthermore, he emphasizes the global optimization of ranking clusters obtained locally, whereas our focus is on globally optimizing the clusterization method inside the resolver. $$$$$ Our approach.
The main difference between this approach and ours is that (Ng, 2005)'s approach takes coreference resolution one step further, by comparing the results of multiple systems, while our system is a single resolver; furthermore, he emphasizes the global optimization of ranking clusters obtained locally, whereas our focus is on globally optimizing the clusterization method inside the resolver. $$$$$ Our approach.

There are many different training example generation algorithms, e.g., McCarthy and Lehnert's method, Soon et als method, Ng and Cardies method (Ng, 2005). $$$$$ In an attempt to reduce the training time, Soon et al.’s method creates a smaller number of training instances than McCarthy and Lehnert’s.
There are many different training example generation algorithms, e.g., McCarthy and Lehnert's method, Soon et als method, Ng and Cardies method (Ng, 2005). $$$$$ Negative instances are generated as in Soon et al.’s method.

Similar to many previous works on co-reference (Ng, 2005), we cast the problem as a classification task and solve it in two steps $$$$$ Specifically, a classifier is first trained to determine whether two NPs in a document are co-referring or not.
Similar to many previous works on co-reference (Ng, 2005), we cast the problem as a classification task and solve it in two steps $$$$$ A learning-based coreference system can be defined by four elements

To our knowledge, the best results on this dataset were obtained by the meta-classification scheme of Ng (2005). $$$$$ To our knowledge, our work is the first attempt to optimize a ranker for clustering-level accuracy.
To our knowledge, the best results on this dataset were obtained by the meta-classification scheme of Ng (2005). $$$$$ In particular, the best result for BNEWS is achieved using only method-based features, whereas the best result for NPAPER is obtained using only partitionbased features.

Although our train-test splits may differ slightly, the best B-Cubed F1 score reported in Ng (2005) is 69.3%, which is considerably lower than the 79.3% obtained with our method. $$$$$ Ng and Cardie’s system, on the other hand, employs RIPPER to train a coreference classifier on instances created by N&C’s method and represented by N&C’s feature set, inducing a partition on the given NPs via best-first clustering.
Although our train-test splits may differ slightly, the best B-Cubed F1 score reported in Ng (2005) is 69.3%, which is considerably lower than the 79.3% obtained with our method. $$$$$ In particular, the best result for BNEWS is achieved using only method-based features, whereas the best result for NPAPER is obtained using only partitionbased features.

Ng (2005) learns a meta-classifier to choose the best prediction from the output of several coreference systems. $$$$$ Ng and Cardie’s system, on the other hand, employs RIPPER to train a coreference classifier on instances created by N&C’s method and represented by N&C’s feature set, inducing a partition on the given NPs via best-first clustering.
Ng (2005) learns a meta-classifier to choose the best prediction from the output of several coreference systems. $$$$$ So, we apply a perfect ranking model, which uses an oracle to choose the best candidate partition for each test text.

This could be incorporated in a ranking scheme, as in Ng (2005). $$$$$ Ranking candidate partitions.
This could be incorporated in a ranking scheme, as in Ng (2005). $$$$$ Random ranking.

The results are comparable to those reported in (Ng, 2005) which uses similar features and gets an F-measure of about 62% for the same data set. $$$$$ The baseline results are shown in rows 1 and 2 of Table 3, where performance is reported in terms of recall, precision, and F-measure.
The results are comparable to those reported in (Ng, 2005) which uses similar features and gets an F-measure of about 62% for the same data set. $$$$$ Recall that our approach uses labeled data to train both the coreference classifiers and the ranking model.

 $$$$$ We consider three learning algorithms, namely, the C4.5 decision tree induction system (Quinlan, 1993), the RIPPER rule learning algorithm (Cohen, 1995), and maximum entropy classification (Berger et al., 1996).
 $$$$$ We thank the three anonymous reviewers for their valuable comments on an earlier draft of the paper.

 $$$$$ We consider three learning algorithms, namely, the C4.5 decision tree induction system (Quinlan, 1993), the RIPPER rule learning algorithm (Cohen, 1995), and maximum entropy classification (Berger et al., 1996).
 $$$$$ We thank the three anonymous reviewers for their valuable comments on an earlier draft of the paper.

MUC and B3 metrics (Ng, 2005a). $$$$$ We evaluate our approach on three standard coreference data sets using two different scoring metrics.
MUC and B3 metrics (Ng, 2005a). $$$$$ In our experiments, our approach compares favorably to two state-of-the-art coreference systems adopting the standard machine learning approach, outperforming them by as much as 4–7% on the three data sets for one of the performance metrics.

Recent work has examined such models; Luo et al. (2004) using Bell trees, and McCallum and Wellner (2004) using conditional random fields, and Ng (2005) using rerankers. $$$$$ (2004)).
Recent work has examined such models; Luo et al. (2004) using Bell trees, and McCallum and Wellner (2004) using conditional random fields, and Ng (2005) using rerankers. $$$$$ McCallum and Wellner (2003) and Zelenko et al. (2004) have employed graph-based partitioning algorithms such as correlation clustering (Bansal et al., 2002).

A third global approach is offered by Ng (2005), who proposes a global reranking over partitions generated by different coreference systems. $$$$$ Machine Learning For Coreference Resolution

Other work on global models of coreference (as opposed to pairwise models) has included $$$$$ (2004)).
Other work on global models of coreference (as opposed to pairwise models) has included $$$$$ McCallum and Wellner (2003) and Zelenko et al. (2004) have employed graph-based partitioning algorithms such as correlation clustering (Bansal et al., 2002).

Similarly, the method of (Ng, 2005) ranks base models according to their performance on separate tuning set, and then uses the highest-ranked base model for predicting on test documents. $$$$$ Given a test text, we use our coreference systems to create candidate partitions as in training, and select the highest-ranked partition according to the ranking model to be the final partition.3 The rest of this section describes how we select these learning-based coreference systems and acquire the ranking model.
Similarly, the method of (Ng, 2005) ranks base models according to their performance on separate tuning set, and then uses the highest-ranked base model for predicting on test documents. $$$$$ So, we apply a perfect ranking model, which uses an oracle to choose the best candidate partition for each test text.

The results are comparable to those reported in (Ng, 2005) which uses similar features and gets an F-measure ranging in 50-60% for the same data set. $$$$$ The baseline results are shown in rows 1 and 2 of Table 3, where performance is reported in terms of recall, precision, and F-measure.
The results are comparable to those reported in (Ng, 2005) which uses similar features and gets an F-measure ranging in 50-60% for the same data set. $$$$$ Recall that our approach uses labeled data to train both the coreference classifiers and the ranking model.

According to Ng (2005), most learning based coreference systems can be defined by four elements $$$$$ A learning-based coreference system can be defined by four elements

This strategy has been described as best-first clustering by Ng (2005). $$$$$ We employ two feature sets for representing an instance, as described below.
This strategy has been described as best-first clustering by Ng (2005). $$$$$ We employ three clustering algorithms, as described below.

In contrast to Ng (2005), Ng and Cardie (2002a) proposed a rule-induction system with rule pruning. $$$$$ See Ng and Cardie (2002b) for details.
In contrast to Ng (2005), Ng and Cardie (2002a) proposed a rule-induction system with rule pruning. $$$$$ We consider three learning algorithms, namely, the C4.5 decision tree induction system (Quinlan, 1993), the RIPPER rule learning algorithm (Cohen, 1995), and maximum entropy classification (Berger et al., 1996).
