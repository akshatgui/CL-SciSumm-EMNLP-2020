If evaluated against the requirements for teaching environments discussed in (Loper and Bird, 2002), GATE covers them all quite well. $$$$$ NLTK covers symbolic and statistical natural language processing, and is interfaced to annotated corpora.
If evaluated against the requirements for teaching environments discussed in (Loper and Bird, 2002), GATE covers them all quite well. $$$$$ In surveying the available languages, we believe that Python offers an especially good fit to the above requirements.

However, other such modules, e.g., those from NLTK (Loper and Bird, 2002), can be used for such assignments. $$$$$ NLTK can be used to create student assignments of varying difficulty and scope.
However, other such modules, e.g., those from NLTK (Loper and Bird, 2002), can be used for such assignments. $$$$$ The wide variety of existing modules provide many opportunities for creating these simple assignments.

We use the Punkt sentence splitter from NLTK (Loper and Bird, 2002) to perform both sentence and word segmentation on each text chunk. $$$$$ However, it should be efficient enough that students can use their NLP systems to perform real tasks.
We use the Punkt sentence splitter from NLTK (Loper and Bird, 2002) to perform both sentence and word segmentation on each text chunk. $$$$$ Finally, it can be used to show how these individual rules combine to find a complete parse for a given sentence.

NLTK, the Natural Language Toolkit, is a suite of Python modules providing many NLP data types, processing tasks, corpus samples and readers, together with animated algorithms, tutorials, and problem sets (Loper and Bird, 2002). $$$$$ NLTK: The Natural Language Toolkit
NLTK, the Natural Language Toolkit, is a suite of Python modules providing many NLP data types, processing tasks, corpus samples and readers, together with animated algorithms, tutorials, and problem sets (Loper and Bird, 2002). $$$$$ NLTK, the Natural Language Toolkit, is a suite of open source program modules, tutorials and problem sets, providing ready-to-use computational linguistics courseware.

For English and German documents in all experiments, we removed stop words (Loper and Bird, 2002), stemmed words (Porter and Boulton, 1970), and created a vocabulary of the most frequent 5000 words per language (this vocabulary limit was mostly done to ensure that the dictionary-based bridge was of manageable size). $$$$$ The token module provides basic classes for processing individual elements of text, such as words or sentences.
For English and German documents in all experiments, we removed stop words (Loper and Bird, 2002), stemmed words (Porter and Boulton, 1970), and created a vocabulary of the most frequent 5000 words per language (this vocabulary limit was mostly done to ensure that the dictionary-based bridge was of manageable size). $$$$$ A variety of toolkits have been created for research or R&D purposes.

We have not yet used the Natural Language Toolkit (Loper and Bird, 2002) (see Section 3.1) in this course. $$$$$ NLTK: The Natural Language Toolkit
We have not yet used the Natural Language Toolkit (Loper and Bird, 2002) (see Section 3.1) in this course. $$$$$ We describe NLTK, the Natural Language Toolkit, which we have developed in conjunction with a course we have taught at the University of Pennsylvania.

Finally, all texts were lemmatized using Porter's stemmer (1980) for English and Snowballstemmers for other languages using an implementation provided by the NLTK (Loper and Bird, 2002). $$$$$ It is automatically extracted from docstring comments in the Python source code, using Epydoc (Loper, 2002).
Finally, all texts were lemmatized using Porter's stemmer (1980) for English and Snowballstemmers for other languages using an implementation provided by the NLTK (Loper and Bird, 2002). $$$$$ The experience of using NLTK was very positive, both for us and for the students.

We strip unnecessary HTML tags and Wiki templates with mwlib5 and split sentences with NLTK (Loper and Bird, 2002). $$$$$ The token module provides basic classes for processing individual elements of text, such as words or sentences.
We strip unnecessary HTML tags and Wiki templates with mwlib5 and split sentences with NLTK (Loper and Bird, 2002). $$$$$ They then constructed chunks from any sequence of tags that occurred in a noun phrase more than 50% of the time.

Some popular options include the NLTK (Loper and Bird, 2002), CSLU (Cole, 1999), Trindi (Larsson and Traum, 2000) and Regulus (Rayner et al, 2003) toolkits. $$$$$ Recent work includes (Copestake, 2000; Baldridge et al., 2002a).
Some popular options include the NLTK (Loper and Bird, 2002), CSLU (Cole, 1999), Trindi (Larsson and Traum, 2000) and Regulus (Rayner et al, 2003) toolkits. $$$$$ Examples include the CMU-Cambridge Statistical Language Modeling Toolkit (Clarkson and Rosenfeld, 1997), the EMU Speech Database System (Harrington and Cassidy, 1999), the General Architecture for Text Engineering (Bontcheva et al., 2002), the Maxent Package for Maximum Entropy Models (Baldridge et al., 2002b), and the Annotation Graph Toolkit (Maeda et al., 2002).

We use a simple path distance similarity measure, as implemented in NLTK (Loper and Bird, 2002). $$$$$ This interface is currently implemented by two modules.
We use a simple path distance similarity measure, as implemented in NLTK (Loper and Bird, 2002). $$$$$ It is well documented, easy to learn, and simple to use.

Our word pairs are lemmatized using the Wordnet based lemmatizer of NLTK (Loper and Bird, 2002). $$$$$ It is automatically extracted from docstring comments in the Python source code, using Epydoc (Loper, 2002).
Our word pairs are lemmatized using the Wordnet based lemmatizer of NLTK (Loper and Bird, 2002). $$$$$ The experience of using NLTK was very positive, both for us and for the students.

The Natural Language Toolkit, or NLTK, was developed to give a broad range of students access to the core knowledge and skills of NLP (Loper and Bird, 2002). $$$$$ NLTK: The Natural Language Toolkit
The Natural Language Toolkit, or NLTK, was developed to give a broad range of students access to the core knowledge and skills of NLP (Loper and Bird, 2002). $$$$$ We describe NLTK, the Natural Language Toolkit, which we have developed in conjunction with a course we have taught at the University of Pennsylvania.

Tokenization ,lemmatization, and stop word removal was performed using the Natural Language Toolkit (Loper and Bird, 2002). $$$$$ NLTK: The Natural Language Toolkit
Tokenization ,lemmatization, and stop word removal was performed using the Natural Language Toolkit (Loper and Bird, 2002). $$$$$ It is automatically extracted from docstring comments in the Python source code, using Epydoc (Loper, 2002).

Systems like NLTK (Loper and Bird, 2002) and Gate (Cunningham, 2002) do not offer functionality for Lexical Resource Management. $$$$$ It is automatically extracted from docstring comments in the Python source code, using Epydoc (Loper, 2002).
Systems like NLTK (Loper and Bird, 2002) and Gate (Cunningham, 2002) do not offer functionality for Lexical Resource Management. $$$$$ They found the interfaces defined by NLTK intuitive, and appreciated the ease with which they could combine different components to create complete NLP systems.

To identify content words, we used the NLTK-Lite tagger to assign a part of speech to each word (Loper and Bird, 2002). $$$$$ The token module provides basic classes for processing individual elements of text, such as words or sentences.
To identify content words, we used the NLTK-Lite tagger to assign a part of speech to each word (Loper and Bird, 2002). $$$$$ The tagger module defines a standard interface for augmenting each token of a text with supplementary information, such as its part of speech or its WordNet synset tag; and provides several different implementations for this interface.

For the NL processing, the Natural Language Toolkit (NL Toolkit or NLTK), developed at the University of Pennsylvania by Loper and Bird (2002), and available for download from Source Forge at http: //nltk.sourceforge.net/ was used. $$$$$ We describe NLTK, the Natural Language Toolkit, which we have developed in conjunction with a course we have taught at the University of Pennsylvania.
For the NL processing, the Natural Language Toolkit (NL Toolkit or NLTK), developed at the University of Pennsylvania by Loper and Bird (2002), and available for download from Source Forge at http: //nltk.sourceforge.net/ was used. $$$$$ The Natural Language Toolkit is available under an open source license from http://nltk.sf.net/.

 $$$$$ The remaining modules define data structures and interfaces for performing specific NLP tasks.
 $$$$$ We are grateful to Mitch Marcus and the Department of Computer and Information Science at the University of Pennsylvania for sponsoring the work reported here.

In the end I decided to require the students to learn python because I wanted to use NLTK, the Natural Language Toolkit (Loper and Bird, 2002). $$$$$ NLTK: The Natural Language Toolkit
In the end I decided to require the students to learn python because I wanted to use NLTK, the Natural Language Toolkit (Loper and Bird, 2002). $$$$$ This allows students to learn how to use the toolkit incrementally throughout a course.

 $$$$$ The remaining modules define data structures and interfaces for performing specific NLP tasks.
 $$$$$ We are grateful to Mitch Marcus and the Department of Computer and Information Science at the University of Pennsylvania for sponsoring the work reported here.

The Natural Language Toolkit (NLTK) was developed in conjunction with a computational linguistics course at the University of Pennsylvania in 2001 (Loper and Bird, 2002). $$$$$ NLTK: The Natural Language Toolkit
The Natural Language Toolkit (NLTK) was developed in conjunction with a computational linguistics course at the University of Pennsylvania in 2001 (Loper and Bird, 2002). $$$$$ We describe NLTK, the Natural Language Toolkit, which we have developed in conjunction with a course we have taught at the University of Pennsylvania.
