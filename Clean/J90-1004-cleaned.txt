(Shieber et al., 1990) introduces a head-driven algorithm for generating from logical forms. $$$$$ Semantic-Head-Driven Generation
(Shieber et al., 1990) introduces a head-driven algorithm for generating from logical forms. $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.

Whereas Shieber et al (1990) have discussed similar techniques in the context of semantic head-driven generation, we are concerned here with parsing. $$$$$ Semantic-Head-Driven Generation
Whereas Shieber et al (1990) have discussed similar techniques in the context of semantic head-driven generation, we are concerned here with parsing. $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.

We view the linking relation not simply as a filter to increase efficiency within the domain of syntactic analysis; this aspect is stressed by Shieber (1985) and other investigators such as Bouma (1991), but rather as a device for the top-down predictive instantiation of information, as Shieber et al (1990) have shown for semantic-head-driven generation. $$$$$ Semantic-Head-Driven Generation
We view the linking relation not simply as a filter to increase efficiency within the domain of syntactic analysis; this aspect is stressed by Shieber (1985) and other investigators such as Bouma (1991), but rather as a device for the top-down predictive instantiation of information, as Shieber et al (1990) have shown for semantic-head-driven generation. $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.

The previously proposed semantic-head-driven methods run into problems if none of the daughter constituents in the syntactic semantic rule schemata of a grammar fits the definition of a semantic head given in [Shieber et al, 1990]. $$$$$ Semantic-Head-Driven Generation
The previously proposed semantic-head-driven methods run into problems if none of the daughter constituents in the syntactic semantic rule schemata of a grammar fits the definition of a semantic head given in [Shieber et al, 1990]. $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.

For the phrase structure tree rooted with, there is no leaf which would fulfill the definition of a semantic head given in [Shieber et al, 1990] or [van Noord, 1993]. $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.
For the phrase structure tree rooted with, there is no leaf which would fulfill the definition of a semantic head given in [Shieber et al, 1990] or [van Noord, 1993]. $$$$$ Second, one of us (van Noord 1989b) has developed a general proof procedure for Horn clauses that can serve as a skeleton for both a semantic-head-driven generator and a left-corner parser.

Shieber et al (1990) show that a top-down evaluation strategy will fail for rules such as vP-*vp x, irrespective of the order of evaluation of the right-hand side categories in the rule. $$$$$ Since the NP is not connected in this sense, but the VP is, the latter will be expanded first.
Shieber et al (1990) show that a top-down evaluation strategy will fail for rules such as vP-*vp x, irrespective of the order of evaluation of the right-hand side categories in the rule. $$$$$ First, the order of processing is not left-to-right.

It is important to compare the generation strategy presented here with Semantic-head-driven generation [Shieber et al 1990, van Noord 1990] which is a direct generation algorithm from logical form encodings. $$$$$ Semantic-Head-Driven Generation
It is important to compare the generation strategy presented here with Semantic-head-driven generation [Shieber et al 1990, van Noord 1990] which is a direct generation algorithm from logical form encodings. $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.

Unlike deduction-based approaches to natural language generation in computational linguistics (e.g., Shieber et al 1990),. $$$$$ For example, consider a grammar that includes the rules Computational Linguistics Volume 16, Number 1, March 1990 31 Shieber et at.
Unlike deduction-based approaches to natural language generation in computational linguistics (e.g., Shieber et al 1990),. $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.

The algorithm in fact follows a head-driven node expansion, or search through the grammar, (as in Shieber et al, 1990), with the head of the most recently expanded node being selected for the next expansion (in step 2 of the algorithm above), until a leaf node is produced. $$$$$ Semantic-Head-Driven Generation
The algorithm in fact follows a head-driven node expansion, or search through the grammar, (as in Shieber et al, 1990), with the head of the most recently expanded node being selected for the next expansion (in step 2 of the algorithm above), until a leaf node is produced. $$$$$ The next pivot node is node [j], where rule (9) is applied.

Regular feature grammars can also be compiled into generators using a version of the Semantic Head Driven algorithm (Shieber et al, 1990). $$$$$ Semantic-Head-Driven Generation
Regular feature grammars can also be compiled into generators using a version of the Semantic Head Driven algorithm (Shieber et al, 1990). $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.

In this sense, it is not unlike (Shieber et al, 1990)'s semantic-head-driven generation. $$$$$ Semantic-Head-Driven Generation
In this sense, it is not unlike (Shieber et al, 1990)'s semantic-head-driven generation. $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.

As shown in detail in (Shieber et al, 1990), top down generators can fail to terminate on certain grammars because they lack the lexical information necessary for their well-foundedness. $$$$$ In particular, generation from grammars with recursions whose well-foundedness relies on lexical information will terminate; top-down generation regimes such as those of Wedekind (1988) or Dymetman and Isabelle (1988) lack this property; further discussion can be found in Section 2.1.
As shown in detail in (Shieber et al, 1990), top down generators can fail to terminate on certain grammars because they lack the lexical information necessary for their well-foundedness. $$$$$ However, the compiler will not generate a program that generates top-down, as Strzalkowski's does. helpen voeren help feed In summary, top-down generation algorithms, even if controlled by the instantiation status of goals, can fail to terminate on certain grammars.

The transformation is straightforward to define in its general form, and the transformed grammars can be readily compiled into efficient generators by standard feature grammar generator-compiler algorithms like Semantic Head-Driven Generation (Shieber et al, 1990). $$$$$ Semantic-Head-Driven Generation
The transformation is straightforward to define in its general form, and the transformed grammars can be readily compiled into efficient generators by standard feature grammar generator-compiler algorithms like Semantic Head-Driven Generation (Shieber et al, 1990). $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.

One standard approach to sentence generation from predicate/argument structure (like the semantic-head-driven generation in (Shieber et al., 1990)) involves a simple algorithm. $$$$$ Semantic-Head-Driven Generation
One standard approach to sentence generation from predicate/argument structure (like the semantic-head-driven generation in (Shieber et al., 1990)) involves a simple algorithm. $$$$$ Thus, for generation, we want a traversal order geared to the premise of the generation problem, that is, to the semantic structure of the sentence.

Our general method is to take as inputs to the process various communicative goals of the system, expressed as logical forms, and use them to construct a single new logical form to be input to Gemini's Semantic Head-Driven Generation algorithm (Shieber et al, 1990), which produces strings for Festival speech synthesis. $$$$$ Semantic-Head-Driven Generation
Our general method is to take as inputs to the process various communicative goals of the system, expressed as logical forms, and use them to construct a single new logical form to be input to Gemini's Semantic Head-Driven Generation algorithm (Shieber et al, 1990), which produces strings for Festival speech synthesis. $$$$$ For example, suppose a grammar associated the following strings and logical forms.

The end result of our selection and aggregation module (see section 6.2) is a fully specified logical form which is to be sent to the Semantic-Head Driven Generation component of Gemini (Shieber et al, 1990). $$$$$ Semantic-Head-Driven Generation
The end result of our selection and aggregation module (see section 6.2) is a fully specified logical form which is to be sent to the Semantic-Head Driven Generation component of Gemini (Shieber et al, 1990). $$$$$ We will mention efforts toward this end in Section 5.

 $$$$$ From this point of view, a naive top-down parser or generator performs a depth-first, left-to-right traversal of the tree.
 $$$$$ We would like to thank Mary Dalrymple and Louis des Tombe for their helpful discussions regarding this work, the Artificial Intelligence Center for their support of the research, and the participants in the MiMo2 project, a research machine translation project of some members of Eurotra-Utrecht.

Given an off-line optimization of the order in which the right-hand side categories in the rules of a logic grammar are processed (Minnen et al., 1996) the resulting processing behavior can be considered a generalization of the head corner generation approach (Shieber et al, 1990). $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.
Given an off-line optimization of the order in which the right-hand side categories in the rules of a logic grammar are processed (Minnen et al., 1996) the resulting processing behavior can be considered a generalization of the head corner generation approach (Shieber et al, 1990). $$$$$ First, the order of processing is not left-to-right.

In generation, examples of such extended processing strategies are head corner generation with its semantic linking (Shieber et al, 1990) or bottom-up (Earley) generation with a semantic filter (Shieber, 1988). $$$$$ Semantic-Head-Driven Generation
In generation, examples of such extended processing strategies are head corner generation with its semantic linking (Shieber et al, 1990) or bottom-up (Earley) generation with a semantic filter (Shieber, 1988). $$$$$ As stated in the original Earley generation paper (Shieber 1988), &quot;perhaps the most immediate problem raised by [Earley generation] is the strong requirement of semantic monotonicity.

Generation with the resulting grammar can be compared best with head corner generation (Shieber et al, 1990). $$$$$ Semantic-Head-Driven Generation
Generation with the resulting grammar can be compared best with head corner generation (Shieber et al, 1990). $$$$$ The analysis tree that we will be implicitly traversing in the course of generation is given Computational Linguistics Volume 16, Number 1, March 1990 35 Shieber et al. Semantic Head-Driven Grammar in Figure 4.
