Indeed, we have demonstrated the feasibility (Alshawi et al, 1985) of driving a parsing system directly from the information available in LDOCE by constructing dictionary entries for the PATR-H system (Shieber, 1984). $$$$$ Examples of the use of PATR-II for encoding much more complex linguistic phenomena can be found in Shieber et at.
Indeed, we have demonstrated the feasibility (Alshawi et al, 1985) of driving a parsing system directly from the information available in LDOCE by constructing dictionary entries for the PATR-H system (Shieber, 1984). $$$$$ See Shieber et al. [831 for a detailed discussion of the modeling of some of these phenomena.

We borrow the terminology and notation of PATR-II (Shieber, 1984), a minimal constraint-based formalism that extends context-free grammar. $$$$$ PATR-II grammars consist of rules with a context-free phrase structure portion and a set of unifications on the DAGs associated with the constituents that participate in the application of the rule.
We borrow the terminology and notation of PATR-II (Shieber, 1984), a minimal constraint-based formalism that extends context-free grammar. $$$$$ Off-line parsability requires that the context-free &quot;skeleton&quot; of the grammar allows no trivial cyclic derivations of the form fl One reason for maintaining the simplicity of the bare PATR-I1 formalism is to permit a clean semantics for the language.

Nearly all existing unification grammars of this kind use either term unification (the kind of unification used in resolution theorem provers, and hence provided as a primitive in PROLOG) or some version of the graph unification proposed by Kay (1985) and Shieber (1984). $$$$$ Two labels can have the same value—thus the use of the term graph rather than tree.
Nearly all existing unification grammars of this kind use either term unification (the kind of unification used in resolution theorem provers, and hence provided as a primitive in PROLOG) or some version of the graph unification proposed by Kay (1985) and Shieber (1984). $$$$$ Thus, unification is the primitive used in this device as well.

It is not, unfortunately, possible to keep it close to both FUG and PATR (Shieber 1984), but it should be possible for readers familiar with PATR to see roughly what the relation between the two is. $$$$$ More extensive discussions of various aspects of the PATR-II formalism and systems can be found in papers by Shieber tt. al., [831, Pereira and Shieber [841 and Karttunen [841.
It is not, unfortunately, possible to keep it close to both FUG and PATR (Shieber 1984), but it should be possible for readers familiar with PATR to see roughly what the relation between the two is. $$$$$ Examples of the use of PATR-II for encoding much more complex linguistic phenomena can be found in Shieber et at.

 $$$$$ Thus, the formalism uses only one representation- --DAGs---for lexical, syntactic, and semantic information, and one operation—unification--on this representation.
 $$$$$ Its positioning at the center of these trends arises, however, not from the admixture of many discrete techniques, but rather from the application of a single simple yet powerful concept to the encoding of linguistic information.

Since formalisms (i) are used in the family of the PATR parsing systems (Shieber, 1984), hereafter they will be called PATR-like formalisms. $$$$$ More extensive discussions of various aspects of the PATR-II formalism and systems can be found in papers by Shieber tt. al., [831, Pereira and Shieber [841 and Karttunen [841.
Since formalisms (i) are used in the family of the PATR parsing systems (Shieber, 1984), hereafter they will be called PATR-like formalisms. $$$$$ Insofar as more complex formalisms, such as GPSG and LFG, can be modeled as appropriate notations for PATR-II grammars, PATR-11's denotational semantics constitutes a framework in which the semantics of these formalisms can also be defined, discussed, and compared.
