We relate the algorithm to proposals by Shieber (1988). $$$$$ [Shieber, 1983] Stuart M. Shieber.
We relate the algorithm to proposals by Shieber (1988). $$$$$ [Shieber, 1985] Stuart M. Shieber.

Shieber (1988) claims that the problem of logical equivalence reduces to the knowledge representation problem. $$$$$ Finally, on a more pessimistic note, we turn to a widespread problem in all systems for automatic generation of natural language, which Ap- pelt [1987] has discussed under the rubric "the problem of logical-form equivalence".
Shieber (1988) claims that the problem of logical equivalence reduces to the knowledge representation problem. $$$$$ The problem is complicated further in that, strictly speaking, the class of equivalent logical forms from the standpoint of generation is not really closed under logical equivalence.

Two further problems are the treatment of unary rules and functors with what Shieber (1988) calls vestigial semantics, which we prefer to call identity semantics. $$$$$ However, several problems immediately present hemselves.
Two further problems are the treatment of unary rules and functors with what Shieber (1988) calls vestigial semantics, which we prefer to call identity semantics. $$$$$ asIt holds in general that closed-class lexical items---case-m~rking prepositions, function verbs, etc.~-are uniformly considered initial items for purposes of genera- tion because of their vestigial semantics.

The obvious solution is to use a lemma table or chart (as discussed by Pereira and Warren 1984 and Shieber 1988). $$$$$ The traditional solution to this problem is to store lemmas in a table, i.e., the well-formed-substring table or chart in tabular parsing algorithms.
The obvious solution is to use a lemma table or chart (as discussed by Pereira and Warren 1984 and Shieber 1988). $$$$$ N. Pereira and Stuart M. Shieber.

Shieber (1988) states that to guarantee completeness in using a precomputed entry in the chart, the entry must subsume the formula being generated top-down. $$$$$ Nonconditional i tems formed by immediate inference from a lexieal entry will be called lexical items.
Shieber (1988) states that to guarantee completeness in using a precomputed entry in the chart, the entry must subsume the formula being generated top-down. $$$$$ However, there is no guarantee that the other properties of the sentence include those of the goal; only compatibility is guaranteed.

And Bi-directional Grammar Shieber proposed auniform architecture for sentence parsing and generation based on the Early type deduction mechanism (Shieber,1988). $$$$$ Parsing as deduction.
And Bi-directional Grammar Shieber proposed auniform architecture for sentence parsing and generation based on the Early type deduction mechanism (Shieber,1988). $$$$$ [Shieber, 1983] Stuart M. Shieber.

Shieber (1988) gave the first use of Earley's algorithm for generation, but this algorithm does not. $$$$$ In particular, Pereira and Warren construct a parsing algorithm us- ing a deduction strategy which mimics Earleys algorithm.
Shieber (1988) gave the first use of Earley's algorithm for generation, but this algorithm does not. $$$$$ The exhaustive use of prediction and completion as basic inference rules does provide a complete algorithm for proving lemmas of the sort described.

As Shieber (1988) noted, the main shortcoming of Earley generation is a lack of goal-directedness that results in a proliferation of edges. $$$$$ It should be noted that this kind of problem is quite deep.
As Shieber (1988) noted, the main shortcoming of Earley generation is a lack of goal-directedness that results in a proliferation of edges. $$$$$ [Shieber, 1983] Stuart M. Shieber.

In generation, as Shieber (1988) and Appelt (1989) observe, a situation may arise in which the representation supplied as input to the process (perhaps by another program) is not itself directly suitable, but is logically equivalent to one that is. The use of distinct grammars for parsing and generation could provide a solution to this problem, but it raises others connected with management of the resulting system. $$$$$ A simple solution to this problem is to ignore the string positions in the generation process.
In generation, as Shieber (1988) and Appelt (1989) observe, a situation may arise in which the representation supplied as input to the process (perhaps by another program) is not itself directly suitable, but is logically equivalent to one that is. The use of distinct grammars for parsing and generation could provide a solution to this problem, but it raises others connected with management of the resulting system. $$$$$ Thus, the the generation process is, on the whole, quite goal-directed; the subphrases considered in the generation process are "reasonable".

As (Shieber, 1988) showed, the problem with such words is that they can not be selected on the basis of the input semantics. $$$$$ However, other phrases composed of the same words, such as Knit loves Knit, Sonny is loved, and so forth, are eliminated by the semantics filter.
As (Shieber, 1988) showed, the problem with such words is that they can not be selected on the basis of the input semantics. $$$$$ [Shieber, 1983] Stuart M. Shieber.

In (Shieber, 1988), a chart-based bottom-up generator is presented which is devoid of an indexing scheme $$$$$ This technique, a sort of indexing on meaning, replaces the indexing on string position that is more appropriate for parsing than generation.
In (Shieber, 1988), a chart-based bottom-up generator is presented which is devoid of an indexing scheme $$$$$ TM Because the formalisms are simpler, the agenda need only keep track of one type of task

Shieber (1988) showed that parsing charts can be also used in generation and raised the question, which we take up again here, of whether they constitute a natural uniform architecture for parsing and generation. $$$$$ A Uniform Architecture for Parsing and Generation Stuart M. SHIEBER Artificial Intelligence Center SRI International Menlo Park, California, USA* Abst rac t The use of a single grammar for both parsing and generation is an idea with a certain elegance, the desirability of which several researchers have noted.
Shieber (1988) showed that parsing charts can be also used in generation and raised the question, which we take up again here, of whether they constitute a natural uniform architecture for parsing and generation. $$$$$ Parsing as deduction.

In this respect, it differs from the proposal of Shieber (1988) which starts with all word edges leaving and entering a single vertex. $$$$$ Thus we need insert the lexicon only once, each word being inserted at the single position, e.g., [0, sonny ,  0].
In this respect, it differs from the proposal of Shieber (1988) which starts with all word edges leaving and entering a single vertex. $$$$$ [Shieber, 1983] Stuart M. Shieber.

Shieber (1988) has generalized this method so as to adapt to sentence generation as well. $$$$$ [Shieber, 1983] Stuart M. Shieber.
Shieber (1988) has generalized this method so as to adapt to sentence generation as well. $$$$$ [Shieber, 1985] Stuart M. Shieber.

In generation, examples of such extended processing strategies are head corner generation with its semantic linking (Shieber et al, 1990) or bottom-up (Earley) generation with a semantic filter (Shieber, 1988). $$$$$ [Shieber, 1983] Stuart M. Shieber.
In generation, examples of such extended processing strategies are head corner generation with its semantic linking (Shieber et al, 1990) or bottom-up (Earley) generation with a semantic filter (Shieber, 1988). $$$$$ [Shieber, 1985] Stuart M. Shieber.

The use of such a semantic filter in bottom-up evaluation requires the grammar to obey the semantic monotonicity constraint in order to ensure completeness (Shieber, 1988) (see below). $$$$$ Semantic monotonicity is, by intention, a property of the particular grammar we have been using.
The use of such a semantic filter in bottom-up evaluation requires the grammar to obey the semantic monotonicity constraint in order to ensure completeness (Shieber, 1988) (see below). $$$$$ considered (although the lexicon that was used contained them) as they do not pass the semantic filter.

In order to obtain a generator similar to the bottom-up generator as described in Shieber (1988) the compilation process can be modified such that only lexical entries are extended with magic literals. $$$$$ d14 latter as lexical entries.
In order to obtain a generator similar to the bottom-up generator as described in Shieber (1988) the compilation process can be modified such that only lexical entries are extended with magic literals. $$$$$ PHRED

The first demonstration of using charts for generation appeared in Shieber (1988). $$$$$ [Shieber, 1983] Stuart M. Shieber.
The first demonstration of using charts for generation appeared in Shieber (1988). $$$$$ [Shieber, 1985] Stuart M. Shieber.

In particular, unlike an Earley deduction generator (Shieber, 1988), it allows use of semantically non monotonic grammars, yet unlike top down methods, it also permits left-recursion. $$$$$ Unlike LI~ parsing, 4For formalisms with complex structured nonterminals, the start "symbol" need only be unifiable with the left-haud-side nonterminal.
In particular, unlike an Earley deduction generator (Shieber, 1988), it allows use of semantically non monotonic grammars, yet unlike top down methods, it also permits left-recursion. $$$$$ In addition, a generator was built that is complete for semantically monotonic grammars.

In previous work (Shieber, 1988), however, one of us attempted to characterize these differing properties in such a way that a single uniform architecture, appropriately parameterized, might be used for both natural-language processes. $$$$$ We discuss our current implementation f such an architecture, which is parameterized in such a way that it can be used for either purpose with grammars written in the PATR formal- ism.
In previous work (Shieber, 1988), however, one of us attempted to characterize these differing properties in such a way that a single uniform architecture, appropriately parameterized, might be used for both natural-language processes. $$$$$ In particular, parsing and generatioa
