Principle-based parsers are also designed with universal grammar in mind (Lin 1994), but have yet to demonstrate large scale coverage in several languages. $$$$$ PRINCIPAR - An Efficient Broad-Coverage Principle-Based Parser
Principle-based parsers are also designed with universal grammar in mind (Lin 1994), but have yet to demonstrate large scale coverage in several languages. $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

In this paper, we adopt Minipar (Lin, 1994) to parse sentences and to construct syntactic trees. $$$$$ Then, a message passing algorithm for OB-parsing is used to construct a shared parse forest.
In this paper, we adopt Minipar (Lin, 1994) to parse sentences and to construct syntactic trees. $$$$$ The parse trees of the input sentence can be retrieved h'om the parse forest one by one.

English dependency trees are provided by Minipar (Lin, 1994). $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.
English dependency trees are provided by Minipar (Lin, 1994). $$$$$ The parse trees of the input sentence can be retrieved h'om the parse forest one by one.

It is based on Principar, which is described in Lin (1994). $$$$$ PRINCIPAR - An Efficient Broad-Coverage Principle-Based Parser
It is based on Principar, which is described in Lin (1994). $$$$$ Principle-based grammars, such as Govern- ment-Binding (GB) theory (Chomsky, 1981; Haegeman, 1991), offer many advantages over rule-based and unification-based grammars, such as the universality ofprinciples and mod- ularity of components in the grammar.

These features are obtained by parsing a large corpus using Minipar (Lin 1994), a broad-coverage English parser. $$$$$ PRINCIPAR - An Efficient Broad-Coverage Principle-Based Parser
These features are obtained by parsing a large corpus using Minipar (Lin 1994), a broad-coverage English parser. $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

We used Minipar (Lin 1994), a broad coverage parser, to parse 3GB of newspaper text from the Aquaint (TREC-9) collection. $$$$$ PRINCIPAR - An Efficient Broad-Coverage Principle-Based Parser
We used Minipar (Lin 1994), a broad coverage parser, to parse 3GB of newspaper text from the Aquaint (TREC-9) collection. $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

We parse questions and candidate sentences with MiniPar (Lin, 1994), a fast and robust parser for grammatical dependency relations. $$$$$ Our experiments have shown that the parser is very fast.
We parse questions and candidate sentences with MiniPar (Lin, 1994), a fast and robust parser for grammatical dependency relations. $$$$$ The correct parses for all the sentences in TM)le 1 are returned by the parser.

We used Minipar (Lin 1994), a broad coverage English parser, to parse about 1GB (144M words) of newspaper text from the TREC collection (1988 AP Newswire, 1989-90 LA Times, and 1991 San Jose Mercury) at a speed of about 500words/second on a PIII-750 with 512MB memory. $$$$$ PRINCIPAR - An Efficient Broad-Coverage Principle-Based Parser
We used Minipar (Lin 1994), a broad coverage English parser, to parse about 1GB (144M words) of newspaper text from the TREC collection (1988 AP Newswire, 1989-90 LA Times, and 1991 San Jose Mercury) at a speed of about 500words/second on a PIII-750 with 512MB memory. $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

We parse a 6 GB newspaper (TREC9 and TREC 2002 collection) corpus using the dependency parser Minipar (Lin, 1994). $$$$$ The parse trees of the input sentence can be retrieved h'om the parse forest one by one.
We parse a 6 GB newspaper (TREC9 and TREC 2002 collection) corpus using the dependency parser Minipar (Lin, 1994). $$$$$ GB principles are implemented as local and percolation constraints on the items.

For the co-occurrence model, we used Minipar (Lin 1994), a broad coverage parser, to parse each data set. $$$$$ PRINCIPAR - An Efficient Broad-Coverage Principle-Based Parser
For the co-occurrence model, we used Minipar (Lin 1994), a broad coverage parser, to parse each data set. $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

For the algorithm discussed in Section 4.1, we derived our descriptive properties using the output of the dependency analysis generated by the Minipar (Lin, 1994) dependency parser. $$$$$ Sentence analysis is divided into three steps.
For the algorithm discussed in Section 4.1, we derived our descriptive properties using the output of the dependency analysis generated by the Minipar (Lin, 1994) dependency parser. $$$$$ Therefore, only (a) is output as the parse tree of the sentence.

 $$$$$ At that point, the initial message for the next lexical item is fed into the network.
 $$$$$ This re'- search was supported by NaturM Sciences and Engineering Research Council of Canada grant OGP121338.

We parsed a 125-million word newspaper corpus with Minipar3, a descendent of Principar (Lin, 1994). $$$$$ PRINCIPAR - An Efficient Broad-Coverage Principle-Based Parser
We parsed a 125-million word newspaper corpus with Minipar3, a descendent of Principar (Lin, 1994). $$$$$ The input sentence is parsed in the follow- ing steps.

We used Minipar (Lin 1994), a broad coverage parser, to analyze text. $$$$$ PRINCIPAR - An Efficient Broad-Coverage Principle-Based Parser
We used Minipar (Lin 1994), a broad coverage parser, to analyze text. $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002). $$$$$ PRINCIPAR - An Efficient Broad-Coverage Principle-Based Parser
We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002). $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.

English dependency trees are provided by Minipar (Lin, 1994). $$$$$ We present an efI\]cient, broad-coverage, principle-based parser for English.
English dependency trees are provided by Minipar (Lin, 1994). $$$$$ The parse trees of the input sentence can be retrieved h'om the parse forest one by one.

The Simplified Clause: In order to extract clauses from the text, we use Lin's parser MINI PAR (Lin, 1994). $$$$$ I t ln order to simplify the diagrain, we did nol.
The Simplified Clause: In order to extract clauses from the text, we use Lin's parser MINI PAR (Lin, 1994). $$$$$ Interested reader is referred to Lin (1993) for more details.

 $$$$$ At that point, the initial message for the next lexical item is fed into the network.
 $$$$$ This re'- search was supported by NaturM Sciences and Engineering Research Council of Canada grant OGP121338.

To get the context values and implement the syntactic filters, we parsed our corpora with Minipar (Lin,1994). $$$$$ The input sentence is parsed in the follow- ing steps.
To get the context values and implement the syntactic filters, we parsed our corpora with Minipar (Lin,1994). $$$$$ When attribute values are used in messages, the complexity of the Mgorithm is not yet known.

Widely used dependency parsers which generate deep dependency representations include Minipar (Lin, 1994), which uses a declarative grammar, and the Stanford parser (Levy and Manning, 2004), which performs a conversion from a standard phrase-structure parse. $$$$$ The structure of the parse forest is similar to (Billot and Long, 1989) and (Tomita, 1986), but extended to include attribute values.
Widely used dependency parsers which generate deep dependency representations include Minipar (Lin, 1994), which uses a declarative grammar, and the Stanford parser (Levy and Manning, 2004), which performs a conversion from a standard phrase-structure parse. $$$$$ One of the problems with many parsers is that they typically generate far more parses than humans normally do.
